Index: src/main/java/org/example/Scene/LoginController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.scene;\r\n\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.layout.Pane;\r\nimport org.example.Main;\r\nimport org.example.Session;\r\nimport org.example.models.Admin;\r\nimport org.example.models.CommonUser;\r\nimport org.example.utils.DialogUtils;\r\nimport org.example.utils.InputChecker;\r\nimport org.example.utils.JdbcUtils;\r\n\r\nimport java.io.IOException;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class LoginController {\r\n    @FXML\r\n    private TextField TeleField;\r\n    @FXML\r\n    private TextField ID_numberField;\r\n    @FXML\r\n    private TextField AgeField;\r\n    @FXML\r\n    private PasswordField SignUpPasswordField;\r\n    @FXML\r\n    private TextField SignUpUserField;\r\n    @FXML\r\n    private Pane SignUp_pane;\r\n    @FXML\r\n    private Pane Login_pane;\r\n    @FXML\r\n    private Button LoginBut;\r\n\r\n    @FXML\r\n    private Button SignUp;\r\n\r\n    @FXML\r\n    private Label ProjectName;\r\n\r\n    @FXML\r\n    private TextField UserField;\r\n\r\n    @FXML\r\n    private Label UsernameField;\r\n\r\n    @FXML\r\n    private PasswordField passwordField;\r\n\r\n    @FXML\r\n    private Label Password;\r\n    @FXML\r\n    private CheckBox isAdmin;\r\n\r\n    @FXML\r\n    private Main mainApp;\r\n    @FXML\r\n    public void setMainApp(Main mainApp) {\r\n        this.mainApp = mainApp;\r\n    }\r\n\r\n    public Main getMainApp() {\r\n        return mainApp;\r\n    }\r\n    @FXML\r\n    void LogIn() {\r\n            System.out.println(\"The button has been clicked!\");\r\n            JdbcUtils  jdbcUtils = new JdbcUtils();\r\n            jdbcUtils.getConnection();\r\n            String sql=null;\r\n\r\n            if(isAdmin.isSelected()){\r\n                sql = \"select * from `admin` where username = ? and password = ?\";\r\n            }\r\n            else{\r\n                sql = \"select * from `commonUser` where username = ? and password = ?\";\r\n            }\r\n            List<Object> params = new ArrayList<>();\r\n            params.add(UserField.getText());\r\n            params.add(passwordField.getText());\r\n            System.out.println(UserField.getText());\r\n            System.out.println(passwordField.getText());\r\n\r\n            try{\r\n                if(isAdmin.isSelected()){\r\n                    Admin admin = jdbcUtils.findSimpleProResult(sql, params, Admin.class);\r\n                    if(admin==null){\r\n                        throw new NullPointerException(\"There is wrong with your username or password\");\r\n\r\n                    }\r\n                    System.out.println(admin);\r\n                    mainApp.setUserNow(admin);\r\n                    Session.setUsername(admin.getUsername());\r\n                    Session.setType(\"admin\");\r\n                    Session.setId(admin.getId());\r\n                }\r\n\r\n                else {\r\n                    CommonUser commonUser = jdbcUtils.findSimpleProResult(sql, params, CommonUser.class);\r\n                    if(commonUser == null){\r\n                        throw new NullPointerException(\"There is wrong with your username or password\");\r\n                    }\r\n                    System.out.println(commonUser);\r\n                    mainApp.setUserNow(commonUser);\r\n                    Session.setUsername(commonUser.getUsername());\r\n                    Session.setType(\"commonUser\");\r\n                }\r\n                FXMLLoader loader = new FXMLLoader();\r\n                if( isAdmin.isSelected()){\r\n                    loader.setLocation(Main.class.getResource(\"scene/AdminView.fxml\"));\r\n                }\r\n                else{\r\n                    loader.setLocation(Main.class.getResource(\"scene/CommonUserView.fxml\"));\r\n                }\r\n                Parent newView = loader.load();\r\n               if (isAdmin.isSelected()) {\r\n                    AdminViewController adminVIewController = loader.getController();\r\n                    System.out.println(adminVIewController);\r\n                    System.out.println(mainApp);\r\n                    adminVIewController.setMainApp(mainApp);\r\n                } else {\r\n                    CommonUserViewController commonUserViewController = loader.getController();\r\n                    System.out.println(\"mainApp: \" + mainApp);\r\n                    commonUserViewController.setMainApp(mainApp);\r\n                }\r\n                mainApp.getPrimaryStage().setScene(new Scene(newView));\r\n            } catch (Exception e) {\r\n                DialogUtils.tips(mainApp.getPrimaryStage(), e.getMessage());\r\n                System.out.println(\"出现了一些问题，请查看提示信息\");\r\n\r\n            }\r\n\r\n    }\r\n\r\n\r\n    @FXML\r\n    void signup() throws Exception{\r\n        System.out.println(\"The SignUp button is clicked\");\r\n        SignUp_pane.setVisible(true);\r\n        Login_pane.setVisible(false);\r\n\r\n    }\r\n    @FXML\r\n    void Back_up()throws Exception {\r\n        SignUp_pane.setVisible(false);\r\n        Login_pane.setVisible(true);\r\n    }\r\n\r\n    @FXML\r\n    void Sign_up()throws Exception {\r\n       String errormessage = InputChecker.commonUserSignUpCheck(SignUpUserField.getText(),SignUpPasswordField.getText(),AgeField.getText(), TeleField.getText(),ID_numberField.getText());\r\n\r\n\r\n        if(errormessage==null){\r\n            JdbcUtils jdbcUtils = new JdbcUtils();\r\n            jdbcUtils.getConnection();\r\n            String sql = \"insert into `commonUser`(username, password, age, tel, sid) \" +\r\n                    \"values(?, ?, ?, ?, ?)\";\r\n            List<Object> params = new ArrayList<>();\r\n            params.add(SignUpUserField.getText());\r\n            params.add(SignUpPasswordField.getText());\r\n            params.add(AgeField.getText());\r\n            params.add(TeleField.getText());\r\n            params.add(ID_numberField.getText());\r\n            try{\r\n                jdbcUtils.updateByPreparedStatement(sql, params);\r\n\r\n\r\n            } catch (SQLException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            CommonUser newUser=new CommonUser((SignUpUserField.getText()),SignUpPasswordField.getText());\r\n            mainApp.setUserNow(newUser);\r\n            sql=\"select * from `commonUser` where username = ? and password = ?\";\r\n            params.clear();\r\n            params.add(SignUpUserField.getText());\r\n            params.add(SignUpPasswordField.getText());\r\n            try{\r\n                CommonUser now = jdbcUtils.findSimpleProResult(sql, params, CommonUser.class);\r\n                Session.setUsername(now.getUsername());\r\n                Session.setType(\"commonUser\");\r\n            }catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n            try {\r\n                FXMLLoader loader = new FXMLLoader();\r\n                loader.setLocation(Main.class.getResource(\"scene/CommonUserView.fxml\"));\r\n                Parent commonUserView = loader.load();\r\n                CommonUserViewController commonUserViewController = loader.getController();\r\n                mainApp.getPrimaryStage().setScene(new Scene(commonUserView, 1152, 736));\r\n                commonUserViewController.setMainApp(mainApp);\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n        else {\r\n            DialogUtils.tips(mainApp.getPrimaryStage(), errormessage);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/Scene/LoginController.java b/src/main/java/org/example/Scene/LoginController.java
--- a/src/main/java/org/example/Scene/LoginController.java	(revision cc0a39f6b07677981707a0dcc6b6c89b51a0ba64)
+++ b/src/main/java/org/example/Scene/LoginController.java	(date 1683635314411)
@@ -68,6 +68,10 @@
     public Main getMainApp() {
         return mainApp;
     }
+
+    /**
+     * Login with Admin or commonuser.
+     */
     @FXML
     void LogIn() {
             System.out.println("The button has been clicked!");
@@ -132,13 +136,15 @@
                 mainApp.getPrimaryStage().setScene(new Scene(newView));
             } catch (Exception e) {
                 DialogUtils.tips(mainApp.getPrimaryStage(), e.getMessage());
-                System.out.println("出现了一些问题，请查看提示信息");
+                System.out.println("There is something wrong!");
 
             }
 
     }
 
-
+    /**
+     * Turn to Sign Up page.
+     */
     @FXML
     void signup() throws Exception{
         System.out.println("The SignUp button is clicked");
@@ -146,15 +152,20 @@
         Login_pane.setVisible(false);
 
     }
+    /**
+     * Back to Log In page.
+     */
     @FXML
     void Back_up()throws Exception {
         SignUp_pane.setVisible(false);
         Login_pane.setVisible(true);
     }
-
+    /**
+     * Sign Up for CommonUse.
+     */
     @FXML
     void Sign_up()throws Exception {
-       String errormessage = InputChecker.commonUserSignUpCheck(SignUpUserField.getText(),SignUpPasswordField.getText(),AgeField.getText(), TeleField.getText(),ID_numberField.getText());
+       String errormessage = InputChecker.commonUserSignUpCheck(SignUpUserField.getText(),SignUpPasswordField.getText(), Integer.valueOf(AgeField.getText()), TeleField.getText(),ID_numberField.getText());
 
 
         if(errormessage==null){
@@ -170,8 +181,6 @@
             params.add(ID_numberField.getText());
             try{
                 jdbcUtils.updateByPreparedStatement(sql, params);
-
-
             } catch (SQLException e) {
                 e.printStackTrace();
             }
Index: src/main/java/org/example/Scene/AdminViewController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.scene;\r\nimport javafx.application.Application;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.image.Image;\r\nimport javafx.stage.Stage;\r\nimport org.example.Main;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.ChoiceBox;\r\nimport javafx.scene.control.ComboBox;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.TableColumn;\r\nimport javafx.scene.control.TableView;\r\nimport javafx.scene.control.TextArea;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.layout.BorderPane;\r\nimport javafx.scene.shape.Rectangle;\r\nimport org.example.Session;\r\nimport org.example.models.*;\r\nimport org.example.utils.*;\r\n\r\nimport java.io.*;\r\nimport java.net.MalformedURLException;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Map;\r\npublic class AdminViewController extends Application{\r\n\r\n    @FXML\r\n    private TableColumn<Movie, Integer> movieIdColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommonUser, Integer> commonUserIdColumn;\r\n\r\n    @FXML\r\n    private TextField adminIdField;\r\n\r\n    @FXML\r\n    private Rectangle imageBorder;\r\n\r\n    @FXML\r\n    private TextField movieActorField;\r\n\r\n    @FXML\r\n    private TextArea movieIntroArea;\r\n\r\n    @FXML\r\n    private BorderPane commonUserPane;\r\n\r\n    @FXML\r\n    private Label toStatisticButton;\r\n\r\n    @FXML\r\n    private TextField commonUserIdField;\r\n\r\n    @FXML\r\n    private ChoiceBox<String> movieClassNameBox;\r\n\r\n    @FXML\r\n    private ImageView movieCover;\r\n\r\n    @FXML\r\n    private Label userNameLabel;\r\n\r\n    @FXML\r\n    private Label toCommonUserButton;\r\n\r\n    @FXML\r\n    private Button imageButton;\r\n\r\n    @FXML\r\n    private TextField movieDirectorField;\r\n\r\n    @FXML\r\n    private BorderPane adminPane;\r\n\r\n    @FXML\r\n    private TextField commonUserAgeField;\r\n\r\n    @FXML\r\n    private TextField commonUserTelField;\r\n\r\n    @FXML\r\n    private TextField commonUserSidField;\r\n\r\n    @FXML\r\n    private TextField movieNameField;\r\n\r\n    @FXML\r\n    private TextField commonUserNameField;\r\n\r\n    @FXML\r\n    private TableColumn<Admin, String> adminPasswordColumn;\r\n\r\n    @FXML\r\n    private Label toMovieButton;\r\n\r\n    @FXML\r\n    private TableView<Admin> adminTableView;\r\n\r\n    @FXML\r\n    private TextField movieIdField;\r\n\r\n    @FXML\r\n    private TableColumn<Admin, String> adminNameColumn;\r\n\r\n    @FXML\r\n    private TextField commonUserpassField;\r\n\r\n    @FXML\r\n    private TableColumn<Movie, String> movieNameColumn;\r\n\r\n    @FXML\r\n    private Label adminIdLabel;\r\n\r\n    @FXML\r\n    private TextField adminNameField;\r\n\r\n    @FXML\r\n    private TableView<CommonUser> commonUserTableView;\r\n\r\n    @FXML\r\n    private TableColumn<CommonUser, String> commonUserNameColumn;\r\n\r\n    @FXML\r\n    private Label logOutButton;\r\n\r\n    @FXML\r\n    private TextField movieYearPriceField;\r\n\r\n    @FXML\r\n    private Label adminPasswordLabel;\r\n\r\n    @FXML\r\n    private TableColumn<Admin, Integer> adminIdColumn;\r\n\r\n    @FXML\r\n    private Label adminNameLabel;\r\n\r\n    @FXML\r\n    private TextField adminPasswordField;\r\n\r\n    @FXML\r\n    private Label toAdminButton;\r\n\r\n    @FXML\r\n    private TableView<Movie> movieTableView;\r\n\r\n    @FXML\r\n    private BorderPane moviePane;\r\n\r\n    private Main mainApp;\r\n\r\n    @FXML\r\n    private TableView<Order> fooOrderTableView;\r\n    @FXML\r\n    private TableColumn<Order, Integer> fooOrderIdColumn;\r\n    @FXML\r\n    private TableColumn<Order, String> fooUserNameColumn;\r\n    @FXML\r\n    private TableColumn<Order, String>  fooMagazineNameColumn;\r\n    @FXML\r\n    private TableColumn<Order, Integer> fooTotalPriceColumn;\r\n    @FXML\r\n    private TableView<MovieClass> fooMagazineClassTableView;\r\n    @FXML\r\n    private TableColumn<MovieClass, Integer> fooMagazineClassIdColumn;\r\n    @FXML\r\n    private TableColumn<MovieClass, String> fooMagazineClassNameColumn;\r\n    @FXML\r\n    private TextField fooMagazineClassIdField;\r\n    @FXML\r\n    private TextField fooMagazineClassNameField;\r\n    @FXML\r\n    private TextField fooOrderIdField;\r\n    @FXML\r\n    private ComboBox<String> fooOrderUsernameBox;\r\n    @FXML\r\n    private ComboBox<String> fooOrderMagazineNameBox;\r\n    @FXML\r\n    private ChoiceBox<String> fooMonthBox;\r\n    @FXML\r\n    private ChoiceBox<String> fooCopiesNumBox;\r\n    @FXML\r\n    private TextField fooTotalPriceField;\r\n\r\n    private ObservableList<Admin> adminData = FXCollections.observableArrayList();\r\n    private ObservableList<Movie> magazineData = FXCollections.observableArrayList();\r\n    private ObservableList<CommonUser> commonUsersData = FXCollections.observableArrayList();\r\n    private ObservableList<Order> seOrderData = FXCollections.observableArrayList();\r\n    private ObservableList<Order> fooOrderData = FXCollections.observableArrayList();\r\n    private ObservableList<MovieClass> fooMagazineClassData = FXCollections.observableArrayList();\r\n\r\n    // 各种选项盒子的数据\r\n    private ObservableList<String> choiceItems = FXCollections.observableArrayList();\r\n    private ObservableList<String> seMagazineNames = FXCollections.observableArrayList();\r\n    private ObservableList<String> seMagazineClasses = FXCollections.observableArrayList();\r\n    private ObservableList<String> seUserNames = FXCollections.observableArrayList();\r\n    private ObservableList<String> anUserNames = FXCollections.observableArrayList();\r\n    private ObservableList<String> anMagazineNames = FXCollections.observableArrayList();\r\n    private ObservableList<String> fooOrderUsernames = FXCollections.observableArrayList();\r\n    private ObservableList<String> fooOrderMagazineNames = FXCollections.observableArrayList();\r\n\r\n    //杂志封面临时文件\r\n    private File imageFile;\r\n\r\n    @FXML\r\n    private void initialize() {\r\n        adminIdColumn.setCellValueFactory(cellData -> cellData.getValue().idProperty().asObject());\r\n        adminNameColumn.setCellValueFactory(cellData -> cellData.getValue().usernameProperty());\r\n        adminPasswordColumn.setCellValueFactory(cellDate -> cellDate.getValue().passwordProperty());\r\n        adminTableView.getSelectionModel().selectedItemProperty().addListener(\r\n                (observable, oldValue, newValue) -> updateAdminDetail(newValue)\r\n        );\r\n        commonUserIdColumn.setCellValueFactory(cellData -> cellData.getValue().idProperty().asObject());\r\n        commonUserNameColumn.setCellValueFactory(cellData -> cellData.getValue().usernameProperty());\r\n        commonUserTableView.getSelectionModel().selectedItemProperty().addListener(\r\n                (observable, oldValue, newValue) -> updateCommonDetail(newValue)\r\n        );\r\n\r\n        movieIdColumn.setCellValueFactory(cellData -> cellData.getValue().idProperty().asObject());\r\n        movieNameColumn.setCellValueFactory(cellData -> cellData.getValue().nameProperty());\r\n        movieTableView.getSelectionModel().selectedItemProperty().addListener(\r\n                (observable, oldValue, newValue) -> updateMovieDetail(newValue)\r\n        );\r\n\r\n        /*fooMagazineClassIdColumn.setCellValueFactory(cellData -> cellData.getValue().idProperty().asObject());\r\n        fooMagazineClassNameColumn.setCellValueFactory(cellData -> cellData.getValue().nameProperty());\r\n        fooMagazineClassTableView.getSelectionModel().selectedItemProperty().addListener(\r\n                (observable, oldValue, newValue) -> updateMovieClassDetail(newValue)\r\n        );*/\r\n\r\n        initAdminTable();\r\n        initCommonUserTable();\r\n        initMovieTable();\r\n        //initSearchTable();\r\n        //initStatisticView();\r\n        initUserNameLabel();\r\n        //initMagazineClassTableAndOrderTable();\r\n    }\r\n\r\n    public void initUserNameLabel() {\r\n        if (Session.getType().equals(\"commonUser\")) {\r\n            userNameLabel.setText(Session.getUsername());\r\n        } else if (Session.getType().equals(\"admin\")) {\r\n            userNameLabel.setText(Session.getUsername());\r\n        }\r\n    }\r\n\r\n    public void initAdminTable() {\r\n        JdbcUtils jdbcUtils = new JdbcUtils();\r\n        jdbcUtils.getConnection();\r\n        String sql = \"select * from `admin`\";\r\n        List<Object> params = new ArrayList<>();\r\n        try {\r\n            List<Admin> admins = jdbcUtils.findMoreProResult(sql, params, Admin.class);\r\n            adminData.clear();\r\n            adminData.addAll(admins);\r\n            adminTableView.setItems(adminData);\r\n            adminTableView.getSelectionModel().selectFirst();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    private void initCommonUserTable() {\r\n        JdbcUtils jdbcUtils = new JdbcUtils();\r\n        jdbcUtils.getConnection();\r\n        String sql = \"select * from `commonUser`;\";\r\n        List<Object> params = new ArrayList<>();\r\n        try {\r\n            List<CommonUser> commonUsers = jdbcUtils.findMoreProResult(sql, params, CommonUser.class);\r\n            commonUsersData.clear();\r\n            commonUsersData.addAll(commonUsers);\r\n            commonUserTableView.setItems(commonUsersData);\r\n            commonUserTableView.getSelectionModel().selectFirst();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    private void initMovieTable() {\r\n        JdbcUtils jdbcUtils = new JdbcUtils();\r\n        jdbcUtils.getConnection();\r\n        String sql = \"select a.id, a.coverPath, a.`name`, a.director, a.actor, a.intro, b.className from `movie` a, `mClass` b where a.classNumber = b.id;\";\r\n        List<Object> params = new ArrayList<>();\r\n        try {\r\n            List<Movie> magazines = jdbcUtils.findMoreProResult(sql, params, Movie.class);\r\n            magazineData.clear();\r\n            magazineData.addAll(magazines);\r\n            movieTableView.setItems(magazineData);\r\n            movieTableView.getSelectionModel().selectFirst();\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private void initBox(String sql, ComboBox<String> box, ObservableList<String> items) {\r\n        JdbcUtils jdbcUtils = new JdbcUtils();\r\n        jdbcUtils.getConnection();\r\n        List<Object> params = new ArrayList<>();\r\n        try {\r\n            items.clear();\r\n            List<Map<String, Object>> names = jdbcUtils.findModeResult(sql, params);\r\n            for (Map<String, Object> name : names) {\r\n                items.add(name.get(\"name\").toString());\r\n            }\r\n            box.setItems(items);\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private void updateAdminDetail(Admin admin) {\r\n        if (admin != null) {\r\n            adminIdField.setText(Integer.toString(admin.getId()));\r\n            adminNameField.setText(admin.getUsername());\r\n            adminPasswordField.setText(admin.getPassword());\r\n        }\r\n    }\r\n\r\n    private void updateCommonDetail(CommonUser solo) {\r\n        if (solo != null) {\r\n            commonUserIdField.setText(Integer.toString(solo.getId()));\r\n            commonUserNameField.setText(solo.getUsername());\r\n            commonUserpassField.setText(solo.getPassword());\r\n            commonUserSidField.setText(solo.getSid());\r\n            commonUserTelField.setText(solo.getTel());\r\n            commonUserAgeField.setText(solo.getAge());\r\n        }\r\n    }\r\n    private void updateMovieClassDetail(MovieClass solo) {\r\n        if (solo != null) {\r\n            fooMagazineClassIdField.setText(Integer.toString(solo.getId()));\r\n            fooMagazineClassNameField.setText(solo.getName());\r\n        }\r\n    }\r\n\r\n    private void updateMovieDetail(Movie solo) {\r\n        if (solo != null) {\r\n            movieIdField.setText(Integer.toString(solo.getId()));\r\n            movieNameField.setText(solo.getName());\r\n            movieDirectorField.setText(solo.getDirector());\r\n            movieActorField.setText(solo.getActor());\r\n            //处理ChoiceBox的相关问题\r\n            JdbcUtils jdbcUtils = new JdbcUtils();\r\n            jdbcUtils.getConnection();\r\n            String sql = \"select className from `mClass`;\";\r\n            List<Object> params = new ArrayList<>();\r\n\r\n            try {\r\n                List<Map<String, Object>> classNames = jdbcUtils.findModeResult(sql, params);\r\n                System.out.println(classNames);\r\n                choiceItems.clear();\r\n                for (Map<String, Object> className : classNames) {\r\n                    choiceItems.add(className.get(\"className\").toString());\r\n                }\r\n                movieClassNameBox.setItems(choiceItems);\r\n                movieClassNameBox.setValue(solo.getClassName());\r\n            } catch (SQLException e) {\r\n                e.printStackTrace();\r\n            }\r\n            movieIntroArea.setText(solo.getIntro());\r\n            //System.out.println(solo.getCoverPath());\r\n            File newFile = new File(\"src/main/resources/org/example/scene/images/\" + solo.getCoverPath());\r\n            //System.out.println(newFile.getAbsoluteFile().toURI());\r\n\r\n            movieCover.setImage(new Image(newFile.getAbsoluteFile().toURI().toString()));\r\n            UIAdjistUtils.adjustImageBorder(movieCover, imageBorder);\r\n            imageFile = new File(\"src/main/resources/org/example/scene/images/\" + solo.getCoverPath());\r\n            System.out.println(imageFile.getAbsolutePath());\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void start(Stage primaryStage){\r\n\r\n        }\r\n\r\n    public void setMainApp(Main mainApp) {\r\n        this.mainApp = mainApp;\r\n    }\r\n    \r\n    @FXML\r\n    void handleToMovie() {\r\n        commonUserPane.setVisible(false);\r\n        adminPane.setVisible(false);\r\n        initMovieTable();\r\n        moviePane.setVisible(true);\r\n    }\r\n\r\n    @FXML\r\n    void handleToStatistic(ActionEvent event) {\r\n\r\n    }\r\n\r\n    @FXML\r\n    void handleToCommonUser() {\r\n        moviePane.setVisible(false);\r\n        adminPane.setVisible(false);\r\n        initCommonUserTable();\r\n        commonUserPane.setVisible(true);\r\n    }\r\n\r\n    @FXML\r\n    void handleToAdmin() {\r\n        moviePane.setVisible(false);\r\n        commonUserPane.setVisible(false);\r\n        initAdminTable();\r\n        adminPane.setVisible(true);\r\n    }\r\n\r\n    @FXML\r\n    void handleLogout() {\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader();\r\n            loader.setLocation(Main.class.getResource(\"scene/Login.fxml\"));\r\n            Parent loginView = loader.load();\r\n            LoginController loginController = loader.getController();\r\n            mainApp.getPrimaryStage().setScene(new Scene(loginView, 1152, 640));\r\n            mainApp.getPrimaryStage().show();\r\n            loginController.setMainApp(mainApp);\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    @FXML\r\n    private void handleSubmitAdmin() {\r\n        Admin oldInfo = adminTableView.getSelectionModel().getSelectedItem();\r\n        String id = adminIdField.getText();\r\n        if (id == null || id.length() == 0) {\r\n            DialogUtils.tips(mainApp.getPrimaryStage(), \"id为空\");\r\n            return;\r\n        } else {\r\n            try {\r\n                Integer.parseInt(id);\r\n            } catch (Exception e) {\r\n                DialogUtils.tips(mainApp.getPrimaryStage(), \"id应只含有数字\");\r\n                return;\r\n            }\r\n        }\r\n        Admin newInfo = new Admin(Integer.parseInt(adminIdField.getText()), adminNameField.getText(), adminPasswordField.getText());\r\n        String errorMessage = InputChecker.adminInfoUpdateCheck(oldInfo, newInfo);\r\n        if (errorMessage == null) {\r\n            JdbcUtils jdbcUtils = new JdbcUtils();\r\n            jdbcUtils.getConnection();\r\n            String sql = \"update `admin` set username = ?, password = ? where id = ?\";\r\n            List<Object> params = new ArrayList<>();\r\n            params.add(newInfo.getUsername());\r\n            params.add(newInfo.getPassword());\r\n            params.add(newInfo.getId());\r\n            try {\r\n                jdbcUtils.updateByPreparedStatement(sql, params);\r\n                DialogUtils.good(mainApp.getPrimaryStage(), \"更新成功\");\r\n                // 更新一下现在在线的用户\r\n                if (Session.getId() == newInfo.getId()) {\r\n                    Session.setUsername(newInfo.getUsername());\r\n                    initUserNameLabel();\r\n                }\r\n            } catch (SQLException e) {\r\n                e.printStackTrace();\r\n            }\r\n            initAdminTable();\r\n        } else {\r\n            DialogUtils.tips(mainApp.getPrimaryStage(), errorMessage);\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    private void handleNewAdmin() {\r\n        String errorMessage = InputChecker.adminSignUpCheck(adminIdField.getText(), adminNameField.getText(), adminPasswordField.getText());\r\n        if (errorMessage == null) {\r\n            JdbcUtils jdbcUtils = new JdbcUtils();\r\n            jdbcUtils.getConnection();\r\n            String sql = \"insert into `admin`(id, username, password) values(?, ?, ?)\";\r\n            List<Object> params = new ArrayList<>();\r\n            params.add(Integer.parseInt(adminIdField.getText()));\r\n            params.add(adminNameField.getText());\r\n            params.add(adminPasswordField.getText());\r\n\r\n            try {\r\n                jdbcUtils.updateByPreparedStatement(sql, params);\r\n                DialogUtils.good(mainApp.getPrimaryStage(), \"添加成功\");\r\n                initAdminTable();\r\n            } catch (SQLException e) {\r\n                e.printStackTrace();\r\n            }\r\n        } else {\r\n            DialogUtils.tips(mainApp.getPrimaryStage(), errorMessage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 删除所选项，将该管理员删除\r\n     */\r\n    @FXML\r\n    private void handleDeleteAdmin() {\r\n        int index = adminTableView.getSelectionModel().getFocusedIndex();\r\n        Admin admin = adminTableView.getSelectionModel().getSelectedItem();\r\n        if (admin != null) {\r\n            JdbcUtils jdbcUtils = new JdbcUtils();\r\n            jdbcUtils.getConnection();\r\n            String sql = \"delete from `admin` where id = ?\";\r\n            List<Object> params = new ArrayList<>();\r\n            params.add(admin.getId());\r\n\r\n            try {\r\n                if (DialogUtils.confirm(mainApp.getPrimaryStage(), \"您真的要删掉该管理员吗？\")) {\r\n                    jdbcUtils.updateByPreparedStatement(sql, params);\r\n                    adminTableView.getItems().remove(index);\r\n                    DialogUtils.good(mainApp.getPrimaryStage(), \"管理员删除成功\");\r\n                }\r\n            } catch (SQLException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    private void handleNewCommonUser() {\r\n        String errorMessage = InputChecker.commonUserSignUpCheck(commonUserIdField.getText(),\r\n                commonUserNameField.getText(),\r\n                commonUserpassField.getText(),\r\n                commonUserAgeField.getText(),\r\n                commonUserTelField.getText(),\r\n                commonUserSidField.getText());\r\n        if (errorMessage == null) {\r\n            JdbcUtils jdbcUtils = new JdbcUtils();\r\n            jdbcUtils.getConnection();\r\n            String sql = \"insert into `commonUser`(id, username, password, age, Tel, sid) values(?, ?, ?, ?, ?, ?)\";\r\n            List<Object> params = new ArrayList<>();\r\n            params.add(Integer.parseInt(commonUserIdField.getText()));\r\n            params.add(commonUserNameField.getText());\r\n            params.add(commonUserpassField.getText());\r\n            params.add(commonUserAgeField.getText());\r\n            params.add(commonUserTelField.getText());\r\n            params.add(commonUserSidField.getText());\r\n\r\n            try {\r\n                jdbcUtils.updateByPreparedStatement(sql, params);\r\n                DialogUtils.good(mainApp.getPrimaryStage(), \"添加成功\");\r\n                initCommonUserTable();\r\n            } catch (SQLException e) {\r\n                e.printStackTrace();\r\n            }\r\n        } else {\r\n            DialogUtils.tips(mainApp.getPrimaryStage(), errorMessage);\r\n        }\r\n    }\r\n    @FXML\r\n    private void handleUpdateCommonUser() {\r\n        CommonUser oldInfo =  commonUserTableView.getSelectionModel().getSelectedItem();\r\n        String errorMessage;\r\n        String id = commonUserIdField.getText();\r\n        if (id == null || id.length() == 0) {\r\n            DialogUtils.tips(mainApp.getPrimaryStage(), \"id为空\");\r\n            return;\r\n        } else {\r\n            try {\r\n                Integer.parseInt(id);\r\n            } catch (Exception e) {\r\n                DialogUtils.tips(mainApp.getPrimaryStage(), \"id应只含有数字\");\r\n                return;\r\n            }\r\n        }\r\n        CommonUser newInfo = new CommonUser(Integer.parseInt(commonUserIdField.getText()),\r\n                commonUserNameField.getText(),\r\n                commonUserpassField.getText(),\r\n                commonUserAgeField.getText(),\r\n                commonUserTelField.getText(),\r\n                commonUserSidField.getText());\r\n        errorMessage = InputChecker.commonUserUpdateCheck(oldInfo, newInfo);\r\n        if (errorMessage == null) {\r\n            JdbcUtils jdbcUtils = new JdbcUtils();\r\n            jdbcUtils.getConnection();\r\n            String sql = \"update `commonUser` set username = ?, password = ?, age = ?, tel = ?, sid = ? where id = ?;\";\r\n            List<Object> params = new ArrayList<>();\r\n            params.add(newInfo.getUsername());\r\n            params.add(newInfo.getPassword());\r\n            params.add(newInfo.getAge());\r\n            params.add(newInfo.getTel());\r\n            params.add(newInfo.getSid());\r\n            params.add(newInfo.getId());\r\n            try {\r\n                jdbcUtils.updateByPreparedStatement(sql, params);\r\n                DialogUtils.good(mainApp.getPrimaryStage(), \"更新成功\");\r\n            } catch (SQLException e) {\r\n                e.printStackTrace();\r\n            }\r\n            initCommonUserTable();\r\n        } else {\r\n            DialogUtils.tips(mainApp.getPrimaryStage(), errorMessage);\r\n        }\r\n    }\r\n    @FXML\r\n    private void handleDeleteCommonUser() {\r\n        int index = commonUserTableView.getSelectionModel().getFocusedIndex();\r\n        CommonUser commonUser = commonUserTableView.getSelectionModel().getSelectedItem();\r\n        if (commonUser != null) {\r\n            JdbcUtils jdbcUtils = new JdbcUtils();\r\n            jdbcUtils.getConnection();\r\n            String sql = \"delete from `commonUser` where id = ?\";\r\n            List<Object> params = new ArrayList<>();\r\n            params.add(commonUser.getId());\r\n\r\n            try {\r\n                if (DialogUtils.confirm(mainApp.getPrimaryStage(), \"请确认您要删掉这个用户，该用户的订单也会被一并删掉。\")){\r\n                    jdbcUtils.updateByPreparedStatement(sql, params);\r\n                    commonUserTableView.getItems().remove(index);\r\n                    DialogUtils.good(mainApp.getPrimaryStage(), \"删除成功\");\r\n                }\r\n            } catch (SQLException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n    @FXML\r\n    private void handleNewMovie() {\r\n        String errorMessage = InputChecker.movieSignUpCheck(movieIdField.getText(),\r\n                imageFile,\r\n                movieNameField.getText(),\r\n                movieDirectorField.getText(),\r\n                movieActorField.getText(),\r\n                movieClassNameBox.getValue(),\r\n                movieIntroArea.getText());\r\n        if (errorMessage == null) {\r\n            JdbcUtils jdbcUtils = new JdbcUtils();\r\n            jdbcUtils.getConnection();\r\n            String sql = \"select id from `mClass` where className = ?\";\r\n            List<Object> params = new ArrayList<>();\r\n            params.add(movieClassNameBox.getValue());\r\n            try {\r\n                Map<String, Object> id = jdbcUtils.findSimpleResult(sql, params);\r\n                sql = \"insert into `movie`(id, coverPath, name, director, actor, intro, classNumber) values(?, ?, ?, ?, ?, ?, ?)\";\r\n                params.clear();\r\n                params.add(movieIdField.getText());\r\n                params.add(imageFile.getName());\r\n                params.add(movieNameField.getText());\r\n                params.add(movieDirectorField.getText());\r\n                params.add(movieActorField.getText());\r\n                params.add(movieIntroArea.getText());\r\n                params.add(id.get(\"id\"));\r\n                jdbcUtils.updateByPreparedStatement(sql, params);\r\n                DialogUtils.good(mainApp.getPrimaryStage(), \"添加成功\");\r\n            } catch (SQLException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            //复制文件到static文件夹\r\n            ImageUtils.save(imageFile);\r\n            initMovieTable();\r\n        } else {\r\n            DialogUtils.tips(mainApp.getPrimaryStage(), errorMessage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 删除杂志数据的同时删除static中的图片文件。\r\n     */\r\n    @FXML\r\n    private void handleDeleteMovie() {\r\n        // 获取到所选项\r\n        int index = movieTableView.getSelectionModel().getFocusedIndex();\r\n        Movie movie = movieTableView.getSelectionModel().getSelectedItem();\r\n\r\n        // 进行删除操作\r\n        if (movie != null) {\r\n            JdbcUtils jdbcUtils = new JdbcUtils();\r\n            jdbcUtils.getConnection();\r\n            String sql = \"delete from `movie` where id = ?\";\r\n            List<Object> params = new ArrayList<>();\r\n            params.add(movie.getId());\r\n\r\n            try {\r\n                if (DialogUtils.confirm(mainApp.getPrimaryStage(), \"您确认要删掉这个杂志吗？\")) {\r\n                    jdbcUtils.updateByPreparedStatement(sql, params);\r\n                    /*\r\n                     *==================================================\r\n                     *                 !!important!!\r\n                     *     注意这里移动后会进行一个update所以不能用\r\n                     *     imageFile.getPath()\r\n                     *==================================================\r\n                     */\r\n                    movieTableView.getItems().remove(index);\r\n                    ImageUtils.delete(movie.getCoverPath());\r\n                    DialogUtils.good(mainApp.getPrimaryStage(), \"删除成功\");\r\n                }\r\n            } catch (SQLException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 杂志更新的同时要记得保存新图片和删除老图片\r\n     */\r\n    @FXML\r\n    private void handleUpdateMovie() {\r\n        Movie oldInfo = movieTableView.getSelectionModel().getSelectedItem();\r\n        String errorMessage;\r\n        String foo = movieIdField.getText();\r\n        if (foo == null || foo.length() == 0) {\r\n            DialogUtils.tips(mainApp.getPrimaryStage(), \"id为空\");\r\n            return;\r\n        } else {\r\n            try {\r\n                Integer.parseInt(foo);\r\n            } catch (Exception e) {\r\n                DialogUtils.tips(mainApp.getPrimaryStage(), \"id应只含有数字\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (imageFile == null) {\r\n            DialogUtils.tips(mainApp.getPrimaryStage(), \"该图片已被使用\");\r\n            return;\r\n        }\r\n\r\n        Movie newInfo = new Movie(Integer.parseInt(movieIdField.getText()),\r\n                imageFile.getName(),\r\n                movieNameField.getText(),\r\n                movieDirectorField.getText(),\r\n                movieActorField.getText(),\r\n                movieIntroArea.getText(),\r\n                movieClassNameBox.getValue());\r\n        errorMessage = InputChecker.movieUpdateCheck(oldInfo, newInfo);\r\n\r\n        //更新数据库\r\n        if (errorMessage == null) {\r\n            JdbcUtils jdbcUtils = new JdbcUtils();\r\n            jdbcUtils.getConnection();\r\n            String sql = \"select id from `mClass` where className = ?\";\r\n            List<Object> params = new ArrayList<>();\r\n            params.add(newInfo.getClassName());\r\n            System.out.println(newInfo.getClassName());\r\n\r\n            try {\r\n                Map<String, Object> id = jdbcUtils.findSimpleResult(sql, params);\r\n                sql = \"update `movie` set coverPath = ?, name = ?, director = ?, actor = ?,  intro = ?, classNumber = ? where id = ?;\";\r\n                params.clear();\r\n                params.add(newInfo.getCoverPath());\r\n                params.add(newInfo.getName());\r\n                params.add(newInfo.getDirector());\r\n                params.add(newInfo.getActor());\r\n                params.add(newInfo.getIntro());\r\n                params.add(id.get(\"id\"));\r\n                params.add(newInfo.getId());\r\n                jdbcUtils.updateByPreparedStatement(sql, params);\r\n                DialogUtils.good(mainApp.getPrimaryStage(), \"更新成功\");\r\n            } catch (SQLException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            /*\r\n             *==================================================\r\n             *                 !!important!!\r\n             *     注意这里为了防止在新图片在static的情况，一定\r\n             *     要注意顺序，好吧实际上这种情况并不会出现，如果\r\n             *     不是用户手动向static文件夹中添加图片\r\n             *==================================================\r\n             */\r\n            //添加新图片,删除旧图片.\r\n            // TODO: 2018/6/30 但是这个问题先放着吧\r\n            if (!oldInfo.getCoverPath().equals(newInfo.getCoverPath())){\r\n                ImageUtils.save(imageFile);\r\n                ImageUtils.delete(oldInfo.getCoverPath());\r\n            }\r\n\r\n            initMovieTable();\r\n        } else {\r\n            DialogUtils.tips(mainApp.getPrimaryStage(), errorMessage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 向服务器上传图片，涉及到文件操作，比较重要的一个函数\r\n     */\r\n    @FXML\r\n    private void handleSwitchImage() {\r\n        imageFile = ImageUtils.choose(mainApp);\r\n        // 这里会输出该图片的路径\r\n        System.out.println();\r\n        // 替换图片\r\n        try {\r\n            if (imageFile != null) {\r\n                String localUrl = imageFile.toURI().toURL().toString();\r\n                movieCover.setImage(new Image(localUrl, true));\r\n            }\r\n        } catch (MalformedURLException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/Scene/AdminViewController.java b/src/main/java/org/example/Scene/AdminViewController.java
--- a/src/main/java/org/example/Scene/AdminViewController.java	(revision cc0a39f6b07677981707a0dcc6b6c89b51a0ba64)
+++ b/src/main/java/org/example/Scene/AdminViewController.java	(date 1683635314431)
@@ -6,6 +6,7 @@
 import javafx.fxml.FXMLLoader;
 import javafx.scene.Parent;
 import javafx.scene.Scene;
+import javafx.scene.chart.*;
 import javafx.scene.image.Image;
 import javafx.stage.Stage;
 import org.example.Main;
@@ -29,10 +30,12 @@
 import java.net.MalformedURLException;
 import java.sql.SQLException;
 import java.util.ArrayList;
+import java.util.Arrays;
 import java.util.List;
 import java.util.Map;
 public class AdminViewController extends Application{
-
+    @FXML
+    public Label commentField;
     @FXML
     private TableColumn<Movie, Integer> movieIdColumn;
 
@@ -159,58 +162,71 @@
     private Main mainApp;
 
     @FXML
-    private TableView<Order> fooOrderTableView;
+    private BorderPane commentPane;
+
+    @FXML
+    private TableView<Comment> commentTableView;
+
+    @FXML
+    private TableColumn<Comment, Integer> commentIdColumn;
+
+    @FXML
+    private TableColumn<Comment,String> commentNameColumn;
+
+    @FXML
+    private TableColumn<Comment, String> commentMovieColumn;
+    @FXML
+    private BorderPane statisticPane;
+
+    @FXML
+    private BorderPane ratingPane;
+
     @FXML
-    private TableColumn<Order, Integer> fooOrderIdColumn;
+    private CategoryAxis xAxis= new CategoryAxis();
     @FXML
-    private TableColumn<Order, String> fooUserNameColumn;
+    private NumberAxis yAxis;
     @FXML
-    private TableColumn<Order, String>  fooMagazineNameColumn;
+    private BarChart<String, Number> movieBarChart;
     @FXML
-    private TableColumn<Order, Integer> fooTotalPriceColumn;
+    private TableView<Movie> statisticTableView;
+
     @FXML
-    private TableView<MovieClass> fooMagazineClassTableView;
+    private TableColumn<Movie,String> statisticMovieColumn;
     @FXML
-    private TableColumn<MovieClass, Integer> fooMagazineClassIdColumn;
+    private CategoryAxis typexAxis= new CategoryAxis();
     @FXML
-    private TableColumn<MovieClass, String> fooMagazineClassNameColumn;
+    private NumberAxis typeyAxis;
     @FXML
-    private TextField fooMagazineClassIdField;
+    private BarChart<String, Number> typeBarChart;
     @FXML
-    private TextField fooMagazineClassNameField;
+    private CategoryAxis agexAxis;
+
     @FXML
-    private TextField fooOrderIdField;
+    private NumberAxis ageyAxis;
     @FXML
-    private ComboBox<String> fooOrderUsernameBox;
+    private BarChart<String, Number> ageBarChart;
+
     @FXML
-    private ComboBox<String> fooOrderMagazineNameBox;
+    private Rectangle commentBorder;
     @FXML
-    private ChoiceBox<String> fooMonthBox;
+    private ImageView commontCover;
     @FXML
-    private ChoiceBox<String> fooCopiesNumBox;
+    private BorderPane movieTypePane;
+
     @FXML
-    private TextField fooTotalPriceField;
-
+    private BorderPane userAgePane;
     private ObservableList<Admin> adminData = FXCollections.observableArrayList();
-    private ObservableList<Movie> magazineData = FXCollections.observableArrayList();
+    private ObservableList<Movie> movieData = FXCollections.observableArrayList();
     private ObservableList<CommonUser> commonUsersData = FXCollections.observableArrayList();
-    private ObservableList<Order> seOrderData = FXCollections.observableArrayList();
-    private ObservableList<Order> fooOrderData = FXCollections.observableArrayList();
-    private ObservableList<MovieClass> fooMagazineClassData = FXCollections.observableArrayList();
-
-    // 各种选项盒子的数据
+    private ObservableList<Comment> commentsData = FXCollections.observableArrayList();
+    private ObservableList<Rate> ratesData = FXCollections.observableArrayList();
     private ObservableList<String> choiceItems = FXCollections.observableArrayList();
-    private ObservableList<String> seMagazineNames = FXCollections.observableArrayList();
-    private ObservableList<String> seMagazineClasses = FXCollections.observableArrayList();
-    private ObservableList<String> seUserNames = FXCollections.observableArrayList();
-    private ObservableList<String> anUserNames = FXCollections.observableArrayList();
-    private ObservableList<String> anMagazineNames = FXCollections.observableArrayList();
-    private ObservableList<String> fooOrderUsernames = FXCollections.observableArrayList();
-    private ObservableList<String> fooOrderMagazineNames = FXCollections.observableArrayList();
 
-    //杂志封面临时文件
     private File imageFile;
 
+    /**
+     * initialize the tables.
+     */
     @FXML
     private void initialize() {
         adminIdColumn.setCellValueFactory(cellData -> cellData.getValue().idProperty().asObject());
@@ -230,22 +246,28 @@
         movieTableView.getSelectionModel().selectedItemProperty().addListener(
                 (observable, oldValue, newValue) -> updateMovieDetail(newValue)
         );
-
-        /*fooMagazineClassIdColumn.setCellValueFactory(cellData -> cellData.getValue().idProperty().asObject());
-        fooMagazineClassNameColumn.setCellValueFactory(cellData -> cellData.getValue().nameProperty());
-        fooMagazineClassTableView.getSelectionModel().selectedItemProperty().addListener(
-                (observable, oldValue, newValue) -> updateMovieClassDetail(newValue)
-        );*/
-
+        commentIdColumn.setCellValueFactory(cellData -> cellData.getValue().idProperty().asObject());
+        commentNameColumn.setCellValueFactory(cellData -> cellData.getValue().usernameProperty());
+        commentMovieColumn.setCellValueFactory(cellDate -> cellDate.getValue().movienameProperty());
+        commentTableView.getSelectionModel().selectedItemProperty().addListener(
+                (observable, oldValue, newValue) -> updateCommentDetail(newValue)
+        );
+        statisticMovieColumn.setCellValueFactory(cellData ->cellData.getValue().nameProperty());
+        statisticTableView.getSelectionModel().selectedItemProperty().addListener(
+                (observable, oldValue, newValue) -> updateStatistic(newValue)
+        );
         initAdminTable();
         initCommonUserTable();
         initMovieTable();
-        //initSearchTable();
-        //initStatisticView();
+        initCommentTable();
+        initStatisticView();
         initUserNameLabel();
-        //initMagazineClassTableAndOrderTable();
+        initType();
+        initAge();
     }
-
+    /**
+     * initialize the username table.
+     */
     public void initUserNameLabel() {
         if (Session.getType().equals("commonUser")) {
             userNameLabel.setText(Session.getUsername());
@@ -253,7 +275,9 @@
             userNameLabel.setText(Session.getUsername());
         }
     }
-
+    /**
+     * initialize the Admin table.
+     */
     public void initAdminTable() {
         JdbcUtils jdbcUtils = new JdbcUtils();
         jdbcUtils.getConnection();
@@ -265,10 +289,14 @@
             adminData.addAll(admins);
             adminTableView.setItems(adminData);
             adminTableView.getSelectionModel().selectFirst();
+
         } catch (Exception e) {
             e.printStackTrace();
         }
     }
+    /**
+     * initialize the CommonUser table.
+     */
     private void initCommonUserTable() {
         JdbcUtils jdbcUtils = new JdbcUtils();
         jdbcUtils.getConnection();
@@ -284,38 +312,192 @@
             e.printStackTrace();
         }
     }
+    /**
+     * initialize the Movie table.
+     */
     private void initMovieTable() {
         JdbcUtils jdbcUtils = new JdbcUtils();
         jdbcUtils.getConnection();
         String sql = "select a.id, a.coverPath, a.`name`, a.director, a.actor, a.intro, b.className from `movie` a, `mClass` b where a.classNumber = b.id;";
         List<Object> params = new ArrayList<>();
         try {
-            List<Movie> magazines = jdbcUtils.findMoreProResult(sql, params, Movie.class);
-            magazineData.clear();
-            magazineData.addAll(magazines);
-            movieTableView.setItems(magazineData);
+            List<Movie> movies = jdbcUtils.findMoreProResult(sql, params, Movie.class);
+            movieData.clear();
+            movieData.addAll(movies);
+            movieTableView.setItems(movieData);
             movieTableView.getSelectionModel().selectFirst();
         } catch (Exception e) {
             e.printStackTrace();
         }
     }
-
-    private void initBox(String sql, ComboBox<String> box, ObservableList<String> items) {
+    /**
+     * initialize the Comment table.
+     */
+    private void initCommentTable() {
+        JdbcUtils jdbcUtils = new JdbcUtils();
+        jdbcUtils.getConnection();
+        String sql = "select * from `comment`;";
+        List<Object> params = new ArrayList<>();
+        try {
+            List<Comment> comments = jdbcUtils.findMoreProResult(sql, params, Comment.class);
+            System.out.println(comments);
+            commentsData.clear();
+            commentsData.addAll(comments);
+            commentTableView.setItems(commentsData);
+            commentTableView.getSelectionModel().selectFirst();
+            commentField.setText(commentTableView.getSelectionModel().getSelectedItem().getComment());
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+    /**
+     * initialize the rate page of the Statistic page.
+     */
+    private void initStatisticView() {
+        JdbcUtils jdbcUtils = new JdbcUtils();
+        jdbcUtils.getConnection();
+        String sql= " select a.id, a.coverPath, a.`name`, a.director, a.actor, a.intro, b.className from `movie` a, `mClass` b where a.classNumber = b.id;";
+        List<Object> params =new ArrayList<>();
+        try{
+            List<Movie> movies =jdbcUtils.findMoreProResult(sql, params, Movie.class);
+            //System.out.println(movies);
+            movieData.clear();
+            movieData.addAll(movies);
+            statisticTableView.setItems(movieData);
+            statisticTableView.getSelectionModel().selectFirst();
+            String rsql= "select * from `rate`  ;";
+            List<Object> rparams = new ArrayList<>();
+            try {
+                List<Rate> rates =jdbcUtils.findMoreProResult(rsql, rparams, Rate.class);
+                XYChart.Series<String, Number> series = new XYChart.Series<>();
+                series.setName("rate");
+
+                for (Rate rate : rates) {
+
+
+                    if (rate.getmoviename().equals(statisticTableView.getSelectionModel().getSelectedItem().getName())) {
+                        //ratesName.add(rates.get(i).getusername());
+                        series.getData().add(new XYChart.Data<>(rate.getusername(), rate.getRate()));
+                    }
+                }
+                //System.out.println(ratesName);
+                //xAxis.setCategories(ratesName);
+                movieBarChart.getData().clear();
+                movieBarChart.getData().add(series);
+                //System.out.println(movieBarChart.getData());
+                //System.out.println(rates);
+            } catch (Exception e) {
+                e.printStackTrace();
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+    /**
+     * initialize the age page of the Statistic page.
+     */
+    private void initAge() {
         JdbcUtils jdbcUtils = new JdbcUtils();
         jdbcUtils.getConnection();
+        String sql = "select * from `commonUser`;";
         List<Object> params = new ArrayList<>();
         try {
-            items.clear();
-            List<Map<String, Object>> names = jdbcUtils.findModeResult(sql, params);
-            for (Map<String, Object> name : names) {
-                items.add(name.get("name").toString());
+            List<CommonUser> commonUsers = jdbcUtils.findMoreProResult(sql, params, CommonUser.class);
+            agexAxis.setCategories(FXCollections.<String>observableArrayList(Arrays.asList(
+                    "0-40", "41-80", "81-120", "121-160",">=161")));
+            String[] as=new String[5];
+            as[0]="0-40";
+            as[1]="41-80";
+            as[2]="81-120";
+            as[3]="121-160";
+            as[4]=">=161";
+            int[] num =new int[10];
+            for(int i=0;i<10;i++){
+                num[i]=0;
             }
-            box.setItems(items);
-        } catch (SQLException e) {
+            for(CommonUser commonUser : commonUsers){
+                if(commonUser.getAge()>=0&&commonUser.getAge()<=40){
+                    num[0]++;
+                }
+                if(commonUser.getAge()>=41&&commonUser.getAge()<=80){
+                    num[1]++;
+                }
+                if(commonUser.getAge()>=81&&commonUser.getAge()<=120){
+                    num[2]++;
+                }
+                if(commonUser.getAge()>=121&&commonUser.getAge()<=160){
+                    num[3]++;
+                }
+                if(commonUser.getAge()>=161){
+                    num[4]++;
+                }
+            }
+            XYChart.Series<String, Number> series = new XYChart.Series<>();
+            ObservableList<String> className = FXCollections.observableArrayList();
+            series.setName("Age");
+            for(int i=0;i<5;i++){
+                series.getData().add(new XYChart.Data<>(as[i],num[i]));
+            }
+
+            for(int i=0;i<5;i++){
+                System.out.println(num[i]);
+            }
+            ageBarChart.getData().clear();
+            ageBarChart.getData().addAll(series);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+    /**
+     * initialize the type page of the Statistic page.
+     */
+    private void initType() {
+        JdbcUtils jdbcUtils = new JdbcUtils();
+        jdbcUtils.getConnection();
+        String sql = "select  a.`name`, b.className from `movie` a, `mClass` b where a.classNumber = b.id;";
+        List<Object> params = new ArrayList<>();
+        try {
+            List<Movie> movies = jdbcUtils.findMoreProResult(sql, params, Movie.class);
+            System.out.println(movies);
+            sql = "select * from `mClass`";
+            List<Object> mcparams = new ArrayList<>();
+            try{
+                List<MovieClass> id = jdbcUtils.findMoreProResult(sql, mcparams, MovieClass.class);
+                int length= id.size(),len = movies.size();
+                int[] num =new int[length];
+                for(int i=0;i<length;i++){
+                    num[i]=0;
+                }
+                for (Movie movie : movies) {
+                    for (int j = 0; j < length; j++) {
+                        if (movie.getClassName().equals(id.get(j).getclassName())) {
+                            num[j]++;
+                            //System.out.println(j);
+                        }
+                    }
+                }
+                XYChart.Series<String, Number> mseries = new XYChart.Series<>();
+                ObservableList<String> className = FXCollections.observableArrayList();
+                mseries.setName("Movie Types");
+                for(int i=0;i<length;i++){
+                    className.add(id.get(i).getclassName());
+                    mseries.getData().add(new XYChart.Data<>(id.get(i).getclassName(),num[i]));
+                }
+                typexAxis.setCategories(className);
+                typeBarChart.getData().clear();
+                typeBarChart.getData().addAll(mseries);
+            }catch (Exception e){
+                e.printStackTrace();
+            }
+
+        } catch (Exception e) {
             e.printStackTrace();
         }
     }
 
+    /**
+     * Update the admin page.
+     */
     private void updateAdminDetail(Admin admin) {
         if (admin != null) {
             adminIdField.setText(Integer.toString(admin.getId()));
@@ -323,7 +505,9 @@
             adminPasswordField.setText(admin.getPassword());
         }
     }
-
+    /**
+     * Update the CommonUser page.
+     */
     private void updateCommonDetail(CommonUser solo) {
         if (solo != null) {
             commonUserIdField.setText(Integer.toString(solo.getId()));
@@ -331,23 +515,39 @@
             commonUserpassField.setText(solo.getPassword());
             commonUserSidField.setText(solo.getSid());
             commonUserTelField.setText(solo.getTel());
-            commonUserAgeField.setText(solo.getAge());
+            commonUserAgeField.setText(String.valueOf(solo.getAge()));
         }
     }
-    private void updateMovieClassDetail(MovieClass solo) {
-        if (solo != null) {
-            fooMagazineClassIdField.setText(Integer.toString(solo.getId()));
-            fooMagazineClassNameField.setText(solo.getName());
-        }
-    }
+    /**
+     * Update the Comment page.
+     */
+    private void updateCommentDetail(Comment solo) {
+        if(solo != null){
+            commentField.setText(commentTableView.getSelectionModel().getSelectedItem().getComment());
+            commontCover.setImage(null);
+            if(!solo.getPicture().equals("non_exist")){
+                File newFile = new File("src/main/resources/org/example/scene/images/" + solo.getPicture());
+                System.out.println(newFile.getAbsoluteFile().toURI());
+
+                commontCover.setImage(new Image(newFile.getAbsoluteFile().toURI().toString()));
+                UIAdjistUtils.adjustImageBorder(commontCover, commentBorder);
+                imageFile = new File("src/main/resources/org/example/scene/images/" + solo.getPicture());
+                System.out.println(imageFile.getAbsolutePath());
+            }
+
+        }
 
+    }
+    /**
+     * Update the Movie page.
+     */
     private void updateMovieDetail(Movie solo) {
         if (solo != null) {
             movieIdField.setText(Integer.toString(solo.getId()));
             movieNameField.setText(solo.getName());
             movieDirectorField.setText(solo.getDirector());
             movieActorField.setText(solo.getActor());
-            //处理ChoiceBox的相关问题
+            //Handle the choice box.
             JdbcUtils jdbcUtils = new JdbcUtils();
             jdbcUtils.getConnection();
             String sql = "select className from `mClass`;";
@@ -376,7 +576,42 @@
             System.out.println(imageFile.getAbsolutePath());
         }
     }
+    /**
+     * Update the Rate page of the statistic page.
+     */
+    private void updateStatistic(Movie solo) {
+        if(solo!=null){
+            JdbcUtils jdbcUtils = new JdbcUtils();
+            jdbcUtils.getConnection();
+            String rsql= "select * from `rate`  ;";
+            List<Object> rparams = new ArrayList<>();
+            try {
+                List<Rate> rates =jdbcUtils.findMoreProResult(rsql, rparams, Rate.class);
+                XYChart.Series<String, Number> series = new XYChart.Series<>();
+                series.setName("rate");
+
+                ObservableList<String> ratesName = FXCollections.observableArrayList();
+                ratesName.clear();
+                for(int i=0;i<rates.size();i++){
+                    //System.out.println(rates.get(i));
 
+
+                    if(rates.get(i).getmoviename().equals(statisticTableView.getSelectionModel().getSelectedItem().getName())){
+                        ratesName.add(rates.get(i).getusername());
+                        series.getData().add(new XYChart.Data<>(rates.get(i).getusername(), rates.get(i).getRate()));
+                    }
+                }
+                System.out.println(ratesName);
+                xAxis.getCategories().clear();
+                xAxis.setCategories(ratesName);
+                movieBarChart.getData().clear();
+                movieBarChart.getData().add(series);
+                //System.out.println(rates);
+            } catch (Exception e) {
+                e.printStackTrace();
+            }
+        }
+    }
     @Override
     public void start(Stage primaryStage){
 
@@ -385,36 +620,105 @@
     public void setMainApp(Main mainApp) {
         this.mainApp = mainApp;
     }
-    
+
+    /**
+     * Turn to Movie page.
+     */
     @FXML
     void handleToMovie() {
         commonUserPane.setVisible(false);
         adminPane.setVisible(false);
+        commentPane.setVisible(false);
+        statisticPane.setVisible(false);
         initMovieTable();
         moviePane.setVisible(true);
-    }
 
+    }
+    /**
+     * Turn to Statistic page.
+     */
     @FXML
-    void handleToStatistic(ActionEvent event) {
-
+    void handleToStatistic() {
+        commonUserPane.setVisible(false);
+        adminPane.setVisible(false);
+        commentPane.setVisible(false);
+        moviePane.setVisible(false);
+        //initStatisticView();
+        movieTypePane.setVisible(false);
+        userAgePane.setVisible(false);
+        initStatisticView();
+        ratingPane.setVisible(true);
+        statisticPane.setVisible(true);
     }
-
+    /**
+     * Turn to CommonUser page.
+     */
     @FXML
     void handleToCommonUser() {
         moviePane.setVisible(false);
         adminPane.setVisible(false);
+        commentPane.setVisible(false);
+        statisticPane.setVisible(false);
         initCommonUserTable();
         commonUserPane.setVisible(true);
     }
-
+    /**
+     * Turn to Admin page.
+     */
     @FXML
     void handleToAdmin() {
         moviePane.setVisible(false);
         commonUserPane.setVisible(false);
+        commentPane.setVisible(false);
+        statisticPane.setVisible(false);
         initAdminTable();
         adminPane.setVisible(true);
     }
-
+    /**
+     * Turn to Comment page.
+     */
+    @FXML
+    void handleToComment(){
+        moviePane.setVisible(false);
+        commonUserPane.setVisible(false);
+        adminPane.setVisible(false);
+        statisticPane.setVisible(false);
+        initCommentTable();
+        commentPane.setVisible(true);
+    }
+    /**
+     * Turn to Rate page.
+     */
+    @FXML
+    void handleToRate() {
+        movieTypePane.setVisible(false);
+        userAgePane.setVisible(false);
+        initStatisticView();
+        ratingPane.setVisible(true);
+    }
+    /**
+     * Turn to Age page.
+     */
+    @FXML
+    void handleToAge() {
+        movieTypePane.setVisible(false);
+        ratingPane.setVisible(false);
+        initAge();
+        userAgePane.setVisible(true);
+    }
+    /**
+     * Turn to Type page.
+     */
+    @FXML
+    void handleToType() {
+        ratingPane.setVisible(false);
+        userAgePane.setVisible(false);
+        initType();
+        movieTypePane.setVisible(true);
+    }
+    /**
+     * Log out and back to the login page.
+     */
     @FXML
     void handleLogout() {
         try {
@@ -429,18 +733,21 @@
             e.printStackTrace();
         }
     }
+    /**
+     * Update the Admin.
+     */
     @FXML
     private void handleSubmitAdmin() {
         Admin oldInfo = adminTableView.getSelectionModel().getSelectedItem();
         String id = adminIdField.getText();
         if (id == null || id.length() == 0) {
-            DialogUtils.tips(mainApp.getPrimaryStage(), "id为空");
+            DialogUtils.tips(mainApp.getPrimaryStage(), "ID should not be empty,");
             return;
         } else {
             try {
                 Integer.parseInt(id);
             } catch (Exception e) {
-                DialogUtils.tips(mainApp.getPrimaryStage(), "id应只含有数字");
+                DialogUtils.tips(mainApp.getPrimaryStage(), "ID should only be numbers!");
                 return;
             }
         }
@@ -456,8 +763,8 @@
             params.add(newInfo.getId());
             try {
                 jdbcUtils.updateByPreparedStatement(sql, params);
-                DialogUtils.good(mainApp.getPrimaryStage(), "更新成功");
-                // 更新一下现在在线的用户
+                DialogUtils.good(mainApp.getPrimaryStage(), "Update successfully!");
+                // Update it.
                 if (Session.getId() == newInfo.getId()) {
                     Session.setUsername(newInfo.getUsername());
                     initUserNameLabel();
@@ -470,7 +777,9 @@
             DialogUtils.tips(mainApp.getPrimaryStage(), errorMessage);
         }
     }
-
+    /**
+     * Add an Admin.
+     */
     @FXML
     private void handleNewAdmin() {
         String errorMessage = InputChecker.adminSignUpCheck(adminIdField.getText(), adminNameField.getText(), adminPasswordField.getText());
@@ -485,7 +794,7 @@
 
             try {
                 jdbcUtils.updateByPreparedStatement(sql, params);
-                DialogUtils.good(mainApp.getPrimaryStage(), "添加成功");
+                DialogUtils.good(mainApp.getPrimaryStage(), "Add successfully!");
                 initAdminTable();
             } catch (SQLException e) {
                 e.printStackTrace();
@@ -496,7 +805,7 @@
     }
 
     /**
-     * 删除所选项，将该管理员删除
+     * Delete the Admin.
      */
     @FXML
     private void handleDeleteAdmin() {
@@ -510,23 +819,25 @@
             params.add(admin.getId());
 
             try {
-                if (DialogUtils.confirm(mainApp.getPrimaryStage(), "您真的要删掉该管理员吗？")) {
+                if (DialogUtils.confirm(mainApp.getPrimaryStage(), "Do you really want to delete this admin?")) {
                     jdbcUtils.updateByPreparedStatement(sql, params);
                     adminTableView.getItems().remove(index);
-                    DialogUtils.good(mainApp.getPrimaryStage(), "管理员删除成功");
+                    DialogUtils.good(mainApp.getPrimaryStage(), "Delete successfully!");
                 }
             } catch (SQLException e) {
                 e.printStackTrace();
             }
         }
     }
-
+    /**
+     * Add a CommonUser.
+     */
     @FXML
     private void handleNewCommonUser() {
         String errorMessage = InputChecker.commonUserSignUpCheck(commonUserIdField.getText(),
                 commonUserNameField.getText(),
                 commonUserpassField.getText(),
-                commonUserAgeField.getText(),
+                Integer.valueOf(commonUserAgeField.getText()),
                 commonUserTelField.getText(),
                 commonUserSidField.getText());
         if (errorMessage == null) {
@@ -543,7 +854,7 @@
 
             try {
                 jdbcUtils.updateByPreparedStatement(sql, params);
-                DialogUtils.good(mainApp.getPrimaryStage(), "添加成功");
+                DialogUtils.good(mainApp.getPrimaryStage(), "Add successfully!");
                 initCommonUserTable();
             } catch (SQLException e) {
                 e.printStackTrace();
@@ -552,26 +863,29 @@
             DialogUtils.tips(mainApp.getPrimaryStage(), errorMessage);
         }
     }
+    /**
+     * Update a CommonUser.
+     */
     @FXML
     private void handleUpdateCommonUser() {
         CommonUser oldInfo =  commonUserTableView.getSelectionModel().getSelectedItem();
         String errorMessage;
         String id = commonUserIdField.getText();
         if (id == null || id.length() == 0) {
-            DialogUtils.tips(mainApp.getPrimaryStage(), "id为空");
+            DialogUtils.tips(mainApp.getPrimaryStage(), "ID should not be empty!");
             return;
         } else {
             try {
                 Integer.parseInt(id);
             } catch (Exception e) {
-                DialogUtils.tips(mainApp.getPrimaryStage(), "id应只含有数字");
+                DialogUtils.tips(mainApp.getPrimaryStage(), "ID should be numbers!");
                 return;
             }
         }
         CommonUser newInfo = new CommonUser(Integer.parseInt(commonUserIdField.getText()),
                 commonUserNameField.getText(),
                 commonUserpassField.getText(),
-                commonUserAgeField.getText(),
+                Integer.valueOf(commonUserAgeField.getText()),
                 commonUserTelField.getText(),
                 commonUserSidField.getText());
         errorMessage = InputChecker.commonUserUpdateCheck(oldInfo, newInfo);
@@ -588,7 +902,7 @@
             params.add(newInfo.getId());
             try {
                 jdbcUtils.updateByPreparedStatement(sql, params);
-                DialogUtils.good(mainApp.getPrimaryStage(), "更新成功");
+                DialogUtils.good(mainApp.getPrimaryStage(), "Update successfully!");
             } catch (SQLException e) {
                 e.printStackTrace();
             }
@@ -597,6 +911,9 @@
             DialogUtils.tips(mainApp.getPrimaryStage(), errorMessage);
         }
     }
+    /**
+     * Delete the CommonUser.
+     */
     @FXML
     private void handleDeleteCommonUser() {
         int index = commonUserTableView.getSelectionModel().getFocusedIndex();
@@ -605,20 +922,27 @@
             JdbcUtils jdbcUtils = new JdbcUtils();
             jdbcUtils.getConnection();
             String sql = "delete from `commonUser` where id = ?";
+            String Osql="delete from `rate` where uid = ?";
+            String Csql="delete from `comment` where uid = ?";
             List<Object> params = new ArrayList<>();
             params.add(commonUser.getId());
 
             try {
-                if (DialogUtils.confirm(mainApp.getPrimaryStage(), "请确认您要删掉这个用户，该用户的订单也会被一并删掉。")){
+                if (DialogUtils.confirm(mainApp.getPrimaryStage(), "Attention!")){
                     jdbcUtils.updateByPreparedStatement(sql, params);
+                    jdbcUtils.updateByPreparedStatement(Osql,params);
+                    jdbcUtils.updateByPreparedStatement(Csql,params);
                     commonUserTableView.getItems().remove(index);
-                    DialogUtils.good(mainApp.getPrimaryStage(), "删除成功");
+                    DialogUtils.good(mainApp.getPrimaryStage(), "Successfully deleted");
                 }
             } catch (SQLException e) {
                 e.printStackTrace();
             }
         }
     }
+    /**
+     * Add a Movie.
+     */
     @FXML
     private void handleNewMovie() {
         String errorMessage = InputChecker.movieSignUpCheck(movieIdField.getText(),
@@ -646,12 +970,12 @@
                 params.add(movieIntroArea.getText());
                 params.add(id.get("id"));
                 jdbcUtils.updateByPreparedStatement(sql, params);
-                DialogUtils.good(mainApp.getPrimaryStage(), "添加成功");
+                DialogUtils.good(mainApp.getPrimaryStage(), "Add successfully!");
             } catch (SQLException e) {
                 e.printStackTrace();
             }
 
-            //复制文件到static文件夹
+            //Copy it to the folder.
             ImageUtils.save(imageFile);
             initMovieTable();
         } else {
@@ -660,35 +984,30 @@
     }
 
     /**
-     * 删除杂志数据的同时删除static中的图片文件。
+     * Delete the Movie.
      */
     @FXML
     private void handleDeleteMovie() {
-        // 获取到所选项
         int index = movieTableView.getSelectionModel().getFocusedIndex();
         Movie movie = movieTableView.getSelectionModel().getSelectedItem();
 
-        // 进行删除操作
         if (movie != null) {
             JdbcUtils jdbcUtils = new JdbcUtils();
             jdbcUtils.getConnection();
             String sql = "delete from `movie` where id = ?";
+            String Osql="delete from `rate` where mid = ?";
+            String Csql="delete from `comment` where mid = ?";
             List<Object> params = new ArrayList<>();
             params.add(movie.getId());
 
             try {
-                if (DialogUtils.confirm(mainApp.getPrimaryStage(), "您确认要删掉这个杂志吗？")) {
+                if (DialogUtils.confirm(mainApp.getPrimaryStage(), "Do you really delete the movie?")) {
                     jdbcUtils.updateByPreparedStatement(sql, params);
-                    /*
-                     *==================================================
-                     *                 !!important!!
-                     *     注意这里移动后会进行一个update所以不能用
-                     *     imageFile.getPath()
-                     *==================================================
-                     */
+                    jdbcUtils.updateByPreparedStatement(Osql, params);
+                    jdbcUtils.updateByPreparedStatement(Csql, params);
                     movieTableView.getItems().remove(index);
                     ImageUtils.delete(movie.getCoverPath());
-                    DialogUtils.good(mainApp.getPrimaryStage(), "删除成功");
+                    DialogUtils.good(mainApp.getPrimaryStage(), "Delete successfully!");
                 }
             } catch (SQLException e) {
                 e.printStackTrace();
@@ -697,7 +1016,7 @@
     }
 
     /**
-     * 杂志更新的同时要记得保存新图片和删除老图片
+     * Update the Movie!
      */
     @FXML
     private void handleUpdateMovie() {
@@ -705,19 +1024,19 @@
         String errorMessage;
         String foo = movieIdField.getText();
         if (foo == null || foo.length() == 0) {
-            DialogUtils.tips(mainApp.getPrimaryStage(), "id为空");
+            DialogUtils.tips(mainApp.getPrimaryStage(), "ID should not be empty!");
             return;
         } else {
             try {
                 Integer.parseInt(foo);
             } catch (Exception e) {
-                DialogUtils.tips(mainApp.getPrimaryStage(), "id应只含有数字");
+                DialogUtils.tips(mainApp.getPrimaryStage(), "ID should be numbers!");
                 return;
             }
         }
 
         if (imageFile == null) {
-            DialogUtils.tips(mainApp.getPrimaryStage(), "该图片已被使用");
+            DialogUtils.tips(mainApp.getPrimaryStage(), "The image has been used!");
             return;
         }
 
@@ -730,7 +1049,7 @@
                 movieClassNameBox.getValue());
         errorMessage = InputChecker.movieUpdateCheck(oldInfo, newInfo);
 
-        //更新数据库
+        //Update the SQL
         if (errorMessage == null) {
             JdbcUtils jdbcUtils = new JdbcUtils();
             jdbcUtils.getConnection();
@@ -751,21 +1070,10 @@
                 params.add(id.get("id"));
                 params.add(newInfo.getId());
                 jdbcUtils.updateByPreparedStatement(sql, params);
-                DialogUtils.good(mainApp.getPrimaryStage(), "更新成功");
+                DialogUtils.good(mainApp.getPrimaryStage(), "Update successfully!");
             } catch (SQLException e) {
                 e.printStackTrace();
             }
-
-            /*
-             *==================================================
-             *                 !!important!!
-             *     注意这里为了防止在新图片在static的情况，一定
-             *     要注意顺序，好吧实际上这种情况并不会出现，如果
-             *     不是用户手动向static文件夹中添加图片
-             *==================================================
-             */
-            //添加新图片,删除旧图片.
-            // TODO: 2018/6/30 但是这个问题先放着吧
             if (!oldInfo.getCoverPath().equals(newInfo.getCoverPath())){
                 ImageUtils.save(imageFile);
                 ImageUtils.delete(oldInfo.getCoverPath());
@@ -778,14 +1086,14 @@
     }
 
     /**
-     * 向服务器上传图片，涉及到文件操作，比较重要的一个函数
+     * Select the image.
      */
     @FXML
     private void handleSwitchImage() {
         imageFile = ImageUtils.choose(mainApp);
-        // 这里会输出该图片的路径
+        // Print the path.
         System.out.println();
-        // 替换图片
+        // Change the image.
         try {
             if (imageFile != null) {
                 String localUrl = imageFile.toURI().toURL().toString();
Index: src/main/resources/org/example/scene/CommonUserView.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.geometry.Insets?>\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.control.Label?>\r\n<?import javafx.scene.control.TableColumn?>\r\n<?import javafx.scene.control.TableView?>\r\n<?import javafx.scene.control.TextArea?>\r\n<?import javafx.scene.control.TextField?>\r\n<?import javafx.scene.image.ImageView?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.layout.BorderPane?>\r\n<?import javafx.scene.layout.ColumnConstraints?>\r\n<?import javafx.scene.layout.GridPane?>\r\n<?import javafx.scene.layout.HBox?>\r\n<?import javafx.scene.layout.Pane?>\r\n<?import javafx.scene.layout.RowConstraints?>\r\n<?import javafx.scene.layout.StackPane?>\r\n<?import javafx.scene.layout.VBox?>\r\n<?import javafx.scene.shape.Rectangle?>\r\n<?import javafx.scene.text.Font?>\r\n<?import org.controlsfx.control.Rating?>\r\n\r\n<BorderPane maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"788.0\" prefWidth=\"1152.0\" xmlns=\"http://javafx.com/javafx/8.0.171\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"org.example.scene.CommonUserViewController\">\r\n   <center>\r\n      <StackPane prefHeight=\"150.0\" prefWidth=\"200.0\" BorderPane.alignment=\"CENTER\">\r\n         <children>\r\n            <BorderPane fx:id=\"subscriptedPane\" prefHeight=\"200.0\" prefWidth=\"200.0\" visible=\"false\" />\r\n            <BorderPane fx:id=\"moviePane\" prefHeight=\"200.0\" prefWidth=\"200.0\">\r\n               <center>\r\n                  <BorderPane prefHeight=\"200.0\" prefWidth=\"200.0\" BorderPane.alignment=\"CENTER\">\r\n                     <center>\r\n                        <HBox prefHeight=\"709.0\" prefWidth=\"952.0\" styleClass=\"mainHBox\" BorderPane.alignment=\"CENTER\">\r\n                           <children>\r\n                              <VBox alignment=\"TOP_RIGHT\" prefHeight=\"632.0\" prefWidth=\"449.0\">\r\n                                 <children>\r\n                                    <StackPane prefHeight=\"678.0\" prefWidth=\"449.0\">\r\n                                       <children>\r\n                                          <Rectangle fx:id=\"imageBorder\" arcHeight=\"5.0\" arcWidth=\"5.0\" fill=\"WHITE\" height=\"536.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" width=\"413.0\" />\r\n                                          <ImageView fx:id=\"movieCover\" fitHeight=\"516.0\" fitWidth=\"376.0\" pickOnBounds=\"true\" />\r\n                                       </children>\r\n                                       <VBox.margin>\r\n                                          <Insets top=\"65.0\" />\r\n                                       </VBox.margin>\r\n                                    </StackPane>\r\n                                    <Pane prefHeight=\"200.0\" prefWidth=\"200.0\">\r\n                                       <children>\r\n                                          <Rating fx:id=\"movieRating\" layoutX=\"23.0\" layoutY=\"15.0\" prefHeight=\"29.0\" prefWidth=\"176.0\" rating=\"5.0\" />\r\n                                          <Button layoutX=\"340.0\" layoutY=\"13.0\" mnemonicParsing=\"false\" onAction=\"#handleRate\" prefHeight=\"28.0\" prefWidth=\"78.0\" text=\"Rate\">\r\n                                             <font>\r\n                                                <Font size=\"18.0\" />\r\n                                             </font>\r\n                                          </Button>\r\n                                       </children>\r\n                                    </Pane>\r\n                                 </children>\r\n                                 <HBox.margin>\r\n                                    <Insets bottom=\"60.0\" />\r\n                                 </HBox.margin>\r\n                              </VBox>\r\n                              <Pane prefHeight=\"531.0\" prefWidth=\"499.0\">\r\n                                 <children>\r\n                                    <GridPane prefHeight=\"339.0\" prefWidth=\"503.0\">\r\n                                       <children>\r\n                                          <Label prefHeight=\"61.0\" prefWidth=\"46.0\" text=\"No.:\">\r\n                                             <font>\r\n                                                <Font size=\"18.0\" />\r\n                                             </font>\r\n                                          </Label>\r\n                                          <Label prefHeight=\"47.0\" prefWidth=\"72.0\" text=\"Name:\" GridPane.rowIndex=\"1\">\r\n                                             <font>\r\n                                                <Font size=\"18.0\" />\r\n                                             </font>\r\n                                          </Label>\r\n                                          <Label prefHeight=\"73.0\" prefWidth=\"122.0\" text=\"Director:\" GridPane.rowIndex=\"2\">\r\n                                             <font>\r\n                                                <Font size=\"18.0\" />\r\n                                             </font>\r\n                                          </Label>\r\n                                          <Label prefHeight=\"66.0\" prefWidth=\"149.0\" text=\"Actor&amp;Actress:\" GridPane.rowIndex=\"3\">\r\n                                             <font>\r\n                                                <Font size=\"18.0\" />\r\n                                             </font>\r\n                                          </Label>\r\n                                          <Label prefHeight=\"34.0\" prefWidth=\"95.0\" text=\"Contents:\" GridPane.rowIndex=\"5\">\r\n                                             <font>\r\n                                                <Font size=\"18.0\" />\r\n                                             </font>\r\n                                          </Label>\r\n                                          <Label prefHeight=\"69.0\" prefWidth=\"76.0\" text=\"Type:\" GridPane.rowIndex=\"4\">\r\n                                             <font>\r\n                                                <Font size=\"18.0\" />\r\n                                             </font>\r\n                                          </Label>\r\n                                          <Label fx:id=\"movieIdLabel\" prefHeight=\"109.0\" prefWidth=\"406.0\" GridPane.columnIndex=\"1\">\r\n                                             <font>\r\n                                                <Font size=\"18.0\" />\r\n                                             </font>\r\n                                          </Label>\r\n                                          <Label fx:id=\"movieNameLabel\" prefHeight=\"66.0\" prefWidth=\"335.0\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"1\">\r\n                                             <font>\r\n                                                <Font size=\"18.0\" />\r\n                                             </font>\r\n                                          </Label>\r\n                                          <Label fx:id=\"movieDirectorLabel\" prefHeight=\"61.0\" prefWidth=\"294.0\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"2\">\r\n                                             <font>\r\n                                                <Font size=\"18.0\" />\r\n                                             </font>\r\n                                          </Label>\r\n                                          <Label fx:id=\"movieActorLabel\" prefHeight=\"52.0\" prefWidth=\"291.0\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"3\">\r\n                                             <font>\r\n                                                <Font size=\"18.0\" />\r\n                                             </font>\r\n                                          </Label>\r\n                                          <Label fx:id=\"movieTypeLabel\" prefHeight=\"52.0\" prefWidth=\"282.0\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"4\">\r\n                                             <font>\r\n                                                <Font size=\"18.0\" />\r\n                                             </font>\r\n                                          </Label>\r\n                                          <Label fx:id=\"movieContentLabel\" alignment=\"TOP_LEFT\" prefHeight=\"222.0\" prefWidth=\"274.0\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"5\">\r\n                                             <font>\r\n                                                <Font size=\"18.0\" />\r\n                                             </font>\r\n                                          </Label>\r\n                                       </children>\r\n                                       <columnConstraints>\r\n                                          <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"192.0\" minWidth=\"10.0\" prefWidth=\"128.0\" />\r\n                                          <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"274.0\" minWidth=\"10.0\" prefWidth=\"264.0\" />\r\n                                       </columnConstraints>\r\n                                       <rowConstraints>\r\n                                          <RowConstraints maxHeight=\"100.0\" minHeight=\"6.0\" prefHeight=\"45.0\" valignment=\"TOP\" vgrow=\"SOMETIMES\" />\r\n                                          <RowConstraints maxHeight=\"147.0\" minHeight=\"2.0\" prefHeight=\"45.0\" valignment=\"TOP\" vgrow=\"SOMETIMES\" />\r\n                                          <RowConstraints maxHeight=\"354.0\" minHeight=\"6.0\" prefHeight=\"45.0\" valignment=\"TOP\" vgrow=\"SOMETIMES\" />\r\n                                          <RowConstraints maxHeight=\"382.0\" minHeight=\"10.0\" prefHeight=\"45.0\" valignment=\"TOP\" vgrow=\"SOMETIMES\" />\r\n                                          <RowConstraints maxHeight=\"431.0\" minHeight=\"10.0\" prefHeight=\"45.0\" valignment=\"TOP\" vgrow=\"SOMETIMES\" />\r\n                                          <RowConstraints maxHeight=\"441.0\" minHeight=\"0.0\" prefHeight=\"182.66665649414062\" valignment=\"TOP\" vgrow=\"SOMETIMES\" />\r\n                                       </rowConstraints>\r\n                                    </GridPane>\r\n                                    <TextArea fx:id=\"movieComArea\" layoutX=\"1.0\" layoutY=\"339.0\" prefHeight=\"202.0\" prefWidth=\"488.0\" />\r\n                                    <Button layoutX=\"374.0\" layoutY=\"552.0\" mnemonicParsing=\"false\" onAction=\"#handleComment\" prefHeight=\"36.0\" prefWidth=\"111.0\" text=\"Comment\">\r\n                                       <font>\r\n                                          <Font size=\"18.0\" />\r\n                                       </font>\r\n                                    </Button>\r\n                                 </children>\r\n                                 <HBox.margin>\r\n                                    <Insets top=\"65.0\" />\r\n                                 </HBox.margin>\r\n                              </Pane>\r\n                           </children>\r\n                        </HBox>\r\n                     </center>\r\n                  </BorderPane>\r\n               </center>\r\n               <left>\r\n                  <TableView fx:id=\"movieTableView\" prefHeight=\"200.0\" prefWidth=\"200.0\" BorderPane.alignment=\"CENTER\">\r\n                     <columnResizePolicy>\r\n                        <TableView fx:constant=\"CONSTRAINED_RESIZE_POLICY\" />\r\n                     </columnResizePolicy>\r\n                     <columns>\r\n                        <TableColumn fx:id=\"movieIdColumn\" prefWidth=\"102.0\" text=\"No.\" />\r\n                        <TableColumn fx:id=\"movieNameColumn\" prefWidth=\"96.0\" text=\"Name\" />\r\n                     </columns>\r\n                  </TableView>\r\n               </left>\r\n            </BorderPane>\r\n            <Pane fx:id=\"personInfoPane\" prefHeight=\"200.0\" prefWidth=\"200.0\" visible=\"false\">\r\n               <children>\r\n                  <HBox alignment=\"CENTER\" prefHeight=\"729.0\" prefWidth=\"1152.0\">\r\n                     <children>\r\n                        <VBox alignment=\"TOP_CENTER\" prefHeight=\"574.0\" prefWidth=\"154.0\" spacing=\"20.0\">\r\n                           <children>\r\n                              <Label prefHeight=\"38.0\" prefWidth=\"105.0\" text=\"Username\">\r\n                                 <font>\r\n                                    <Font size=\"21.0\" />\r\n                                 </font>\r\n                                 <VBox.margin>\r\n                                    <Insets top=\"40.0\" />\r\n                                 </VBox.margin>\r\n                              </Label>\r\n                              <Label prefHeight=\"38.0\" prefWidth=\"100.0\" text=\"Password\">\r\n                                 <font>\r\n                                    <Font size=\"21.0\" />\r\n                                 </font>\r\n                              </Label>\r\n                              <Label prefHeight=\"38.0\" prefWidth=\"50.0\" text=\"Age\">\r\n                                 <font>\r\n                                    <Font size=\"21.0\" />\r\n                                 </font>\r\n                              </Label>\r\n                              <Label prefHeight=\"38.0\" prefWidth=\"110.0\" text=\"Telephone\">\r\n                                 <font>\r\n                                    <Font size=\"21.0\" />\r\n                                 </font>\r\n                              </Label>\r\n                              <Label prefHeight=\"38.0\" prefWidth=\"82.0\" text=\"Address\">\r\n                                 <font>\r\n                                    <Font size=\"21.0\" />\r\n                                 </font>\r\n                              </Label>\r\n                              <Label prefHeight=\"38.0\" prefWidth=\"116.0\" text=\"ID_number\">\r\n                                 <font>\r\n                                    <Font size=\"21.0\" />\r\n                                 </font>\r\n                              </Label>\r\n                           </children>\r\n                        </VBox>\r\n                        <VBox alignment=\"TOP_RIGHT\" prefHeight=\"660.0\" prefWidth=\"256.0\" spacing=\"20.0\">\r\n                           <children>\r\n                              <TextField fx:id=\"usernameField\" prefHeight=\"38.0\" prefWidth=\"256.0\" text=\"text\">\r\n                                 <VBox.margin>\r\n                                    <Insets top=\"40.0\" />\r\n                                 </VBox.margin>\r\n                              </TextField>\r\n                              <TextField fx:id=\"passwordField\" prefHeight=\"38.0\" prefWidth=\"256.0\" />\r\n                              <TextField fx:id=\"AgeField\" prefHeight=\"38.0\" prefWidth=\"256.0\" />\r\n                              <TextField fx:id=\"telField\" prefHeight=\"38.0\" prefWidth=\"256.0\" />\r\n                              <TextField fx:id=\"addrField\" prefHeight=\"38.0\" prefWidth=\"256.0\" />\r\n                              <TextField fx:id=\"sidField\" prefHeight=\"38.0\" prefWidth=\"256.0\" />\r\n                              <Button fx:id=\"changeButton\" mnemonicParsing=\"false\" onAction=\"#handleChange\" prefHeight=\"38.0\" prefWidth=\"92.0\" text=\"Change\">\r\n                                 <font>\r\n                                    <Font size=\"18.0\" />\r\n                                 </font></Button>\r\n                           </children>\r\n                           <HBox.margin>\r\n                              <Insets />\r\n                           </HBox.margin>\r\n                        </VBox>\r\n                     </children>\r\n                  </HBox>\r\n               </children>\r\n            </Pane>\r\n         </children>\r\n      </StackPane>\r\n   </center>\r\n   <top>\r\n      <AnchorPane prefHeight=\"61.0\" prefWidth=\"1243.0\" styleClass=\"topBar\" BorderPane.alignment=\"CENTER\">\r\n         <children>\r\n            <HBox alignment=\"CENTER_RIGHT\" layoutX=\"544.0\" layoutY=\"15.0\" prefHeight=\"32.0\" prefWidth=\"671.0\" spacing=\"14.0\">\r\n               <children>\r\n                  <Label fx:id=\"userNameLabel\" text=\"Username\">\r\n                     <font>\r\n                        <Font size=\"24.0\" />\r\n                     </font>\r\n                  </Label>\r\n                  <Label fx:id=\"toMovieButton\" onMouseClicked=\"#handleToMovie\" text=\"Movies\">\r\n                     <font>\r\n                        <Font size=\"24.0\" />\r\n                     </font>\r\n                  </Label>\r\n                  <Label fx:id=\"toCommonUserButton\" onMouseClicked=\"#handleToCommonUser\" text=\"Personal\">\r\n                     <font>\r\n                        <Font size=\"24.0\" />\r\n                     </font>\r\n                  </Label>\r\n                  <Label fx:id=\"logOutButton\" onMouseClicked=\"#handleLogout\" text=\"Exit\">\r\n                     <font>\r\n                        <Font size=\"24.0\" />\r\n                     </font>\r\n                     <HBox.margin>\r\n                        <Insets right=\"60.0\" />\r\n                     </HBox.margin>\r\n                  </Label>\r\n               </children>\r\n            </HBox>\r\n            <Label layoutX=\"39.0\" layoutY=\"15.0\" prefHeight=\"38.0\" prefWidth=\"260.0\" text=\"Movie Management\">\r\n               <font>\r\n                  <Font size=\"24.0\" />\r\n               </font>\r\n            </Label>\r\n         </children>\r\n      </AnchorPane>\r\n   </top>\r\n</BorderPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/org/example/scene/CommonUserView.fxml b/src/main/resources/org/example/scene/CommonUserView.fxml
--- a/src/main/resources/org/example/scene/CommonUserView.fxml	(revision cc0a39f6b07677981707a0dcc6b6c89b51a0ba64)
+++ b/src/main/resources/org/example/scene/CommonUserView.fxml	(date 1683635314444)
@@ -7,6 +7,7 @@
 <?import javafx.scene.control.TableView?>
 <?import javafx.scene.control.TextArea?>
 <?import javafx.scene.control.TextField?>
+<?import javafx.scene.image.Image?>
 <?import javafx.scene.image.ImageView?>
 <?import javafx.scene.layout.AnchorPane?>
 <?import javafx.scene.layout.BorderPane?>
@@ -25,7 +26,11 @@
    <center>
       <StackPane prefHeight="150.0" prefWidth="200.0" BorderPane.alignment="CENTER">
          <children>
-            <BorderPane fx:id="subscriptedPane" prefHeight="200.0" prefWidth="200.0" visible="false" />
+            <ImageView fitHeight="730.0" fitWidth="1156.0">
+               <image>
+                  <Image url="@images/systemUse/20230509101546.png" />
+               </image>
+            </ImageView>
             <BorderPane fx:id="moviePane" prefHeight="200.0" prefWidth="200.0">
                <center>
                   <BorderPane prefHeight="200.0" prefWidth="200.0" BorderPane.alignment="CENTER">
@@ -60,7 +65,7 @@
                               </VBox>
                               <Pane prefHeight="531.0" prefWidth="499.0">
                                  <children>
-                                    <GridPane prefHeight="339.0" prefWidth="503.0">
+                                    <GridPane prefHeight="327.0" prefWidth="503.0">
                                        <children>
                                           <Label prefHeight="61.0" prefWidth="46.0" text="No.:">
                                              <font>
@@ -117,7 +122,7 @@
                                                 <Font size="18.0" />
                                              </font>
                                           </Label>
-                                          <Label fx:id="movieContentLabel" alignment="TOP_LEFT" prefHeight="222.0" prefWidth="274.0" GridPane.columnIndex="1" GridPane.rowIndex="5">
+                                          <Label fx:id="movieContentLabel" alignment="TOP_LEFT" prefHeight="109.0" prefWidth="274.0" GridPane.columnIndex="1" GridPane.rowIndex="5">
                                              <font>
                                                 <Font size="18.0" />
                                              </font>
@@ -136,12 +141,30 @@
                                           <RowConstraints maxHeight="441.0" minHeight="0.0" prefHeight="182.66665649414062" valignment="TOP" vgrow="SOMETIMES" />
                                        </rowConstraints>
                                     </GridPane>
-                                    <TextArea fx:id="movieComArea" layoutX="1.0" layoutY="339.0" prefHeight="202.0" prefWidth="488.0" />
-                                    <Button layoutX="374.0" layoutY="552.0" mnemonicParsing="false" onAction="#handleComment" prefHeight="36.0" prefWidth="111.0" text="Comment">
+                                    <TextArea fx:id="movieComArea" layoutX="6.0" layoutY="277.0" prefHeight="151.0" prefWidth="488.0" />
+                                    <Button layoutX="374.0" layoutY="448.0" mnemonicParsing="false" onAction="#handleComment" prefHeight="36.0" prefWidth="111.0" text="Comment">
                                        <font>
                                           <Font size="18.0" />
                                        </font>
                                     </Button>
+                                    <VBox alignment="TOP_RIGHT" layoutX="6.0" layoutY="448.0" minHeight="-Infinity" minWidth="-Infinity" prefHeight="190.0" prefWidth="208.0">
+                                       <children>
+                                          <StackPane minHeight="-Infinity" minWidth="-Infinity" prefHeight="108.0" prefWidth="206.0">
+                                             <children>
+                                                <Rectangle fx:id="commentBorder" arcHeight="5.0" arcWidth="5.0" fill="WHITE" height="112.0" stroke="BLACK" strokeType="INSIDE" width="153.0" />
+                                                <ImageView fx:id="commontCover" fitHeight="108.0" fitWidth="145.0" pickOnBounds="true" />
+                                             </children>
+                                             <VBox.margin>
+                                                <Insets bottom="10.0" top="30.0" />
+                                             </VBox.margin>
+                                          </StackPane>
+                                          <Button fx:id="imageButton" mnemonicParsing="false" onAction="#handleSwitchImage" prefHeight="25.0" prefWidth="59.0" text="Select">
+                                             <VBox.margin>
+                                                <Insets bottom="30.0" right="30.0" />
+                                             </VBox.margin>
+                                          </Button>
+                                       </children>
+                                    </VBox>
                                  </children>
                                  <HBox.margin>
                                     <Insets top="65.0" />
@@ -189,11 +212,6 @@
                                  </font>
                               </Label>
                               <Label prefHeight="38.0" prefWidth="110.0" text="Telephone">
-                                 <font>
-                                    <Font size="21.0" />
-                                 </font>
-                              </Label>
-                              <Label prefHeight="38.0" prefWidth="82.0" text="Address">
                                  <font>
                                     <Font size="21.0" />
                                  </font>
@@ -215,12 +233,7 @@
                               <TextField fx:id="passwordField" prefHeight="38.0" prefWidth="256.0" />
                               <TextField fx:id="AgeField" prefHeight="38.0" prefWidth="256.0" />
                               <TextField fx:id="telField" prefHeight="38.0" prefWidth="256.0" />
-                              <TextField fx:id="addrField" prefHeight="38.0" prefWidth="256.0" />
                               <TextField fx:id="sidField" prefHeight="38.0" prefWidth="256.0" />
-                              <Button fx:id="changeButton" mnemonicParsing="false" onAction="#handleChange" prefHeight="38.0" prefWidth="92.0" text="Change">
-                                 <font>
-                                    <Font size="18.0" />
-                                 </font></Button>
                            </children>
                            <HBox.margin>
                               <Insets />
Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># CSC1004-Java\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.md b/README.md
--- a/README.md	(revision cc0a39f6b07677981707a0dcc6b6c89b51a0ba64)
+++ b/README.md	(date 1683635758615)
@@ -1,1 +1,43 @@
-# CSC1004-Java
+# CSC1004-Java-Java-Movie-Management-System
+My program is a movie managemet system. It includes three parts, Login part, Admin part and Commonuser part.
+
+# The login and Sign up part
+
+New user can sign up through the sign_up page to sign up.
+Then, the user can log in though the username and password and enter the commonuser part.
+
+Some of Admin has been added into the MySql. The admin can log in through the username and password.
+Then, they can enter the Admin part.
+
+# The Admin part
+
+1. Admins can view the movies and update/delete/add movies. They can upload image of the movie.
+
+2. Admin can change the admin's and commonusers' username and password.
+
+3. Admin can view commonusers' comments on movies and view the rates on movies.
+4. Admin see some statistics of rates/ages/movietypes through chart plots.
+
+# The commonuser part
+
+1. Commonuser can view the users' statistics.
+2. Commonuser can view all movies' contents and comment and rate the movies.
+
+# Implementation
+
+1. Prepare the classes of Admin,CommonUser,Movie,MovieClass,Rate,Comment,and User.
+2. Write the JdbcUtils.java to connect the program with mysql.
+3. Write three .fxml files: Login.fxml,AdminView.fxml,CommonUser.fxml.
+   1. Login.fxml covers two stages: login stage and sign up stage.
+   2. AdminView.fxml covers five stages: Movie,Admin,CommonUser,Comment,Statistics(rate,age,movieClass).
+   3. commonUserView.fxml covers two stages: User page,Movie page(view movie contents and rate and comment the movie).
+4. Write three controller.java for each .fxml.
+5. Finish the main.java
+# How to run the program
+
+1. Download Java 8, MySql, and Intellij.
+2. Add mysql-connector and controlsfx into the project.
+3. Run src/main/resources/org/example/moviemanagement.sql.
+4. In JdbcUtils.java, change the code in 14 and 15 lines to your MySql's username and password.
+5. Run the main.java.
+
Index: src/main/java/org/example/Scene/CommonUserViewController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.scene;\r\n\r\nimport javafx.application.Application;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.TableColumn;\r\nimport javafx.scene.control.TableView;\r\nimport javafx.scene.control.TextArea;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.scene.layout.BorderPane;\r\nimport javafx.scene.layout.Pane;\r\nimport javafx.scene.shape.Rectangle;\r\nimport javafx.stage.Stage;\r\nimport org.example.Main;\r\nimport org.example.Session;\r\nimport org.example.models.CommonUser;\r\nimport org.example.models.Movie;\r\nimport org.example.utils.JdbcUtils;\r\nimport org.example.utils.UIAdjistUtils;\r\nimport org.controlsfx.control.Rating;\r\n\r\nimport javax.xml.bind.annotation.XmlMimeType;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n\r\npublic class CommonUserViewController extends Application {\r\n        private Main mainApp;\r\n    @FXML\r\n    private TextField usernameField;\r\n\r\n    @FXML\r\n    private BorderPane subscriptedPane;\r\n\r\n    @FXML\r\n    private TableColumn<Movie, Integer> movieIdColumn;\r\n\r\n    @FXML\r\n    private TextArea movieComArea;\r\n\r\n    @FXML\r\n    private Rectangle imageBorder;\r\n\r\n    @FXML\r\n    private TextField sidField;\r\n\r\n    @FXML\r\n    private Label movieNameLabel;\r\n\r\n    @FXML\r\n    private Label movieDirectorLabel;\r\n\r\n    @FXML\r\n    private Label toMovieButton;\r\n\r\n    @FXML\r\n    private Button changeButton;\r\n\r\n    @FXML\r\n    private ImageView movieCover;\r\n\r\n    @FXML\r\n    private TableView<Movie> movieTableView;\r\n\r\n    @FXML\r\n    private Label userNameLabel;\r\n\r\n    @FXML\r\n    private Label toCommonUserButton;\r\n\r\n    @FXML\r\n    private TextField passwordField;\r\n\r\n    @FXML\r\n    private Label movieContentLabel;\r\n\r\n    @FXML\r\n    private TextField AgeField;\r\n\r\n    @FXML\r\n    private TextField telField;\r\n\r\n    @FXML\r\n    private TableColumn<Movie, String> movieNameColumn;\r\n\r\n    @FXML\r\n    private Pane personInfoPane;\r\n\r\n    @FXML\r\n    private Label movieTypeLabel;\r\n\r\n    @FXML\r\n    private Label logOutButton;\r\n\r\n    @FXML\r\n    private BorderPane moviePane;\r\n    @FXML\r\n    private Label movieActorLabel;\r\n    @FXML\r\n    private Label movieIdLabel;\r\n    @FXML\r\n    private Rating movieRating;\r\n    private ObservableList<Movie> moviesData = FXCollections.observableArrayList();\r\n    @FXML\r\n    private void initialize() {\r\n        movieIdColumn.setCellValueFactory(cellData -> cellData.getValue().idProperty().asObject());\r\n        movieNameColumn.setCellValueFactory(cellData -> cellData.getValue().nameProperty());\r\n        movieTableView.getSelectionModel().selectedItemProperty().addListener(\r\n                (observable, oldValue, newValue) -> updateDetail(newValue)\r\n        );\r\n        initTable();\r\n        movieTableView.getSelectionModel().selectFirst();\r\n        initUserNameLabel();\r\n    }\r\n\r\n    public void initUserNameLabel() {\r\n        if (Session.getType().equals(\"commonUser\")) {\r\n            userNameLabel.setText(Session.getUsername());\r\n        }\r\n        else if (Session.getType().equals(\"admin\")) {\r\n            userNameLabel.setText(\"尊贵的管理员\" + Session.getUsername() + \"先生\");\r\n        }\r\n    }\r\n    public void initTable() {\r\n        JdbcUtils jdbcUtils = new JdbcUtils();\r\n        jdbcUtils.getConnection();\r\n        String sql = \"select a.id, a.coverPath, a.`name`, a.director, a.actor, a.intro, b.className from `movie` a, `mClass` b where a.classNumber = b.id;\";\r\n        List<Object> params = new ArrayList<>();\r\n        try {\r\n            List<Movie> rawData = jdbcUtils.findMoreProResult(sql, params, Movie.class);\r\n            moviesData.addAll(rawData);\r\n            movieTableView.setItems(moviesData);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    public void updateDetail(Movie solo) {\r\n        solo = movieTableView.getSelectionModel().getSelectedItem();\r\n        movieIdLabel.setText(\"\" + solo.getId());\r\n        movieNameLabel.setText(solo.getName());\r\n        movieDirectorLabel.setText(solo.getDirector());\r\n        movieActorLabel.setText(solo.getActor());\r\n        movieContentLabel.setText(solo.getIntro());\r\n        movieTypeLabel.setText(solo.getClassName());\r\n        movieComArea.clear();\r\n        movieRating.setRating(5);\r\n        File newFile = new File(\"src/main/resources/org/example/scene/images/\" + solo.getCoverPath());\r\n        //System.out.println(newFile.getAbsoluteFile().toURI());\r\n        movieCover.setImage(new Image(newFile.getAbsoluteFile().toURI().toString()));\r\n        UIAdjistUtils.adjustImageBorder(movieCover, imageBorder);\r\n    }\r\n    public void initPersonInfoPane() {\r\n        JdbcUtils jdbcUtils = new JdbcUtils();\r\n        jdbcUtils.getConnection();\r\n        String sql = \"select * from `commonUser` where username = ?\";\r\n        List<Object> params = new ArrayList<>();\r\n        params.add(Session.getUsername());\r\n\r\n        try {\r\n            CommonUser userNow = jdbcUtils.findSimpleProResult(sql, params, CommonUser.class);\r\n\r\n            // 设置显示对应的原始数据\r\n            usernameField.setText(userNow.getUsername());\r\n            passwordField.setText(userNow.getPassword());\r\n            AgeField.setText(userNow.getAge());\r\n            sidField.setText(userNow.getSid());\r\n            telField.setText(userNow.getTel());\r\n\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n        @Override\r\n        public void start(Stage primaryStage){\r\n\r\n        }\r\n\r\n        public void setMainApp(Main mainApp) {this.mainApp = mainApp;\r\n        }\r\n\r\n    public void handleChange(ActionEvent actionEvent) {\r\n    }\r\n\r\n    public void handleNameOrderPie(ActionEvent actionEvent) {\r\n    }\r\n\r\n    public void handleToMovie() {\r\n        //subscriptedPane.setVisible(false);\r\n        personInfoPane.setVisible(false);\r\n        moviePane.setVisible(true);\r\n    }\r\n\r\n    public void handleToCommonUser() {\r\n        moviePane.setVisible(false);\r\n        //subscriptedPane.setVisible(false);\r\n        personInfoPane.setVisible(true);\r\n        initPersonInfoPane();\r\n    }\r\n\r\n    public void handleLogout(MouseEvent mouseEvent) {\r\n        try {\r\n            FXMLLoader loader = new FXMLLoader();\r\n            loader.setLocation(Main.class.getResource(\"scene/Login.fxml\"));\r\n            Parent loginView = loader.load();\r\n            LoginController loginController = loader.getController();\r\n            mainApp.getPrimaryStage().setScene(new Scene(loginView, 1152, 640));\r\n            mainApp.getPrimaryStage().show();\r\n            loginController.setMainApp(mainApp);\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    public void handleRate() {\r\n\r\n        JdbcUtils jdbcUtils=new JdbcUtils();\r\n        jdbcUtils.getConnection();\r\n        String Usql = \"select * from `commonUser` where username = ?\";\r\n        List<Object> Uparams = new ArrayList<>();\r\n        Uparams.add(Session.getUsername());\r\n        try {\r\n            CommonUser userNow = jdbcUtils.findSimpleProResult(Usql, Uparams, CommonUser.class);\r\n            String sql =\"insert into `rate`(uid,mid,rate)\"+\"values(?,?,?)\";\r\n            List<Object> params=new ArrayList<>();\r\n            params.add(userNow.getId());\r\n            params.add(movieTableView.getSelectionModel().getSelectedItem().getId());\r\n            params.add((int)(movieRating.getRating()));\r\n            try{\r\n                jdbcUtils.updateByPreparedStatement(sql,params);\r\n            }catch (SQLException e){\r\n                e.printStackTrace();\r\n            }\r\n            //System.out.println(params);\r\n        }\r\n        catch (Exception e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n\r\n\r\n    }\r\n    @FXML\r\n    public void handleComment(ActionEvent actionEvent) {\r\n        JdbcUtils jdbcUtils=new JdbcUtils();\r\n        jdbcUtils.getConnection();\r\n        String Usql = \"select * from `commonUser` where username = ?\";\r\n        List<Object> Uparams = new ArrayList<>();\r\n        Uparams.add(Session.getUsername());\r\n        try {\r\n            CommonUser userNow = jdbcUtils.findSimpleProResult(Usql, Uparams, CommonUser.class);\r\n            String sql =\"insert into `order`(uid,mid,comment)\"+\"values(?,?,?)\";\r\n            List<Object> params=new ArrayList<>();\r\n            params.add(userNow.getId());\r\n            params.add(movieTableView.getSelectionModel().getSelectedItem().getId());\r\n            params.add((movieComArea.getText()));\r\n            movieComArea.clear();\r\n            try{\r\n                jdbcUtils.updateByPreparedStatement(sql,params);\r\n            }catch (SQLException e){\r\n                e.printStackTrace();\r\n            }\r\n            //System.out.println(params);\r\n        }\r\n        catch (Exception e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/Scene/CommonUserViewController.java b/src/main/java/org/example/Scene/CommonUserViewController.java
--- a/src/main/java/org/example/Scene/CommonUserViewController.java	(revision cc0a39f6b07677981707a0dcc6b6c89b51a0ba64)
+++ b/src/main/java/org/example/Scene/CommonUserViewController.java	(date 1683635314467)
@@ -25,6 +25,7 @@
 import org.example.Session;
 import org.example.models.CommonUser;
 import org.example.models.Movie;
+import org.example.utils.ImageUtils;
 import org.example.utils.JdbcUtils;
 import org.example.utils.UIAdjistUtils;
 import org.controlsfx.control.Rating;
@@ -32,6 +33,7 @@
 import javax.xml.bind.annotation.XmlMimeType;
 import java.io.File;
 import java.io.IOException;
+import java.net.MalformedURLException;
 import java.sql.SQLException;
 import java.util.ArrayList;
 import java.util.List;
@@ -42,8 +44,6 @@
     @FXML
     private TextField usernameField;
 
-    @FXML
-    private BorderPane subscriptedPane;
 
     @FXML
     private TableColumn<Movie, Integer> movieIdColumn;
@@ -66,8 +66,6 @@
     @FXML
     private Label toMovieButton;
 
-    @FXML
-    private Button changeButton;
 
     @FXML
     private ImageView movieCover;
@@ -113,7 +111,18 @@
     private Label movieIdLabel;
     @FXML
     private Rating movieRating;
+    @FXML
+    private Rectangle commentBorder;
+    @FXML
+    private ImageView commontCover;
+    @FXML
+    private Button imageButton;
     private ObservableList<Movie> moviesData = FXCollections.observableArrayList();
+    private File imageFile;
+
+    /**
+     * Initialize the tables in CommonUSer page.
+     */
     @FXML
     private void initialize() {
         movieIdColumn.setCellValueFactory(cellData -> cellData.getValue().idProperty().asObject());
@@ -125,15 +134,20 @@
         movieTableView.getSelectionModel().selectFirst();
         initUserNameLabel();
     }
-
+    /**
+     * Initialize the UserName table.
+     */
     public void initUserNameLabel() {
         if (Session.getType().equals("commonUser")) {
             userNameLabel.setText(Session.getUsername());
         }
         else if (Session.getType().equals("admin")) {
-            userNameLabel.setText("尊贵的管理员" + Session.getUsername() + "先生");
+            userNameLabel.setText("Admin" + Session.getUsername());
         }
     }
+    /**
+     * Initialize the Movie table.
+     */
     public void initTable() {
         JdbcUtils jdbcUtils = new JdbcUtils();
         jdbcUtils.getConnection();
@@ -147,6 +161,9 @@
             e.printStackTrace();
         }
     }
+    /**
+     * Update the Movie Info.
+     */
     public void updateDetail(Movie solo) {
         solo = movieTableView.getSelectionModel().getSelectedItem();
         movieIdLabel.setText("" + solo.getId());
@@ -156,12 +173,15 @@
         movieContentLabel.setText(solo.getIntro());
         movieTypeLabel.setText(solo.getClassName());
         movieComArea.clear();
-        movieRating.setRating(5);
+        movieRating.setRating(0);
         File newFile = new File("src/main/resources/org/example/scene/images/" + solo.getCoverPath());
         //System.out.println(newFile.getAbsoluteFile().toURI());
         movieCover.setImage(new Image(newFile.getAbsoluteFile().toURI().toString()));
         UIAdjistUtils.adjustImageBorder(movieCover, imageBorder);
     }
+    /**
+     * Initialize the User's Info.
+     */
     public void initPersonInfoPane() {
         JdbcUtils jdbcUtils = new JdbcUtils();
         jdbcUtils.getConnection();
@@ -171,11 +191,9 @@
 
         try {
             CommonUser userNow = jdbcUtils.findSimpleProResult(sql, params, CommonUser.class);
-
-            // 设置显示对应的原始数据
             usernameField.setText(userNow.getUsername());
             passwordField.setText(userNow.getPassword());
-            AgeField.setText(userNow.getAge());
+            AgeField.setText(String.valueOf(userNow.getAge()));
             sidField.setText(userNow.getSid());
             telField.setText(userNow.getTel());
 
@@ -188,29 +206,27 @@
         public void start(Stage primaryStage){
 
         }
-
         public void setMainApp(Main mainApp) {this.mainApp = mainApp;
         }
-
-    public void handleChange(ActionEvent actionEvent) {
-    }
-
-    public void handleNameOrderPie(ActionEvent actionEvent) {
-    }
-
+    /**
+     * Turn to Movie Page.
+     */
     public void handleToMovie() {
-        //subscriptedPane.setVisible(false);
         personInfoPane.setVisible(false);
         moviePane.setVisible(true);
     }
-
+    /**
+     * Turn to CommonUser Page.
+     */
     public void handleToCommonUser() {
         moviePane.setVisible(false);
-        //subscriptedPane.setVisible(false);
         personInfoPane.setVisible(true);
         initPersonInfoPane();
     }
-
+    /**
+     * Turn to Log In Page.
+     */
+    @FXML
     public void handleLogout(MouseEvent mouseEvent) {
         try {
             FXMLLoader loader = new FXMLLoader();
@@ -224,7 +240,9 @@
             e.printStackTrace();
         }
     }
-
+    /**
+     * Rate the Movie.
+     */
     @FXML
     public void handleRate() {
 
@@ -234,11 +252,30 @@
         List<Object> Uparams = new ArrayList<>();
         Uparams.add(Session.getUsername());
         try {
+
             CommonUser userNow = jdbcUtils.findSimpleProResult(Usql, Uparams, CommonUser.class);
-            String sql ="insert into `rate`(uid,mid,rate)"+"values(?,?,?)";
+            String Oldsql="select * from `rate` where uid = ? and mid = ?";
+            List<Object> Oparams =new ArrayList<>();
+            Oparams.add(userNow.getId());
+            Oparams.add(movieTableView.getSelectionModel().getSelectedItem().getId());
+            if(jdbcUtils.findSimpleResult(Oldsql, Oparams).toString() != "{}"){
+                //System.out.println(jdbcUtils.findSimpleResult(Oldsql,Oparams));
+                String Osql="delete from `rate` where uid = ? and mid = ?";
+                //System.out.println(Oparams);
+                try{
+                    jdbcUtils.updateByPreparedStatement(Osql,Oparams);
+                }catch (SQLException e){
+                    e.printStackTrace();
+                }
+
+            }
+
+            String sql ="insert into `rate`(uid,username,mid,moviename,rate)"+"values(?,?,?,?,?)";
             List<Object> params=new ArrayList<>();
             params.add(userNow.getId());
+            params.add(userNow.getUsername());
             params.add(movieTableView.getSelectionModel().getSelectedItem().getId());
+            params.add(movieTableView.getSelectionModel().getSelectedItem().getName());
             params.add((int)(movieRating.getRating()));
             try{
                 jdbcUtils.updateByPreparedStatement(sql,params);
@@ -253,6 +290,9 @@
 
 
     }
+    /**
+     * Comment the Movie.
+     */
     @FXML
     public void handleComment(ActionEvent actionEvent) {
         JdbcUtils jdbcUtils=new JdbcUtils();
@@ -262,21 +302,49 @@
         Uparams.add(Session.getUsername());
         try {
             CommonUser userNow = jdbcUtils.findSimpleProResult(Usql, Uparams, CommonUser.class);
-            String sql ="insert into `order`(uid,mid,comment)"+"values(?,?,?)";
+            String sql ="insert into `comment`(uid,username,mid,moviename,comment,picture)"+"values(?,?,?,?,?,?)";
             List<Object> params=new ArrayList<>();
             params.add(userNow.getId());
+            params.add(userNow.getUsername());
             params.add(movieTableView.getSelectionModel().getSelectedItem().getId());
+            params.add(movieTableView.getSelectionModel().getSelectedItem().getName());
             params.add((movieComArea.getText()));
+            if(imageFile!=null)
+                params.add(imageFile.getName());
+            else {
+                params.add("non_exist");
+            }
             movieComArea.clear();
+            commontCover.setImage(null);
             try{
                 jdbcUtils.updateByPreparedStatement(sql,params);
             }catch (SQLException e){
                 e.printStackTrace();
             }
+            if(imageFile!=null)
+                ImageUtils.save(imageFile);
             //System.out.println(params);
         }
         catch (Exception e) {
             throw new RuntimeException(e);
         }
     }
+    /**
+     * Select the image.
+     */
+    @FXML
+    private void handleSwitchImage() {
+        imageFile = ImageUtils.choose(mainApp);
+        // Print the path.
+        System.out.println();
+        // Change the image.
+        try {
+            if (imageFile != null) {
+                String localUrl = imageFile.toURI().toURL().toString();
+                commontCover.setImage(new Image(localUrl, true));
+            }
+        } catch (MalformedURLException e) {
+            e.printStackTrace();
+        }
+    }
 }
Index: src/main/java/org/example/utils/UIAdjistUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.utils;\r\n\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.shape.Rectangle;\r\n\r\npublic class UIAdjistUtils {\r\n    public static void adjustImageBorder(ImageView image, Rectangle border) {\r\n\r\n//        System.out.println(image.getImage().getHeight());\r\n        Double height = image.getFitHeight();\r\n        Double width = image.getFitWidth();\r\n        border.setWidth(width + 15);\r\n        border.setHeight(height + 15);\r\n//        System.out.println(\"更新border的大小\" + \"fitHeight = \" + image.getFitHeight() + \" fitWidth = \" + image.getFitWidth());\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/utils/UIAdjistUtils.java b/src/main/java/org/example/utils/UIAdjistUtils.java
--- a/src/main/java/org/example/utils/UIAdjistUtils.java	(revision cc0a39f6b07677981707a0dcc6b6c89b51a0ba64)
+++ b/src/main/java/org/example/utils/UIAdjistUtils.java	(date 1683635314488)
@@ -6,11 +6,9 @@
 public class UIAdjistUtils {
     public static void adjustImageBorder(ImageView image, Rectangle border) {
 
-//        System.out.println(image.getImage().getHeight());
         Double height = image.getFitHeight();
         Double width = image.getFitWidth();
         border.setWidth(width + 15);
         border.setHeight(height + 15);
-//        System.out.println("更新border的大小" + "fitHeight = " + image.getFitHeight() + " fitWidth = " + image.getFitWidth());
     }
 }
Index: src/main/java/org/example/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example;\r\n\r\nimport javafx.application.Application;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.stage.Stage;\r\nimport org.example.models.User;\r\nimport org.example.scene.LoginController;\r\n\r\nimport java.io.IOException;\r\nimport java.util.Objects;\r\n\r\npublic class Main extends Application{\r\n    private User userNow;\r\n    private Stage primaryStage;\r\n\r\n    @Override\r\n    public void start(Stage primaryStage) throws Exception {\r\n        this.primaryStage = primaryStage;\r\n        this.primaryStage.setTitle(\"Movie Management\");\r\n        showLoginView();\r\n    }\r\n    public void showLoginView() {\r\n        try {\r\n            // 载入登录页面\r\n            FXMLLoader loader = new FXMLLoader();\r\n            loader.setLocation(Main.class.getResource(\"scene/Login.fxml\"));\r\n            Parent root = loader.load();\r\n            LoginController loginController = loader.getController();\r\n            primaryStage.setScene(new Scene(root));\r\n            primaryStage.show();\r\n\r\n            // 传递主函数\r\n            System.out.println(loginController);\r\n            loginController.setMainApp(this);\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    public void setUserNow(User userNow) {\r\n        this.userNow = userNow;\r\n    }\r\n\r\n    public User getUserNow() {\r\n        return userNow;\r\n    }\r\n\r\n    public Stage getPrimaryStage() {\r\n        return primaryStage;\r\n    }\r\n\r\n    public void setPrimaryStage(Stage primaryStage) {\r\n        this.primaryStage = primaryStage;\r\n    }\r\n    public static void main(String[] args){\r\n        launch(args);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/Main.java b/src/main/java/org/example/Main.java
--- a/src/main/java/org/example/Main.java	(revision cc0a39f6b07677981707a0dcc6b6c89b51a0ba64)
+++ b/src/main/java/org/example/Main.java	(date 1683635314497)
@@ -21,17 +21,19 @@
         this.primaryStage.setTitle("Movie Management");
         showLoginView();
     }
+    /**
+     * show the loginView page.
+     */
     public void showLoginView() {
         try {
-            // 载入登录页面
+            // Load the login page.
             FXMLLoader loader = new FXMLLoader();
             loader.setLocation(Main.class.getResource("scene/Login.fxml"));
             Parent root = loader.load();
             LoginController loginController = loader.getController();
+            primaryStage.setResizable(false);
             primaryStage.setScene(new Scene(root));
             primaryStage.show();
-
-            // 传递主函数
             System.out.println(loginController);
             loginController.setMainApp(this);
         } catch (IOException e) {
Index: src/main/resources/org/example/scene/Login.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.control.CheckBox?>\r\n<?import javafx.scene.control.Label?>\r\n<?import javafx.scene.control.PasswordField?>\r\n<?import javafx.scene.control.TextField?>\r\n<?import javafx.scene.image.Image?>\r\n<?import javafx.scene.image.ImageView?>\r\n<?import javafx.scene.layout.Pane?>\r\n<?import javafx.scene.text.Font?>\r\n\r\n<Pane maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"634.0\" prefWidth=\"1072.0\" xmlns=\"http://javafx.com/javafx/8.0.171\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"org.example.scene.LoginController\">\r\n   <children>\r\n      <Pane fx:id=\"Login_pane\" cache=\"true\" layoutY=\"1.0\" prefHeight=\"651.0\" prefWidth=\"1079.0\" style=\"-fx-background-image: images\\systemUse\\loginCover.jpgimages\\systemUse\\loginCover.jpg;\">\r\n         <children>\r\n            <ImageView fitHeight=\"709.0\" fitWidth=\"1118.0\" layoutY=\"-9.0\">\r\n               <image>\r\n                  <Image url=\"@images/systemUse/loginCover.jpg\" />\r\n               </image>\r\n            </ImageView>\r\n            <Button fx:id=\"SignUp\" alignment=\"CENTER\" layoutX=\"602.0\" layoutY=\"440.0\" mnemonicParsing=\"false\" onAction=\"#signup\" prefHeight=\"47.0\" prefWidth=\"141.0\" text=\"Sign Up\" textFill=\"#babe3a\">\r\n               <font>\r\n                  <Font size=\"24.0\" />\r\n               </font>\r\n            </Button>\r\n            <CheckBox fx:id=\"isAdmin\" layoutX=\"469.0\" layoutY=\"380.0\" mnemonicParsing=\"false\" prefHeight=\"47.0\" prefWidth=\"141.0\" selected=\"true\" text=\"Admin\" textFill=\"#babe00\">\r\n               <font>\r\n                  <Font size=\"24.0\" />\r\n               </font>\r\n            </CheckBox>\r\n            <TextField fx:id=\"UserField\" layoutX=\"506.0\" layoutY=\"214.0\" prefHeight=\"47.0\" prefWidth=\"252.0\" text=\"qweokk\" />\r\n            <PasswordField fx:id=\"passwordField\" layoutX=\"506.0\" layoutY=\"319.0\" prefHeight=\"40.0\" prefWidth=\"252.0\" text=\"123\" />\r\n            <Label fx:id=\"Password\" layoutX=\"300.0\" layoutY=\"316.0\" text=\"password:\" textFill=\"#babe3a\">\r\n               <font>\r\n                  <Font size=\"36.0\" />\r\n               </font>\r\n            </Label>\r\n            <Label fx:id=\"UsernameField\" layoutX=\"298.0\" layoutY=\"214.0\" text=\"username:\" textFill=\"#babe3a\">\r\n               <font>\r\n                  <Font size=\"36.0\" />\r\n               </font>\r\n            </Label>\r\n            <Label fx:id=\"ProjectName\" layoutX=\"298.0\" layoutY=\"137.0\" text=\"Movie Management System\" textFill=\"#babe3a\">\r\n               <font>\r\n                  <Font size=\"36.0\" />\r\n               </font>\r\n            </Label>\r\n            <Button fx:id=\"LoginBut\" alignment=\"CENTER\" layoutX=\"300.0\" layoutY=\"440.0\" mnemonicParsing=\"false\" onAction=\"#LogIn\" prefHeight=\"47.0\" prefWidth=\"252.0\" text=\"Login\" textFill=\"#babe3a\">\r\n               <font>\r\n                  <Font size=\"24.0\" />\r\n               </font>\r\n            </Button>\r\n         </children>\r\n      </Pane>\r\n      <Pane fx:id=\"SignUp_pane\" layoutX=\"305.0\" prefHeight=\"568.0\" prefWidth=\"421.0\" style=\"-fx-background-color: #87CECB;\" visible=\"false\">\r\n         <children>\r\n            <Label layoutX=\"134.0\" layoutY=\"25.0\" prefHeight=\"67.0\" prefWidth=\"123.0\" text=\"Signup\">\r\n               <font>\r\n                  <Font size=\"35.0\" />\r\n               </font>\r\n            </Label>\r\n            <Label layoutX=\"21.0\" layoutY=\"101.0\" prefHeight=\"48.0\" prefWidth=\"113.0\" text=\"Username\">\r\n               <font>\r\n                  <Font size=\"22.0\" />\r\n               </font>\r\n            </Label>\r\n            <Label layoutX=\"21.0\" layoutY=\"168.0\" prefHeight=\"48.0\" prefWidth=\"113.0\" text=\"Password\">\r\n               <font>\r\n                  <Font size=\"22.0\" />\r\n               </font>\r\n            </Label>\r\n            <Label layoutX=\"15.0\" layoutY=\"300.0\" prefHeight=\"48.0\" prefWidth=\"113.0\" text=\"Telephone\">\r\n               <font>\r\n                  <Font size=\"22.0\" />\r\n               </font>\r\n            </Label>\r\n            <Label layoutX=\"15.0\" layoutY=\"362.0\" prefHeight=\"48.0\" prefWidth=\"113.0\" text=\"ID number\">\r\n               <font>\r\n                  <Font size=\"22.0\" />\r\n               </font>\r\n            </Label>\r\n            <TextField fx:id=\"SignUpUserField\" layoutX=\"142.0\" layoutY=\"109.0\" prefHeight=\"40.0\" prefWidth=\"242.0\" />\r\n            <TextField fx:id=\"TeleField\" layoutX=\"135.0\" layoutY=\"306.0\" prefHeight=\"40.0\" prefWidth=\"242.0\" />\r\n            <TextField fx:id=\"ID_numberField\" layoutX=\"135.0\" layoutY=\"368.0\" prefHeight=\"40.0\" prefWidth=\"242.0\" />\r\n            <PasswordField fx:id=\"SignUpPasswordField\" layoutX=\"141.0\" layoutY=\"174.0\" prefHeight=\"40.0\" prefWidth=\"242.0\" />\r\n            <Button fx:id=\"back\" layoutX=\"235.0\" layoutY=\"446.0\" mnemonicParsing=\"false\" onAction=\"#Back_up\" prefHeight=\"36.0\" prefWidth=\"85.0\" text=\"Back\" />\r\n            <Button fx:id=\"SignUp\" layoutX=\"72.0\" layoutY=\"446.0\" mnemonicParsing=\"false\" onAction=\"#Sign_up\" prefHeight=\"36.0\" prefWidth=\"141.0\" text=\"Sign up\" />\r\n            <Label layoutX=\"21.0\" layoutY=\"236.0\" prefHeight=\"48.0\" prefWidth=\"113.0\" text=\"Age\">\r\n               <font>\r\n                  <Font size=\"22.0\" />\r\n               </font>\r\n            </Label>\r\n            <TextField fx:id=\"AgeField\" layoutX=\"141.0\" layoutY=\"240.0\" prefHeight=\"40.0\" prefWidth=\"242.0\" />\r\n         </children>\r\n      </Pane>\r\n   </children>\r\n</Pane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/org/example/scene/Login.fxml b/src/main/resources/org/example/scene/Login.fxml
--- a/src/main/resources/org/example/scene/Login.fxml	(revision cc0a39f6b07677981707a0dcc6b6c89b51a0ba64)
+++ b/src/main/resources/org/example/scene/Login.fxml	(date 1683635314507)
@@ -8,17 +8,22 @@
 <?import javafx.scene.image.Image?>
 <?import javafx.scene.image.ImageView?>
 <?import javafx.scene.layout.Pane?>
+<?import javafx.scene.layout.VBox?>
 <?import javafx.scene.text.Font?>
 
-<Pane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="634.0" prefWidth="1072.0" xmlns="http://javafx.com/javafx/8.0.171" xmlns:fx="http://javafx.com/fxml/1" fx:controller="org.example.scene.LoginController">
+<Pane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" nodeOrientation="LEFT_TO_RIGHT" prefHeight="634.0" prefWidth="1072.0" xmlns="http://javafx.com/javafx/8.0.171" xmlns:fx="http://javafx.com/fxml/1" fx:controller="org.example.scene.LoginController">
    <children>
-      <Pane fx:id="Login_pane" cache="true" layoutY="1.0" prefHeight="651.0" prefWidth="1079.0" style="-fx-background-image: images\systemUse\loginCover.jpgimages\systemUse\loginCover.jpg;">
+      <Pane fx:id="Login_pane" cache="true" prefHeight="651.0" prefWidth="1091.0" style="-fx-background-image: images\systemUse\loginCover.jpgimages\systemUse\loginCover.jpg;">
          <children>
-            <ImageView fitHeight="709.0" fitWidth="1118.0" layoutY="-9.0">
-               <image>
-                  <Image url="@images/systemUse/loginCover.jpg" />
-               </image>
-            </ImageView>
+            <VBox prefHeight="200.0" prefWidth="100.0">
+               <children>
+                  <ImageView fitHeight="700.0" fitWidth="1196.0" opacity="0.69" VBox.vgrow="ALWAYS">
+                     <image>
+                        <Image url="@images/systemUse/loginCover.jpg" />
+                     </image>
+                  </ImageView>
+               </children>
+            </VBox>
             <Button fx:id="SignUp" alignment="CENTER" layoutX="602.0" layoutY="440.0" mnemonicParsing="false" onAction="#signup" prefHeight="47.0" prefWidth="141.0" text="Sign Up" textFill="#babe3a">
                <font>
                   <Font size="24.0" />
@@ -86,7 +91,7 @@
             <PasswordField fx:id="SignUpPasswordField" layoutX="141.0" layoutY="174.0" prefHeight="40.0" prefWidth="242.0" />
             <Button fx:id="back" layoutX="235.0" layoutY="446.0" mnemonicParsing="false" onAction="#Back_up" prefHeight="36.0" prefWidth="85.0" text="Back" />
             <Button fx:id="SignUp" layoutX="72.0" layoutY="446.0" mnemonicParsing="false" onAction="#Sign_up" prefHeight="36.0" prefWidth="141.0" text="Sign up" />
-            <Label layoutX="21.0" layoutY="236.0" prefHeight="48.0" prefWidth="113.0" text="Age">
+            <Label layoutX="5.0" layoutY="236.0" prefHeight="48.0" prefWidth="134.0" text="Age(0~200)">
                <font>
                   <Font size="22.0" />
                </font>
Index: src/main/java/org/example/Start.java
===================================================================
diff --git a/src/main/java/org/example/Start.java b/src/main/java/org/example/Start.java
deleted file mode 100644
--- a/src/main/java/org/example/Start.java	(revision cc0a39f6b07677981707a0dcc6b6c89b51a0ba64)
+++ /dev/null	(revision cc0a39f6b07677981707a0dcc6b6c89b51a0ba64)
@@ -1,7 +0,0 @@
-package org.example;
-
-public class Start {
-    public static void main(String[] args){
-        Main.main(args);
-    }
-}
Index: src/main/java/org/example/models/Order.java
===================================================================
diff --git a/src/main/java/org/example/models/Order.java b/src/main/java/org/example/models/Order.java
deleted file mode 100644
--- a/src/main/java/org/example/models/Order.java	(revision cc0a39f6b07677981707a0dcc6b6c89b51a0ba64)
+++ /dev/null	(revision cc0a39f6b07677981707a0dcc6b6c89b51a0ba64)
@@ -1,116 +0,0 @@
-package org.example.models;
-
-import javafx.beans.property.IntegerProperty;
-import javafx.beans.property.StringProperty;
-import java.io.Serializable;
-
-public class Order implements Serializable {
-    private IntegerProperty id;
-    private IntegerProperty uid;
-    private StringProperty userName;
-    private IntegerProperty mid;
-    private StringProperty movieName;
-    private  IntegerProperty age;
-    private StringProperty comment;
-
-    public Order() {
-    }
-
-    public String getUserName() {
-        return userName.get();
-    }
-
-    public StringProperty userNameProperty() {
-        return userName;
-    }
-
-    public void setUserName(String userName) {
-        this.userName.set(userName);
-    }
-
-    public String getMovieName() {
-        return movieName.get();
-    }
-
-    public StringProperty movieNameProperty() {
-        return movieName;
-    }
-
-    public void setMovieName(String movieName) {
-        this.movieName.set(movieName);
-    }
-
-    public int getId() {
-        return id.get();
-    }
-
-    public IntegerProperty idProperty() {
-        return id;
-    }
-
-    public void setId(int id) {
-        this.id.set(id);
-    }
-
-    public int getUid() {
-        return uid.get();
-    }
-
-    public IntegerProperty uidProperty() {
-        return uid;
-    }
-
-    public void setUid(int uid) {
-        this.uid.set(uid);
-    }
-
-    public int getMid() {
-        return mid.get();
-    }
-
-    public IntegerProperty midProperty() {
-        return mid;
-    }
-
-    public void setMid(int mid) {
-        this.mid.set(mid);
-    }
-    public Integer getAge() {
-        return age.get();
-    }
-
-    public IntegerProperty ageProperty() {
-        return age;
-    }
-
-
-    public void setAge(Integer age) {
-        this.age.set(age);
-    }
-
-    public String getComment() {
-        return comment.get();
-    }
-
-    public StringProperty commentProperty() {
-        return comment;
-    }
-
-    public void setComment(String comment) {
-        this.comment.set(comment);
-    }
-
-
-    @Override
-    public String toString() {
-        return "Order{" +
-                "id=" + id +
-                ", uid=" + uid +
-                ", userName=" + userName +
-                ", mid=" + mid +
-                ", age=" + age +
-                ", movieName=" + movieName +
-                ", comment=" + comment +
-                '}';
-    }
-}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"2ec8fc1c-095a-441f-8e44-f2c253c91391\" name=\"变更\" comment=\"New\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/Scene/AdminViewController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/Scene/AdminViewController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/Scene/CommonUserViewController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/Scene/CommonUserViewController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/models/Order.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/models/Order.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/org/example/scene/AdminView.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/org/example/scene/AdminView.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/org/example/scene/CommonUserView.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/org/example/scene/CommonUserView.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/org/example/scene/Login.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/org/example/scene/Login.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/org/example/scene/images/systemUse/loginCover.jpg\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/org/example/scene/images/systemUse/loginCover.jpg\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"JavaFXApplication\" />\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PUSH_TAGS\">\r\n      <GitPushTagMode>\r\n        <option name=\"argument\" value=\"--tags\" />\r\n        <option name=\"title\" value=\"All\" />\r\n      </GitPushTagMode>\r\n    </option>\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"KEEP\" />\r\n    <option name=\"SWAP_SIDES_IN_COMPARE_BRANCHES\" value=\"true\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"4f49c3c8-d10d-4606-ae2c-a62ece88f36f\" />\r\n        <option name=\"url\" value=\"https://github.com/qweOkk/CSC1004-JAVA.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/org/example/scene/AdminViewController.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"importingSettings\">\r\n      <MavenImportingSettings>\r\n        <option name=\"workspaceImportEnabled\" value=\"true\" />\r\n      </MavenImportingSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"MavenRunner\">\r\n    <option name=\"jreName\" value=\"1.8\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2LmJP2JlV1nzvKWQqWabA0LARQX\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\r\n    \"Downloaded.Files.Path.Enabled\": \"true\",\r\n    \"Repository.Attach.Annotations\": \"false\",\r\n    \"Repository.Attach.JavaDocs\": \"false\",\r\n    \"Repository.Attach.Sources\": \"false\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"last_opened_file_path\": \"C:/Users/64703/IdeaProjects/Java_newsSystem-master\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs.mocha.mocha_node_package_dir\": \"\",\r\n    \"project.structure.last.edited\": \"工件\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.2\",\r\n    \"settings.editor.selected.configurable\": \"preferences.JavaFX\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  },\r\n  \"keyToStringList\": {\r\n    \"ChangesTree.GroupingKeys\": [\r\n      \"directory\"\r\n    ],\r\n    \"DatabaseDriversLRU\": [\r\n      \"mysql\"\r\n    ]\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\64703\\IdeaProjects\\CSC1004-JAVA\\target\\classes\\org\\example\\scene\" />\r\n      <recent name=\"C:\\Users\\64703\\IdeaProjects\\CSC1004-JAVA\\src\\main\\resources\" />\r\n      <recent name=\"C:\\Users\\64703\\IdeaProjects\\CSC1004-JAVA\\.idea\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\64703\\IdeaProjects\\CSC1004-JAVA\\target\\classes\\org\\example\\scene\" />\r\n      <recent name=\"C:\\Users\\64703\\IdeaProjects\\CSC1004-JAVA\\target\\classes\\org\\example\" />\r\n      <recent name=\"C:\\Users\\64703\\IdeaProjects\\CSC1004-JAVA\\src\\main\\java\\org\\example\" />\r\n      <recent name=\"C:\\Users\\64703\\IdeaProjects\\CSC1004-JAVA\\src\\Scene\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"org.example\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"org.example.scene\" />\r\n      <recent name=\"org.example\" />\r\n      <recent name=\"org.example.models\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"应用程序.Main\">\r\n    <configuration name=\"JdbcUtils\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.utils.JdbcUtils\" />\r\n      <module name=\"CSC1004-JAVA\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.utils.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"1.8\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.Main\" />\r\n      <module name=\"CSC1004-JAVA\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Start\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"1.8\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.Start\" />\r\n      <module name=\"CSC1004-JAVA\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"Application\" factoryName=\"Application\">\r\n      <module name=\"CSC1004-JAVA\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"org.example.Main\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.Main\" />\r\n      <module name=\"CSC1004-JAVA\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"未命名\" type=\"mocha-javascript-test-runner\" nameIsGenerated=\"true\">\r\n      <node-interpreter>project</node-interpreter>\r\n      <node-options />\r\n      <mocha-package />\r\n      <working-directory>$PROJECT_DIR$</working-directory>\r\n      <pass-parent-env>true</pass-parent-env>\r\n      <ui>bdd</ui>\r\n      <extra-mocha-options />\r\n      <test-kind>DIRECTORY</test-kind>\r\n      <test-directory />\r\n      <recursive>false</recursive>\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Mocha.未命名\" />\r\n      <item itemvalue=\"应用程序.org.example.Main\" />\r\n      <item itemvalue=\"应用程序.Start\" />\r\n      <item itemvalue=\"应用程序.Main\" />\r\n      <item itemvalue=\"应用程序.JdbcUtils\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"应用程序.JdbcUtils\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"应用程序级\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"默认任务\">\r\n      <changelist id=\"2ec8fc1c-095a-441f-8e44-f2c253c91391\" name=\"变更\" comment=\"\" />\r\n      <created>1676470299851</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1676470299851</updated>\r\n      <workItem from=\"1676470301041\" duration=\"2179000\" />\r\n      <workItem from=\"1676597943138\" duration=\"4939000\" />\r\n      <workItem from=\"1676641729954\" duration=\"284000\" />\r\n      <workItem from=\"1676714182930\" duration=\"1894000\" />\r\n      <workItem from=\"1676726422523\" duration=\"1185000\" />\r\n      <workItem from=\"1676727697002\" duration=\"640000\" />\r\n      <workItem from=\"1676797987820\" duration=\"155000\" />\r\n      <workItem from=\"1676798918070\" duration=\"7249000\" />\r\n      <workItem from=\"1676808410217\" duration=\"1646000\" />\r\n      <workItem from=\"1676811659904\" duration=\"42000\" />\r\n      <workItem from=\"1676811742052\" duration=\"8373000\" />\r\n      <workItem from=\"1676899428407\" duration=\"2916000\" />\r\n      <workItem from=\"1676904326322\" duration=\"3398000\" />\r\n      <workItem from=\"1676907744258\" duration=\"147000\" />\r\n      <workItem from=\"1677028729992\" duration=\"7797000\" />\r\n      <workItem from=\"1677765768967\" duration=\"6587000\" />\r\n      <workItem from=\"1678363221569\" duration=\"715000\" />\r\n      <workItem from=\"1678810618249\" duration=\"906000\" />\r\n      <workItem from=\"1679551815049\" duration=\"4702000\" />\r\n      <workItem from=\"1679831452811\" duration=\"4434000\" />\r\n      <workItem from=\"1679982244961\" duration=\"810000\" />\r\n      <workItem from=\"1679989207628\" duration=\"15724000\" />\r\n      <workItem from=\"1680014561419\" duration=\"2673000\" />\r\n      <workItem from=\"1680054529484\" duration=\"3706000\" />\r\n      <workItem from=\"1680087298272\" duration=\"333000\" />\r\n      <workItem from=\"1680155692226\" duration=\"2307000\" />\r\n      <workItem from=\"1680161443999\" duration=\"602000\" />\r\n      <workItem from=\"1680268546266\" duration=\"2507000\" />\r\n      <workItem from=\"1680444928972\" duration=\"3132000\" />\r\n      <workItem from=\"1680581823949\" duration=\"2344000\" />\r\n      <workItem from=\"1680584184235\" duration=\"7110000\" />\r\n      <workItem from=\"1681650478435\" duration=\"4210000\" />\r\n      <workItem from=\"1681655524711\" duration=\"4460000\" />\r\n      <workItem from=\"1681693867085\" duration=\"8952000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"git status\">\r\n      <created>1676598279735</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1676598279735</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"New version\">\r\n      <created>1676599647187</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1676599647187</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"New version\">\r\n      <created>1676641911824</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1676641911824</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"New version\">\r\n      <created>1676819153699</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1676819153699</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"New version\">\r\n      <created>1676907792369</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1676907792369</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"New version\">\r\n      <created>1677071427924</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1677071427924</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"New version\">\r\n      <created>1680014053317</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680014053317</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"New\">\r\n      <created>1681573714525</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681573714525</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"New\">\r\n      <created>1681573752163</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681573752163</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"10\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"CUSTOM_BOOLEAN_PROPERTIES\">\r\n                <map>\r\n                  <entry key=\"Show.Git.Branches\" value=\"true\" />\r\n                </map>\r\n              </option>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"master(1)\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"git status\" />\r\n    <MESSAGE value=\"New version\" />\r\n    <MESSAGE value=\"New\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"New\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.RuntimeException\" package=\"java.lang\" />\r\n          <option name=\"timeStamp\" value=\"2\" />\r\n        </breakpoint>\r\n        <breakpoint enabled=\"true\" type=\"java-exception\">\r\n          <properties class=\"java.lang.reflect.InvocationTargetException\" package=\"java.lang.reflect\" />\r\n          <option name=\"timeStamp\" value=\"3\" />\r\n        </breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision cc0a39f6b07677981707a0dcc6b6c89b51a0ba64)
+++ b/.idea/workspace.xml	(date 1683635711891)
@@ -5,14 +5,34 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="2ec8fc1c-095a-441f-8e44-f2c253c91391" name="变更" comment="New">
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Report/Report4.docx" beforeDir="false" afterPath="$PROJECT_DIR$/Report/Report4.docx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Main.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Scene/AdminViewController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Scene/AdminViewController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Scene/CommonUserViewController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Scene/CommonUserViewController.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/models/Order.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/models/Order.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Scene/LoginController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Scene/LoginController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Start.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/models/Admin.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/models/Admin.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/models/CommonUser.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/models/CommonUser.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/models/Movie.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/models/Movie.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/models/MovieClass.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/models/MovieClass.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/models/Order.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/utils/DialogUtils.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/utils/DialogUtils.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/utils/ImageUtils.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/utils/ImageUtils.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/utils/InputChecker.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/utils/InputChecker.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/utils/JdbcUtils.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/utils/JdbcUtils.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/utils/UIAdjistUtils.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/utils/UIAdjistUtils.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/resources/org/example/scene/AdminView.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/org/example/scene/AdminView.fxml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/resources/org/example/scene/CommonUserView.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/org/example/scene/CommonUserView.fxml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/resources/org/example/scene/Login.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/org/example/scene/Login.fxml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/org/example/scene/images/systemUse/loginCover.jpg" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/org/example/scene/images/systemUse/loginCover.jpg" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/org/example/scene/images/Interstellar.jpg" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/org/example/scene/images/systemUse/21.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/org/example/scene/images/systemUse/Search.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/org/example/scene/images/systemUse/confirm.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/org/example/scene/images/systemUse/filter.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/org/example/scene/images/systemUse/good.png" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/resources/org/example/scene/images/systemUse/tips.png" beforeDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -98,6 +118,7 @@
     "node.js.selected.package.eslint": "(autodetect)",
     "node.js.selected.package.tslint": "(autodetect)",
     "nodejs.mocha.mocha_node_package_dir": "",
+    "nodejs_package_manager_path": "npm",
     "project.structure.last.edited": "工件",
     "project.structure.proportion": "0.15",
     "project.structure.side.proportion": "0.2",
@@ -345,7 +366,7 @@
                   <entry key="branch">
                     <value>
                       <list>
-                        <option value="master(1)" />
+                        <option value="Movie_management/verison" />
                       </list>
                     </value>
                   </entry>
Index: src/main/java/org/example/models/Movie.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.models;\r\n\r\nimport javafx.beans.property.IntegerProperty;\r\nimport javafx.beans.property.SimpleIntegerProperty;\r\nimport javafx.beans.property.SimpleStringProperty;\r\nimport javafx.beans.property.StringProperty;\r\n\r\nimport java.io.Serializable;\r\n\r\npublic class Movie implements Serializable {\r\n    private IntegerProperty id;\r\n    private StringProperty coverPath;\r\n    private StringProperty name;\r\n    private StringProperty director;\r\n    private StringProperty actor;\r\n    private StringProperty intro;\r\n    private StringProperty className;\r\n//    private IntegerProperty classNumber;\r\n\r\n    public Movie() {\r\n    }\r\n\r\n    public Movie(Integer id, String coverPath, String name, String director, String actor,String intro, String className) {\r\n        this.id = new SimpleIntegerProperty(id);\r\n        this.coverPath = new SimpleStringProperty(coverPath);\r\n        this.name = new SimpleStringProperty(name);\r\n        this.director = new SimpleStringProperty(director);\r\n        this.actor = new SimpleStringProperty(actor);\r\n        this.intro = new SimpleStringProperty(intro);\r\n        this.className = new SimpleStringProperty(className);\r\n    }\r\n\r\n    public int getId() {\r\n        return id.get();\r\n    }\r\n\r\n    public IntegerProperty idProperty() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(int id) {\r\n        this.id.set(id);\r\n    }\r\n\r\n    public String getCoverPath() {\r\n        return coverPath.get();\r\n    }\r\n\r\n    public StringProperty coverPathProperty() {\r\n        return coverPath;\r\n    }\r\n\r\n    public void setCoverPath(String coverPath) {\r\n        this.coverPath.set(coverPath);\r\n    }\r\n\r\n    public String getName() {\r\n        return name.get();\r\n    }\r\n\r\n    public StringProperty nameProperty() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name.set(name);\r\n    }\r\n\r\n    public String getDirector() {\r\n        return director.get();\r\n    }\r\n\r\n    public StringProperty directorProperty() {\r\n        return director;\r\n    }\r\n\r\n    public void setODirector(String director) {\r\n        this.director.set(director);\r\n    }\r\n\r\n    public String getActor() {\r\n        return actor.get();\r\n    }\r\n\r\n    public StringProperty actorProperty() {\r\n        return actor;\r\n    }\r\n\r\n    public void setActor(String actor) {\r\n        this.actor.set(actor);\r\n    }\r\n    public String getIntro() {\r\n        return intro.get();\r\n    }\r\n\r\n    public StringProperty introProperty() {\r\n        return intro;\r\n    }\r\n\r\n    public void setIntro(String intro) {\r\n        this.intro.set(intro);\r\n    }\r\n\r\n    public String getClassName() {\r\n        return className.get();\r\n    }\r\n\r\n    public StringProperty classNameProperty() {\r\n        return className;\r\n    }\r\n\r\n    public void setClassName(String className) {\r\n        this.className.set(className);\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Magazine{\" +\r\n                \"id=\" + id +\r\n                \", coverPath=\" + coverPath +\r\n                \", name=\" + name +\r\n                \", director=\" + director +\r\n                \", actor=\" + actor +\r\n                \", intro=\" + intro +\r\n                \", className=\" + className +\r\n                '}';\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/models/Movie.java b/src/main/java/org/example/models/Movie.java
--- a/src/main/java/org/example/models/Movie.java	(revision cc0a39f6b07677981707a0dcc6b6c89b51a0ba64)
+++ b/src/main/java/org/example/models/Movie.java	(date 1683635314454)
@@ -115,7 +115,7 @@
 
     @Override
     public String toString() {
-        return "Magazine{" +
+        return "Movie{" +
                 "id=" + id +
                 ", coverPath=" + coverPath +
                 ", name=" + name +
Index: src/main/java/org/example/models/MovieClass.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.models;\r\n\r\nimport javafx.beans.property.IntegerProperty;\r\nimport javafx.beans.property.StringProperty;\r\n\r\npublic class MovieClass {\r\n    private IntegerProperty id;\r\n    private StringProperty name;\r\n\r\n    public MovieClass() {\r\n    }\r\n\r\n    public int getId() {\r\n        return id.get();\r\n    }\r\n\r\n    public IntegerProperty idProperty() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(int id) {\r\n        this.id.set(id);\r\n    }\r\n\r\n    public String getName() {\r\n        return name.get();\r\n    }\r\n\r\n    public StringProperty nameProperty() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name.set(name);\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"MovieClass{\" +\r\n                \"id=\" + id +\r\n                \", name=\" + name +\r\n                '}';\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/models/MovieClass.java b/src/main/java/org/example/models/MovieClass.java
--- a/src/main/java/org/example/models/MovieClass.java	(revision cc0a39f6b07677981707a0dcc6b6c89b51a0ba64)
+++ b/src/main/java/org/example/models/MovieClass.java	(date 1683635314535)
@@ -5,7 +5,7 @@
 
 public class MovieClass {
     private IntegerProperty id;
-    private StringProperty name;
+    private StringProperty className;
 
     public MovieClass() {
     }
@@ -22,23 +22,23 @@
         this.id.set(id);
     }
 
-    public String getName() {
-        return name.get();
+    public String getclassName() {
+        return className.get();
     }
 
-    public StringProperty nameProperty() {
-        return name;
+    public StringProperty classNameProperty() {
+        return className;
     }
 
-    public void setName(String name) {
-        this.name.set(name);
+    public void setclassName(String className) {
+        this.className.set(className);
     }
 
     @Override
     public String toString() {
         return "MovieClass{" +
                 "id=" + id +
-                ", name=" + name +
+                ", className=" + className +
                 '}';
     }
 }
Index: src/main/java/org/example/utils/InputChecker.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.utils;\r\nimport javafx.beans.property.StringProperty;\r\nimport org.example.models.*;\r\n\r\nimport java.io.File;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Map;\r\npublic class InputChecker {\r\n    public static String commonUserInfoCheck(String uname, String pass, String age, String tel, String sid) {\r\n        String errorMessage = null;\r\n\r\n        // 检查电话\r\n        if (tel.length() > 60) {\r\n            errorMessage = \"电话号码过长\";\r\n        }\r\n\r\n        //检查身份证号\r\n        if (sid.length() > 60) {\r\n            errorMessage = \"身份证号过长\";\r\n        }\r\n        if (age.length()>3){\r\n            errorMessage =\"Age is too big!\";\r\n        }\r\n        //密码是不是符合要求\r\n        if (pass.length() == 0) {\r\n            errorMessage = \"密码为空\";\r\n        } else if (pass.length() > 60) {\r\n            errorMessage = \"密码过长\";\r\n        }\r\n\r\n        //用户名是不是符合要求\r\n        if (uname.length() == 0) {\r\n            errorMessage = \"用户名为空\";\r\n        } else if (uname.length() > 60) {\r\n            errorMessage = \"用户名过长\";\r\n        }\r\n\r\n        return errorMessage;\r\n    }\r\n\r\n    public static String commonUserSignUpCheck(String uname, String pass, String age, String tel, String sid) {\r\n        String errorMessage = commonUserInfoCheck(uname, pass, age, tel, sid);\r\n\r\n        //检查该用户是否已被注册\r\n        JdbcUtils jdbcUtils = new JdbcUtils();\r\n        jdbcUtils.getConnection();\r\n        String sql = \"select * from `commonUser` where username = ?\";\r\n        List<Object> params = new ArrayList<>();\r\n        params.add(uname);\r\n\r\n        try {\r\n            CommonUser sameUser = jdbcUtils.findSimpleProResult(sql, params, CommonUser.class);\r\n            if (sameUser != null) {\r\n                errorMessage = \"该用户名已被注册\";\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        return errorMessage;\r\n    }\r\n\r\n    public static String userUpdateCheck(String olduname,String uname, String pass, String age, String tel, String sid) {\r\n        String errorMessage = commonUserInfoCheck(uname, pass, age, tel, sid);\r\n\r\n        //检查该用户是否已被注册\r\n        if (!olduname.equals(uname)) {\r\n            JdbcUtils jdbcUtils = new JdbcUtils();\r\n            jdbcUtils.getConnection();\r\n            String sql = \"select * from `commonUser` where username = ?\";\r\n            List<Object> params = new ArrayList<>();\r\n            params.add(uname);\r\n\r\n            try {\r\n                CommonUser sameUser = jdbcUtils.findSimpleProResult(sql, params, CommonUser.class);\r\n                if (sameUser != null) {\r\n                    errorMessage = \"该用户名已被注册\";\r\n                }\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n\r\n        return errorMessage;\r\n    }\r\n    public static String commonUserSignUpCheck(String id, String uname, String pass, String age, String tel, String sid) {\r\n        String errorMessage = commonUserSignUpCheck(uname, pass, age, tel, sid);\r\n\r\n        //在原来的基础上在检查id是否已经被注册\r\n        JdbcUtils jdbcUtils= new JdbcUtils();\r\n        jdbcUtils.getConnection();\r\n        String sql = \"select * from `commonUser` where id = ?\";\r\n        List<Object> params = new ArrayList<>();\r\n\r\n        if (id == null || id.length() == 0) {\r\n            return errorMessage = \"id为空\";\r\n        } else if(id.length() > 11) {\r\n            return  errorMessage = \"您输入的id过长\";\r\n        } else {\r\n            try {\r\n                Integer.parseInt(id);\r\n            } catch (Exception e) {\r\n                return errorMessage = \"id应只含有数字\";\r\n            }\r\n        }\r\n\r\n        params.add(Integer.parseInt(id));\r\n\r\n        try {\r\n            CommonUser sameUser = jdbcUtils.findSimpleProResult(sql, params, CommonUser.class);\r\n            if (sameUser != null) {\r\n                errorMessage = \"该Id已被注册\";\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return errorMessage;\r\n    }\r\n\r\n    public static String commonUserUpdateCheck(CommonUser oldInfo, CommonUser newInfo) {\r\n        String errorMessage = commonUserInfoCheck(newInfo.getUsername(), newInfo.getPassword(),newInfo.getAge(),newInfo.getTel(), newInfo.getSid());\r\n\r\n        //如果没有改动id和用户名这两个不能重复的信息\r\n        if (oldInfo.getId() != newInfo.getId()) {\r\n            errorMessage = \"您不能修改用户的ID\";\r\n        }\r\n\r\n        if (!oldInfo.getUsername().equals(newInfo.getUsername())) {\r\n            JdbcUtils jdbcUtils = new JdbcUtils();\r\n            jdbcUtils.getConnection();\r\n            String sql = \"select * from `commonUser` where username = ?\";\r\n            List<Object> params = new ArrayList<>();\r\n            params.add(newInfo.getUsername());\r\n            try {\r\n                CommonUser same = jdbcUtils.findSimpleProResult(sql, params, CommonUser.class);\r\n                if (same != null) {\r\n                    errorMessage = \"该用户名已被占用\";\r\n                }\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n\r\n        return errorMessage;\r\n    }\r\n\r\n\r\n    public static String adminSignUpCheck(String id, String uname, String pass) {\r\n        String errorMessage = null;\r\n\r\n        JdbcUtils jdbcUtils = new JdbcUtils();\r\n        jdbcUtils.getConnection();\r\n        String sql = \"select * from `admin` where id = ?\";\r\n        List<Object> params = new ArrayList<>();\r\n\r\n        if (id == null || id.length() == 0) {\r\n            return errorMessage = \"id为空\";\r\n        } else if(id.length() > 11) {\r\n            return  errorMessage = \"您输入的id过长\";\r\n        } else {\r\n            try {\r\n                Integer.parseInt(id);\r\n            } catch (Exception e) {\r\n                return errorMessage = \"id应只含有数字\";\r\n            }\r\n        }\r\n\r\n        if (uname == null || uname.length() == 0) {\r\n            return errorMessage = \"用户名为空\";\r\n        }\r\n\r\n\r\n        params.add(Integer.parseInt(id));\r\n\r\n        try {\r\n            Admin sameUser = jdbcUtils.findSimpleProResult(sql, params, Admin.class);\r\n            if (sameUser != null) {\r\n                errorMessage = \"该Id已被占用\";\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        sql = \"select * from `admin` where username = ?\";\r\n        params.clear();\r\n        params.add(uname);\r\n\r\n        try {\r\n            Admin sameUser = jdbcUtils.findSimpleProResult(sql, params, Admin.class);\r\n            if (sameUser != null) {\r\n                errorMessage = \"该用户名已被占用\";\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        if (pass.length() > 60) {\r\n            errorMessage = \"密码超长\";\r\n        } else if (pass.length() == 0) {\r\n            errorMessage = \"请输入密码\";\r\n        }\r\n\r\n        return errorMessage;\r\n    }\r\n\r\n    public static String adminInfoUpdateCheck(Admin oldInfo, Admin newInfo) {\r\n        String errorMessage = null;\r\n\r\n        //如果没有改动id和用户名这两个不能重复的信息\r\n        if (oldInfo.getId() != newInfo.getId()) {\r\n            errorMessage = \"您不能修改用户的ID\";\r\n        }\r\n\r\n        if (newInfo.getUsername() == null || newInfo.getUsername().length() == 0) {\r\n            return errorMessage = \"用户名为空\";\r\n        }\r\n\r\n        if (newInfo.getPassword() == null || newInfo.getPassword().length() == 0) {\r\n            return errorMessage = \"密码为空\";\r\n        }\r\n\r\n\r\n        if (!oldInfo.getUsername().equals(newInfo.getUsername())) {\r\n            JdbcUtils jdbcUtils = new JdbcUtils();\r\n            jdbcUtils.getConnection();\r\n            String sql = \"select * from `admin` where username = ?\";\r\n            List<Object> params = new ArrayList<>();\r\n            params.add(newInfo.getUsername());\r\n            try {\r\n                Admin same = jdbcUtils.findSimpleProResult(sql, params, Admin.class);\r\n                if (same != null) {\r\n                    errorMessage = \"该用户名已被占用\";\r\n                }\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n        return errorMessage;\r\n    }\r\n    public static String movieSignUpCheck(String id, File image, String mname, String director, String actor, String mclas, String intro) {\r\n        String errorMessage = movieRegularCheck(id, mname, director, actor, mclas, intro);\r\n\r\n        //检查ID, 图片, 杂志名重复.\r\n        JdbcUtils jdbcUtils = new JdbcUtils();\r\n        jdbcUtils.getConnection();\r\n        String sql = \"select id, coverPath, name from `magazine`\";\r\n        List<Object> params = new ArrayList<>();\r\n        try {\r\n            List<Map<String, Object>> infos = jdbcUtils.findModeResult(sql, params);\r\n            for (Map<String, Object> info : infos) {\r\n//                System.out.println(image.getName() + \"  \" + info.get(\"coverPath\"));\r\n                /*\r\n                 *==================================================\r\n                 *                 !!important!!\r\n                 *     字符串比较一定要用equals这里就是一个很好的例子\r\n                 *==================================================\r\n                 */\r\n                if (image == null || image.getName().equals(info.get(\"coverPath\"))) {\r\n                    errorMessage = \"该图片已被使用，请换一张\";\r\n                }\r\n                if (mname.equals(info.get(\"name\"))) {\r\n                    errorMessage = \"该杂志名已被使用\";\r\n                }\r\n                if (id == null || id.length() == 0) {\r\n                    return errorMessage = \"id为空\";\r\n                } else {\r\n                    try {\r\n                        Integer.parseInt(id);\r\n                    } catch (Exception e) {\r\n                        return errorMessage = \"id应只含有数字\";\r\n                    }\r\n                }\r\n                if (Integer.parseInt(id) == (Integer) info.get(\"id\")) {\r\n                    errorMessage = \"该id已被注册\";\r\n                }\r\n            }\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return errorMessage;\r\n    }\r\n\r\n    public static String movieUpdateCheck(Movie oldInfo, Movie newInfo) {\r\n        String errorMessage = movieRegularCheck(Integer.toString(newInfo.getId()), newInfo.getName(), newInfo.getDirector(), newInfo.getActor(), newInfo.getClassName(), newInfo.getIntro());\r\n        //id不允许被修改\r\n        if (oldInfo.getId() != newInfo.getId()) {\r\n            errorMessage = \"您不能修改杂志的ID\";\r\n        }\r\n\r\n        JdbcUtils jdbcUtils = new JdbcUtils();\r\n        jdbcUtils.getConnection();\r\n        List<Object> params = new ArrayList<>();\r\n\r\n        // 检查改后的用户名\r\n        if (!oldInfo.getName().equals(newInfo.getName())) {\r\n            String sql = \"select * from `magazine` where name = ?\";\r\n            params.add(newInfo.getName());\r\n            try {\r\n                Map<String, Object> same = jdbcUtils.findSimpleResult(sql, params);\r\n                /*\r\n                 *==================================================\r\n                 *                 !!important!!\r\n                 *     字典要判断空不空，而不是null\r\n                 *==================================================\r\n                 */\r\n                if (!same.isEmpty()) {\r\n                    errorMessage = \"杂志名已被占用\";\r\n                }\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n\r\n        //检查改后的图片是否重复\r\n        if (!oldInfo.getCoverPath().equals(newInfo.getCoverPath())) {\r\n            String sql = \"select coverPath from `magazine`\";\r\n            params.clear();\r\n            try {\r\n                List<Map<String, Object>> infos = jdbcUtils.findModeResult(sql, params);\r\n                for (Map<String, Object> info : infos) {\r\n                    if (newInfo.getCoverPath().equals(info.get(\"coverPath\"))) {\r\n                        errorMessage = \"该图片已被使用，请换一张\";\r\n                    }\r\n                }\r\n            } catch (SQLException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n        return errorMessage;\r\n    }\r\n\r\n    public static String movieRegularCheck(String id, String mname, String director, String actor, String mclas, String intro) {\r\n        String errorMessage = null;\r\n        System.out.println(\"进入杂志检查\");\r\n        // 检查常规项\r\n        if (director.length() == 0) {\r\n            errorMessage = \"出版社为空\";\r\n        }\r\n        if (actor.length() == 0) {\r\n            errorMessage = \"出版周期为空\";\r\n        }\r\n\r\n        if (mclas.length() == 0) {\r\n            errorMessage = \"没有选择分类\";\r\n        }\r\n        if (intro.length() > 140) {\r\n            errorMessage = \"介绍过长\";\r\n        }\r\n        if (id.length() > 11) {\r\n            errorMessage = \"id过长\";\r\n        }\r\n        if (mname.length() > 60) {\r\n            errorMessage = \"用户名过长\";\r\n        }\r\n        return errorMessage;\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/utils/InputChecker.java b/src/main/java/org/example/utils/InputChecker.java
--- a/src/main/java/org/example/utils/InputChecker.java	(revision cc0a39f6b07677981707a0dcc6b6c89b51a0ba64)
+++ b/src/main/java/org/example/utils/InputChecker.java	(date 1683635323674)
@@ -7,102 +7,86 @@
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
+
+/**
+ * Check Input
+ */
 public class InputChecker {
-    public static String commonUserInfoCheck(String uname, String pass, String age, String tel, String sid) {
+    /**
+     * Check input of commonUser's log in.
+     */
+    public static String commonUserInfoCheck(String uname, String pass, Integer age, String tel, String sid) {
         String errorMessage = null;
 
-        // 检查电话
         if (tel.length() > 60) {
-            errorMessage = "电话号码过长";
+            errorMessage = "Your telephone number is too long!";
         }
 
-        //检查身份证号
         if (sid.length() > 60) {
-            errorMessage = "身份证号过长";
+            errorMessage = "Your ID number is too long!";
         }
-        if (age.length()>3){
-            errorMessage ="Age is too big!";
+        if (age<0){
+            errorMessage ="Age is impossible!";
         }
-        //密码是不是符合要求
         if (pass.length() == 0) {
-            errorMessage = "密码为空";
+            errorMessage = "Password cannot be empty!";
         } else if (pass.length() > 60) {
-            errorMessage = "密码过长";
+            errorMessage = "Password is too long!";
         }
 
-        //用户名是不是符合要求
         if (uname.length() == 0) {
-            errorMessage = "用户名为空";
+            errorMessage = "Username cannot be empty!";
         } else if (uname.length() > 60) {
-            errorMessage = "用户名过长";
-        }
-
-        return errorMessage;
-    }
-
-    public static String commonUserSignUpCheck(String uname, String pass, String age, String tel, String sid) {
-        String errorMessage = commonUserInfoCheck(uname, pass, age, tel, sid);
-
-        //检查该用户是否已被注册
-        JdbcUtils jdbcUtils = new JdbcUtils();
-        jdbcUtils.getConnection();
-        String sql = "select * from `commonUser` where username = ?";
-        List<Object> params = new ArrayList<>();
-        params.add(uname);
-
-        try {
-            CommonUser sameUser = jdbcUtils.findSimpleProResult(sql, params, CommonUser.class);
-            if (sameUser != null) {
-                errorMessage = "该用户名已被注册";
-            }
-        } catch (Exception e) {
-            e.printStackTrace();
+            errorMessage = "Username is too long!";
         }
 
         return errorMessage;
     }
-
-    public static String userUpdateCheck(String olduname,String uname, String pass, String age, String tel, String sid) {
+    /**
+     * Check input of commonUser's sign ip.
+     */
+    public static String commonUserSignUpCheck(String uname, String pass, Integer age, String tel, String sid) {
         String errorMessage = commonUserInfoCheck(uname, pass, age, tel, sid);
 
-        //检查该用户是否已被注册
-        if (!olduname.equals(uname)) {
-            JdbcUtils jdbcUtils = new JdbcUtils();
-            jdbcUtils.getConnection();
-            String sql = "select * from `commonUser` where username = ?";
-            List<Object> params = new ArrayList<>();
-            params.add(uname);
+        //Examine whether the username has been signed up.
+        JdbcUtils jdbcUtils = new JdbcUtils();
+        jdbcUtils.getConnection();
+        String sql = "select * from `commonUser` where username = ?";
+        List<Object> params = new ArrayList<>();
+        params.add(uname);
 
-            try {
-                CommonUser sameUser = jdbcUtils.findSimpleProResult(sql, params, CommonUser.class);
-                if (sameUser != null) {
-                    errorMessage = "该用户名已被注册";
-                }
-            } catch (Exception e) {
-                e.printStackTrace();
-            }
+        try {
+            CommonUser sameUser = jdbcUtils.findSimpleProResult(sql, params, CommonUser.class);
+            if (sameUser != null) {
+                errorMessage = "The username has been signed up!";
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
         }
 
         return errorMessage;
     }
-    public static String commonUserSignUpCheck(String id, String uname, String pass, String age, String tel, String sid) {
+    /**
+     * Check input of commonUser's sign up in admin page.
+     */
+    public static String commonUserSignUpCheck(String id, String uname, String pass, Integer age, String tel, String sid) {
         String errorMessage = commonUserSignUpCheck(uname, pass, age, tel, sid);
 
-        //在原来的基础上在检查id是否已经被注册
+        //Examine whether the user has been signed up upon the original info.
         JdbcUtils jdbcUtils= new JdbcUtils();
         jdbcUtils.getConnection();
         String sql = "select * from `commonUser` where id = ?";
         List<Object> params = new ArrayList<>();
 
         if (id == null || id.length() == 0) {
-            return errorMessage = "id为空";
+            return errorMessage = "ID number is empty.";
         } else if(id.length() > 11) {
-            return  errorMessage = "您输入的id过长";
+            return  errorMessage = "Your ID number is too long!";
         } else {
             try {
                 Integer.parseInt(id);
             } catch (Exception e) {
-                return errorMessage = "id应只含有数字";
+                return errorMessage = "id should only be numbers.";
             }
         }
 
@@ -111,20 +95,22 @@
         try {
             CommonUser sameUser = jdbcUtils.findSimpleProResult(sql, params, CommonUser.class);
             if (sameUser != null) {
-                errorMessage = "该Id已被注册";
+                errorMessage = "The ID number has been signed up.";
             }
         } catch (Exception e) {
             e.printStackTrace();
         }
         return errorMessage;
     }
-
+    /**
+     * Check update of commonUser's info in admin page.
+     */
     public static String commonUserUpdateCheck(CommonUser oldInfo, CommonUser newInfo) {
-        String errorMessage = commonUserInfoCheck(newInfo.getUsername(), newInfo.getPassword(),newInfo.getAge(),newInfo.getTel(), newInfo.getSid());
+        String errorMessage = commonUserInfoCheck(newInfo.getUsername(), newInfo.getPassword(), Integer.valueOf(newInfo.getAge()),newInfo.getTel(), newInfo.getSid());
 
-        //如果没有改动id和用户名这两个不能重复的信息
+        //If the id has not been changed.
         if (oldInfo.getId() != newInfo.getId()) {
-            errorMessage = "您不能修改用户的ID";
+            errorMessage = "You cannot change the user's id.";
         }
 
         if (!oldInfo.getUsername().equals(newInfo.getUsername())) {
@@ -136,7 +122,7 @@
             try {
                 CommonUser same = jdbcUtils.findSimpleProResult(sql, params, CommonUser.class);
                 if (same != null) {
-                    errorMessage = "该用户名已被占用";
+                    errorMessage = "The username has been used.";
                 }
             } catch (Exception e) {
                 e.printStackTrace();
@@ -146,7 +132,9 @@
         return errorMessage;
     }
 
-
+    /**
+     * Check new of Admin's info in admin page.
+     */
     public static String adminSignUpCheck(String id, String uname, String pass) {
         String errorMessage = null;
 
@@ -156,19 +144,19 @@
         List<Object> params = new ArrayList<>();
 
         if (id == null || id.length() == 0) {
-            return errorMessage = "id为空";
+            return errorMessage = "ID is empty!";
         } else if(id.length() > 11) {
-            return  errorMessage = "您输入的id过长";
+            return  errorMessage = "Your ID is too long!";
         } else {
             try {
                 Integer.parseInt(id);
             } catch (Exception e) {
-                return errorMessage = "id应只含有数字";
+                return errorMessage = "ID should only be numbers!";
             }
         }
 
         if (uname == null || uname.length() == 0) {
-            return errorMessage = "用户名为空";
+            return errorMessage = "Username should not be empty!";
         }
 
 
@@ -177,7 +165,7 @@
         try {
             Admin sameUser = jdbcUtils.findSimpleProResult(sql, params, Admin.class);
             if (sameUser != null) {
-                errorMessage = "该Id已被占用";
+                errorMessage = "Your ID has been used.";
             }
         } catch (Exception e) {
             e.printStackTrace();
@@ -190,35 +178,37 @@
         try {
             Admin sameUser = jdbcUtils.findSimpleProResult(sql, params, Admin.class);
             if (sameUser != null) {
-                errorMessage = "该用户名已被占用";
+                errorMessage = "Your username has been used!";
             }
         } catch (Exception e) {
             e.printStackTrace();
         }
 
         if (pass.length() > 60) {
-            errorMessage = "密码超长";
+            errorMessage = "Password is too long!";
         } else if (pass.length() == 0) {
-            errorMessage = "请输入密码";
+            errorMessage = "Please enter your password!";
         }
 
         return errorMessage;
     }
-
+    /**
+     * Check update of Admin's info in admin page.
+     */
     public static String adminInfoUpdateCheck(Admin oldInfo, Admin newInfo) {
         String errorMessage = null;
 
-        //如果没有改动id和用户名这两个不能重复的信息
+        //If ID and username are not been changed.
         if (oldInfo.getId() != newInfo.getId()) {
-            errorMessage = "您不能修改用户的ID";
+            errorMessage = "You cannot change the ID!";
         }
 
         if (newInfo.getUsername() == null || newInfo.getUsername().length() == 0) {
-            return errorMessage = "用户名为空";
+            return errorMessage = "Username cannot be empty!";
         }
 
         if (newInfo.getPassword() == null || newInfo.getPassword().length() == 0) {
-            return errorMessage = "密码为空";
+            return errorMessage = "Your password should not be empty!";
         }
 
 
@@ -231,7 +221,7 @@
             try {
                 Admin same = jdbcUtils.findSimpleProResult(sql, params, Admin.class);
                 if (same != null) {
-                    errorMessage = "该用户名已被占用";
+                    errorMessage = "The username has been used!";
                 }
             } catch (Exception e) {
                 e.printStackTrace();
@@ -239,41 +229,37 @@
         }
         return errorMessage;
     }
+    /**
+     * Check new movie.
+     */
     public static String movieSignUpCheck(String id, File image, String mname, String director, String actor, String mclas, String intro) {
         String errorMessage = movieRegularCheck(id, mname, director, actor, mclas, intro);
 
-        //检查ID, 图片, 杂志名重复.
+        //Examine the ID, name.
         JdbcUtils jdbcUtils = new JdbcUtils();
         jdbcUtils.getConnection();
-        String sql = "select id, coverPath, name from `magazine`";
+        String sql = "select id, coverPath, name from `movie`";
         List<Object> params = new ArrayList<>();
         try {
             List<Map<String, Object>> infos = jdbcUtils.findModeResult(sql, params);
             for (Map<String, Object> info : infos) {
-//                System.out.println(image.getName() + "  " + info.get("coverPath"));
-                /*
-                 *==================================================
-                 *                 !!important!!
-                 *     字符串比较一定要用equals这里就是一个很好的例子
-                 *==================================================
-                 */
                 if (image == null || image.getName().equals(info.get("coverPath"))) {
-                    errorMessage = "该图片已被使用，请换一张";
+                    errorMessage = "The image has been used. Please change one.";
                 }
                 if (mname.equals(info.get("name"))) {
-                    errorMessage = "该杂志名已被使用";
+                    errorMessage = "The movie's name has existed!";
                 }
                 if (id == null || id.length() == 0) {
-                    return errorMessage = "id为空";
+                    return errorMessage = "ID should not empty!";
                 } else {
                     try {
                         Integer.parseInt(id);
                     } catch (Exception e) {
-                        return errorMessage = "id应只含有数字";
+                        return errorMessage = "ID should be numbers.";
                     }
                 }
                 if (Integer.parseInt(id) == (Integer) info.get("id")) {
-                    errorMessage = "该id已被注册";
+                    errorMessage = "The ID has been changed.";
                 }
             }
         } catch (SQLException e) {
@@ -281,47 +267,43 @@
         }
         return errorMessage;
     }
-
+    /**
+     * Check update of movies.
+     */
     public static String movieUpdateCheck(Movie oldInfo, Movie newInfo) {
         String errorMessage = movieRegularCheck(Integer.toString(newInfo.getId()), newInfo.getName(), newInfo.getDirector(), newInfo.getActor(), newInfo.getClassName(), newInfo.getIntro());
-        //id不允许被修改
+        //id cannot be changed.
         if (oldInfo.getId() != newInfo.getId()) {
-            errorMessage = "您不能修改杂志的ID";
+            errorMessage = "You cannot change the ID!";
         }
 
         JdbcUtils jdbcUtils = new JdbcUtils();
         jdbcUtils.getConnection();
         List<Object> params = new ArrayList<>();
 
-        // 检查改后的用户名
+        // Examine the new name.
         if (!oldInfo.getName().equals(newInfo.getName())) {
-            String sql = "select * from `magazine` where name = ?";
+            String sql = "select * from `movie` where name = ?";
             params.add(newInfo.getName());
             try {
                 Map<String, Object> same = jdbcUtils.findSimpleResult(sql, params);
-                /*
-                 *==================================================
-                 *                 !!important!!
-                 *     字典要判断空不空，而不是null
-                 *==================================================
-                 */
                 if (!same.isEmpty()) {
-                    errorMessage = "杂志名已被占用";
+                    errorMessage = "The name has been used!";
                 }
             } catch (Exception e) {
                 e.printStackTrace();
             }
         }
 
-        //检查改后的图片是否重复
+        //Examine whether the image has been used.
         if (!oldInfo.getCoverPath().equals(newInfo.getCoverPath())) {
-            String sql = "select coverPath from `magazine`";
+            String sql = "select coverPath from `movie`";
             params.clear();
             try {
                 List<Map<String, Object>> infos = jdbcUtils.findModeResult(sql, params);
                 for (Map<String, Object> info : infos) {
                     if (newInfo.getCoverPath().equals(info.get("coverPath"))) {
-                        errorMessage = "该图片已被使用，请换一张";
+                        errorMessage = "The image has been used. Please change one.";
                     }
                 }
             } catch (SQLException e) {
@@ -330,29 +312,30 @@
         }
         return errorMessage;
     }
-
+    /**
+     * Regular check of movies.
+     */
     public static String movieRegularCheck(String id, String mname, String director, String actor, String mclas, String intro) {
         String errorMessage = null;
-        System.out.println("进入杂志检查");
-        // 检查常规项
+        System.out.println("Enter the regular test.");
         if (director.length() == 0) {
-            errorMessage = "出版社为空";
+            errorMessage = "The director should not be empty!";
         }
         if (actor.length() == 0) {
-            errorMessage = "出版周期为空";
+            errorMessage = "The actor should not be empty!";
         }
 
         if (mclas.length() == 0) {
-            errorMessage = "没有选择分类";
+            errorMessage = "No class!";
         }
         if (intro.length() > 140) {
-            errorMessage = "介绍过长";
+            errorMessage = "The introduction is too long!";
         }
         if (id.length() > 11) {
-            errorMessage = "id过长";
+            errorMessage = "ID is too long!";
         }
         if (mname.length() > 60) {
-            errorMessage = "用户名过长";
+            errorMessage = "Movie's name is too long!";
         }
         return errorMessage;
     }
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/src\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision cc0a39f6b07677981707a0dcc6b6c89b51a0ba64)
+++ b/.idea/misc.xml	(date 1683635323684)
@@ -1,5 +1,10 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="EntryPointsManager">
+    <list size="1">
+      <item index="0" class="java.lang.String" itemvalue="javafx.fxml.FXML" />
+    </list>
+  </component>
   <component name="ExternalStorageConfigurationManager" enabled="true" />
   <component name="MavenProjectsManager">
     <option name="originalFiles">
Index: src/main/java/org/example/models/Admin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.models;\r\n\r\nimport javafx.beans.property.IntegerProperty;\r\nimport javafx.beans.property.SimpleIntegerProperty;\r\nimport javafx.beans.property.SimpleStringProperty;\r\nimport javafx.beans.property.StringProperty;\r\n\r\nimport java.io.Serializable;\r\n\r\npublic class Admin implements User, Serializable {\r\n    private IntegerProperty id;\r\n    private StringProperty username;\r\n    private StringProperty password;\r\n\r\n    @Override\r\n    public String showUsername() {\r\n        return getUsername();\r\n    }\r\n\r\n    @Override\r\n    public String showPassword() {\r\n        return getPassword();\r\n    }\r\n\r\n    @Override\r\n    public String showType() {\r\n        return \"管理员\";\r\n    }\r\n\r\n    public Admin() {\r\n    }\r\n\r\n    public Admin(Integer id, String username, String password) {\r\n        this.id = new SimpleIntegerProperty(id);\r\n        this.username = new SimpleStringProperty(username);\r\n        this.password = new SimpleStringProperty(password);\r\n    }\r\n\r\n    public int getId() {\r\n        return id.get();\r\n    }\r\n\r\n    public IntegerProperty idProperty() {\r\n        return id;\r\n    }\r\n\r\n    public void setId(int id) {\r\n        this.id.set(id);\r\n    }\r\n\r\n    public String getUsername() {\r\n        return username.get();\r\n    }\r\n\r\n    public StringProperty usernameProperty() {\r\n        return username;\r\n    }\r\n\r\n    public void setUsername(String username) {\r\n        this.username.set(username);\r\n    }\r\n\r\n    public String getPassword() {\r\n        return password.get();\r\n    }\r\n\r\n    public StringProperty passwordProperty() {\r\n        return password;\r\n    }\r\n\r\n    public void setPassword(String password) {\r\n        this.password.set(password);\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"Admin{\" +\r\n                \"id=\" + id +\r\n                \", username=\" + username +\r\n                \", password=\" + password +\r\n                '}';\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/models/Admin.java b/src/main/java/org/example/models/Admin.java
--- a/src/main/java/org/example/models/Admin.java	(revision cc0a39f6b07677981707a0dcc6b6c89b51a0ba64)
+++ b/src/main/java/org/example/models/Admin.java	(date 1683635323699)
@@ -24,7 +24,7 @@
 
     @Override
     public String showType() {
-        return "管理员";
+        return "Admin";
     }
 
     public Admin() {
Index: src/main/java/org/example/models/CommonUser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.models;\r\n\r\nimport javafx.beans.property.IntegerProperty;\r\nimport javafx.beans.property.SimpleIntegerProperty;\r\nimport javafx.beans.property.SimpleStringProperty;\r\nimport javafx.beans.property.StringProperty;\r\n\r\npublic class CommonUser implements User{\r\n    private IntegerProperty id;\r\n    private StringProperty username;\r\n    private StringProperty password;\r\n    private StringProperty sid;\r\n    private StringProperty age;\r\n    private StringProperty tel;\r\n\r\n    @Override\r\n    public String showUsername() {\r\n        return getPassword();\r\n    }\r\n\r\n    @Override\r\n    public String showPassword() {\r\n        return getPassword();\r\n    }\r\n\r\n    @Override\r\n    public String showType() {\r\n        return \"CommonUser\";\r\n    }\r\n\r\n    public CommonUser() {\r\n    }\r\n\r\n    public CommonUser( String username, String password) {\r\n        this.username = new SimpleStringProperty(username);\r\n        this.password = new SimpleStringProperty(password);\r\n    }\r\n\r\n    public CommonUser(Integer id,String username, String password, String age, String tel,String sid) {\r\n        this.id = new SimpleIntegerProperty(id);\r\n        this.username = new SimpleStringProperty(username);\r\n        this.password = new SimpleStringProperty(password);\r\n        this.sid = new SimpleStringProperty(sid);\r\n        this.tel = new SimpleStringProperty(tel);\r\n        this.age = new SimpleStringProperty(age);\r\n    }\r\n    public int getId(){return id.get();}\r\n    public IntegerProperty idProperty() {\r\n        return id;\r\n    }\r\n    public void setId(int id) {\r\n        this.id.set(id);\r\n    }\r\n    public String getUsername() {\r\n        return username.get();\r\n    }\r\n\r\n    public StringProperty usernameProperty() {\r\n        return username;\r\n    }\r\n\r\n    public void setUsername(String username) {\r\n        this.username.set(username);\r\n    }\r\n\r\n    public String getPassword() {\r\n        return password.get();\r\n    }\r\n\r\n    public StringProperty passwordProperty() {\r\n        return password;\r\n    }\r\n\r\n    public void setPassword(String password) {\r\n        this.password.set(password);\r\n    }\r\n    public  String getAge() {return age.get();}\r\n    public String getSid() {\r\n        return sid.get();\r\n    }\r\n    public StringProperty ageProperty() {return age;}\r\n    public StringProperty sidProperty() {\r\n        return sid;\r\n    }\r\n    public void setAge(String age) {this.age.set(age);}\r\n    public void setSid(String sid) {\r\n        this.sid.set(sid);\r\n    }\r\n\r\n    public String getTel() {\r\n        return tel.get();\r\n    }\r\n\r\n    public StringProperty telProperty() {\r\n        return tel;\r\n    }\r\n\r\n    public void setTel(String tel) {\r\n        this.tel.set(tel);\r\n    }\r\n\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"CommonUser{\" +\r\n                \"id=\" + id +\r\n                \", username=\" + username +\r\n                \", password=\" + password +\r\n                \", age=\"+ age +\r\n                \", tel=\" + tel +\r\n                \", sid=\" + sid +\r\n                '}';\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/models/CommonUser.java b/src/main/java/org/example/models/CommonUser.java
--- a/src/main/java/org/example/models/CommonUser.java	(revision cc0a39f6b07677981707a0dcc6b6c89b51a0ba64)
+++ b/src/main/java/org/example/models/CommonUser.java	(date 1683635323726)
@@ -10,7 +10,7 @@
     private StringProperty username;
     private StringProperty password;
     private StringProperty sid;
-    private StringProperty age;
+    private IntegerProperty age;
     private StringProperty tel;
 
     @Override
@@ -36,13 +36,13 @@
         this.password = new SimpleStringProperty(password);
     }
 
-    public CommonUser(Integer id,String username, String password, String age, String tel,String sid) {
+    public CommonUser(Integer id,String username, String password, Integer age, String tel,String sid) {
         this.id = new SimpleIntegerProperty(id);
         this.username = new SimpleStringProperty(username);
         this.password = new SimpleStringProperty(password);
         this.sid = new SimpleStringProperty(sid);
         this.tel = new SimpleStringProperty(tel);
-        this.age = new SimpleStringProperty(age);
+        this.age = new SimpleIntegerProperty(age);
     }
     public int getId(){return id.get();}
     public IntegerProperty idProperty() {
@@ -74,15 +74,15 @@
     public void setPassword(String password) {
         this.password.set(password);
     }
-    public  String getAge() {return age.get();}
+    public Integer getAge() {return age.get();}
     public String getSid() {
         return sid.get();
     }
-    public StringProperty ageProperty() {return age;}
+    public IntegerProperty ageProperty() {return age;}
     public StringProperty sidProperty() {
         return sid;
     }
-    public void setAge(String age) {this.age.set(age);}
+    public void setAge(Integer age) {this.age.set(age);}
     public void setSid(String sid) {
         this.sid.set(sid);
     }
Index: src/main/java/org/example/utils/DialogUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.utils;\r\n\r\nimport javafx.scene.control.Alert;\r\nimport javafx.scene.control.ButtonBar;\r\nimport javafx.scene.control.ButtonType;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.stage.Stage;\r\nimport org.example.Main;\r\n\r\nimport java.util.Optional;\r\n\r\npublic class DialogUtils {\r\n    public static void tips(Stage stage, String message) {\r\n        Alert alert = new Alert(Alert.AlertType.INFORMATION);\r\n        alert.setTitle(\"Suggestions!\");\r\n        ImageView menhera = new ImageView(Main.class.getResource(\"scene/images/systemUse/tips.png\").toString());\r\n        menhera.setFitHeight(100);\r\n        menhera.setPreserveRatio(true);\r\n        alert.setGraphic(menhera);\r\n        alert.setHeaderText(\"There is something wrong with your information!\");\r\n        alert.setContentText(message);\r\n        alert.initOwner(stage);\r\n        alert.show();\r\n    }\r\n\r\n    public static void good(Stage stage, String message) {\r\n        Alert alert = new Alert(Alert.AlertType.INFORMATION);\r\n        alert.setTitle(\"Congratulations!\");\r\n        ImageView menhera = new ImageView(Main.class.getResource(\"scene/images/systemUse/good.png\").toString());\r\n        menhera.setFitHeight(100);\r\n        menhera.setPreserveRatio(true);\r\n        alert.setGraphic(menhera);\r\n        alert.setHeaderText(\"Your operation worked as expected\");\r\n        alert.setContentText(message);\r\n        alert.initOwner(stage);\r\n        alert.show();\r\n    }\r\n\r\n    public static boolean confirm(Stage stage, String message) {\r\n        Alert alert = new Alert(Alert.AlertType.CONFIRMATION, message ,new ButtonType(\"No\", ButtonBar.ButtonData.NO),\r\n                new ButtonType(\"Yes\", ButtonBar.ButtonData.YES));\r\n//        设置窗口的标题\r\n        alert.setTitle(\"Yes\");\r\n        ImageView menhera = new ImageView(Main.class.getResource(\"scene/images/systemUse/confirm.png\").toString());\r\n        menhera.setFitHeight(100);\r\n        menhera.setPreserveRatio(true);\r\n        alert.setGraphic(menhera);\r\n        alert.setHeaderText(\"The last Chance!\");\r\n//        设置对话框的 icon 图标，参数是主窗口的 stage\r\n        alert.initOwner(stage);\r\n//        showAndWait() 将在对话框消失以前不会执行之后的代码\r\n        Optional<ButtonType> buttonType = alert.showAndWait();\r\n//        根据点击结果返回\r\n        if(buttonType.get().getButtonData().equals(ButtonBar.ButtonData.YES)){\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/utils/DialogUtils.java b/src/main/java/org/example/utils/DialogUtils.java
--- a/src/main/java/org/example/utils/DialogUtils.java	(revision cc0a39f6b07677981707a0dcc6b6c89b51a0ba64)
+++ b/src/main/java/org/example/utils/DialogUtils.java	(date 1683635323733)
@@ -13,10 +13,6 @@
     public static void tips(Stage stage, String message) {
         Alert alert = new Alert(Alert.AlertType.INFORMATION);
         alert.setTitle("Suggestions!");
-        ImageView menhera = new ImageView(Main.class.getResource("scene/images/systemUse/tips.png").toString());
-        menhera.setFitHeight(100);
-        menhera.setPreserveRatio(true);
-        alert.setGraphic(menhera);
         alert.setHeaderText("There is something wrong with your information!");
         alert.setContentText(message);
         alert.initOwner(stage);
@@ -26,10 +22,6 @@
     public static void good(Stage stage, String message) {
         Alert alert = new Alert(Alert.AlertType.INFORMATION);
         alert.setTitle("Congratulations!");
-        ImageView menhera = new ImageView(Main.class.getResource("scene/images/systemUse/good.png").toString());
-        menhera.setFitHeight(100);
-        menhera.setPreserveRatio(true);
-        alert.setGraphic(menhera);
         alert.setHeaderText("Your operation worked as expected");
         alert.setContentText(message);
         alert.initOwner(stage);
@@ -39,18 +31,10 @@
     public static boolean confirm(Stage stage, String message) {
         Alert alert = new Alert(Alert.AlertType.CONFIRMATION, message ,new ButtonType("No", ButtonBar.ButtonData.NO),
                 new ButtonType("Yes", ButtonBar.ButtonData.YES));
-//        设置窗口的标题
         alert.setTitle("Yes");
-        ImageView menhera = new ImageView(Main.class.getResource("scene/images/systemUse/confirm.png").toString());
-        menhera.setFitHeight(100);
-        menhera.setPreserveRatio(true);
-        alert.setGraphic(menhera);
         alert.setHeaderText("The last Chance!");
-//        设置对话框的 icon 图标，参数是主窗口的 stage
         alert.initOwner(stage);
-//        showAndWait() 将在对话框消失以前不会执行之后的代码
         Optional<ButtonType> buttonType = alert.showAndWait();
-//        根据点击结果返回
         if(buttonType.get().getButtonData().equals(ButtonBar.ButtonData.YES)){
             return true;
         } else {
Index: src/main/java/org/example/utils/JdbcUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.utils;\r\nimport javafx.beans.property.SimpleIntegerProperty;\r\nimport javafx.beans.property.SimpleStringProperty;\r\nimport javafx.collections.ObservableList;\r\nimport org.example.models.Admin;\r\n\r\nimport java.lang.reflect.Field;\r\nimport java.sql.*;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\npublic class JdbcUtils {\r\n    private static final String USER_NAME = \"root\";\r\n    private static final String PASSWORD =\"qiujunwen123\";\r\n\r\n    private static final String DRIVER = \"com.mysql.cj.jdbc.Driver\";\r\n    private static final String URL = \"jdbc:mysql://localhost:3306/moviemanagement?useSSL=false&characterEncoding=utf-8&serverTimezone=UTC\";\r\n    private Connection connection;\r\n    private PreparedStatement pstmt;\r\n    private ResultSet resultSet;\r\n\r\n    public JdbcUtils() {\r\n        try {\r\n            Class.forName(DRIVER);\r\n            System.out.println(\"数据库连接成功\");\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public Connection getConnection() {\r\n        try {\r\n            connection = DriverManager.getConnection(URL, USER_NAME, PASSWORD);\r\n        } catch (SQLException e) {\r\n            e.printStackTrace();\r\n\r\n        }\r\n        return connection;\r\n    }\r\n\r\n    public boolean updateByPreparedStatement(String sql, List<Object> params) throws SQLException {\r\n        int resultLineNumber = -1; // 如果行号小于零说明更新失败\r\n        pstmt = connection.prepareStatement(sql);\r\n        if (params != null && !params.isEmpty()) {\r\n            for (int i = 0; i < params.size(); i++) {\r\n                pstmt.setObject(i+1, params.get(i));\r\n            }\r\n        }\r\n        resultLineNumber = pstmt.executeUpdate();\r\n        return resultLineNumber > 0;\r\n    }\r\n\r\n    /**\r\n     * 查询单条数据库数据，并打包成字典的形式返回\r\n     * @param sql 待填充参数的数据库查询语句\r\n     * @param params 准备填充的参数列表\r\n     * @throws SQLException 数据库操作异常\r\n     * @return 单个数据库信息的字典\r\n     */\r\n    public Map<String, Object> findSimpleResult(String sql, List<Object> params) throws SQLException {\r\n        Map<String, Object> map = new HashMap<>();\r\n        pstmt = connection.prepareStatement(sql);\r\n        if (params != null && !params.isEmpty()) {\r\n            for (int i = 0; i < params.size(); i++) {\r\n                pstmt.setObject(i+1, params.get(i)); //这里要处理序号问题，所以第一个参数是i+1\r\n            }\r\n        }\r\n        resultSet = pstmt.executeQuery();\r\n        ResultSetMetaData metaData = resultSet.getMetaData(); // 获取元数据,目的是获得行号\r\n        int col = metaData.getColumnCount();\r\n        while (resultSet.next()) {\r\n            for (int i = 0; i < col; i++) {\r\n                String colName = metaData.getColumnLabel(i+1);\r\n                Object colValue = resultSet.getObject(colName);\r\n                if (colValue == null) {\r\n                    colValue = \"\";\r\n                }\r\n                map.put(colName, colValue);\r\n            }\r\n        }\r\n        return map;\r\n    }\r\n\r\n    /**\r\n     * 查询多条数据库数据，打包成字典，并放入列表中返回\r\n     * @param sql 待填充参数的数据库查询语句\r\n     * @param params 准备填充的参数列表\r\n     * @throws SQLException 数据库操作异常\r\n     * @return 装有多组数据map的list\r\n     */\r\n    public List<Map<String, Object>> findModeResult(String sql, List<Object> params) throws SQLException {\r\n        List<Map<String, Object>> maps = new ArrayList<>();\r\n        pstmt = connection.prepareStatement(sql);\r\n        if (params != null && !params.isEmpty()) {\r\n            for (int i = 0; i < params.size(); i++) {\r\n                pstmt.setObject(i+1, params.get(i));\r\n            }\r\n        }\r\n        resultSet = pstmt.executeQuery();\r\n        ResultSetMetaData metaData = resultSet.getMetaData();\r\n        int col = metaData.getColumnCount();\r\n        while (resultSet.next()) {\r\n            Map<String, Object> map = new HashMap<>();\r\n            for (int i = 0; i < col; i++) {\r\n                String colName = metaData.getColumnLabel(i+1);\r\n                Object colValue = resultSet.getObject(colName);\r\n                if (colValue == null) {\r\n                    colValue = \"\";\r\n                }\r\n                map.put(colName, colValue);\r\n            }\r\n            maps.add(map);\r\n        }\r\n        return maps;\r\n    }\r\n\r\n    /**\r\n     * 通过反射机制查询单条数据库数据，处理完绑定后打包，并直接返回包装好的对象\r\n     * @param sql 待填充参数的数据库查询语句\r\n     * @param params 带填充的参数列表\r\n     * @param cls 要打包的对象的类型\r\n     * @throws Exception 返回一个异常\r\n     * @return 直接返回包装好的数据\r\n     */\r\n    public <T> T findSimpleProResult(String sql, List<Object> params, Class<T> cls) throws Exception {\r\n        T resultObject = null;\r\n        pstmt = connection.prepareStatement(sql);\r\n        if (params != null && !params.isEmpty()) {\r\n            for (int i = 0; i < params.size(); i++) {\r\n                pstmt.setObject(i+1, params.get(i));\r\n            }\r\n        }\r\n        resultSet = pstmt.executeQuery();\r\n        ResultSetMetaData metaData = resultSet.getMetaData();\r\n        int col = metaData.getColumnCount();\r\n        while (resultSet.next()) {\r\n\r\n            resultObject = cls.newInstance(); // 创建一个该类的一个新实例\r\n\r\n            // 对每项数据依次处理\r\n            for (int i = 0; i < col; i++) {\r\n                String colName = metaData.getColumnName(i+1);\r\n                Object colValue = resultSet.getObject(colName);\r\n                Object newValue = null;\r\n                if (colValue == null) {\r\n                    newValue = \"\";\r\n                } else if (colValue.getClass() == Integer.class) {\r\n                    newValue = new SimpleIntegerProperty(Integer.parseInt(colValue.toString()));\r\n                } else if (colValue.getClass() == String.class) {\r\n                    newValue = new SimpleStringProperty(colValue.toString());\r\n                }\r\n                Field field = cls.getDeclaredField(colName);\r\n                field.setAccessible(true);\r\n                field.set(resultObject, newValue);\r\n            }\r\n        }\r\n        return resultObject;\r\n    }\r\n\r\n    /**\r\n     * 通过反射机制查询多条数据库数据，处理双向绑定并将对象封装好后填如list中返回\r\n     * @param sql 数据库查询语句\r\n     * @param params 数据库查询参数\r\n     * @param cls 要打包的对象的类型\r\n     * @throws Exception 返回一个异常\r\n     * @return 装有cls相应对象的列表\r\n     */\r\n    public <T> List<T> findMoreProResult(String sql, List<Object> params, Class<T> cls) throws Exception {\r\n        List<T> list = new ArrayList<>();\r\n        pstmt = connection.prepareStatement(sql);\r\n        if (params != null && !params.isEmpty()) {\r\n            for (int i = 0; i < params.size(); i++) {\r\n                pstmt.setObject(i+1, params.get(i));\r\n            }\r\n        }\r\n\r\n        resultSet = pstmt.executeQuery();\r\n        ResultSetMetaData metaData = resultSet.getMetaData();\r\n//        System.out.println(metaData);\r\n        int col = metaData.getColumnCount();\r\n        while (resultSet.next()) {\r\n            T resultObject = cls.newInstance();\r\n            for (int i = 0; i < col; i++) {\r\n                /*\r\n                 *==================================================\r\n                 *                 !!important!!\r\n                 *     这里用getColumnLabel才能显示修改后的姓名\r\n                 *     StackOverFlow大法好！！\r\n                 *     https://stackoverflow.com/questions/6732736/rs-getmetadata-getcolumnnamei-with-aliased-columns-on-mysql\r\n                 *==================================================\r\n                 */\r\n                String colName = metaData.getColumnLabel(i+1);\r\n                Object colValue = resultSet.getObject(colName);\r\n//                System.out.println(colName);\r\n                Object newValue = null;\r\n                if (colValue == null) {\r\n                    colValue = \"\";\r\n                } else if (colValue.getClass() == Integer.class) {\r\n                    newValue = new SimpleIntegerProperty(Integer.parseInt(colValue.toString()));\r\n                } else if (colValue.getClass() == String.class) {\r\n                    newValue = new SimpleStringProperty(colValue.toString());\r\n                }\r\n                Field field = cls.getDeclaredField(colName);\r\n                field.setAccessible(true);\r\n                field.set(resultObject, newValue);\r\n            }\r\n            list.add(resultObject);\r\n        }\r\n        return list;\r\n    }\r\n\r\n    /**\r\n     * 通过反射机制查询单条数据库数据，并直接返回包装好的对象\r\n     * @param sql 待填充参数的数据库查询语句\r\n     * @param params 带填充的参数列表\r\n     * @param cls 要打包的对象的类型\r\n     * @throws Exception 返回一个异常\r\n     * @return 直接返回包装好的数据\r\n     */\r\n    public <T> T findSimpleRefResult(String sql, List<Object> params, Class<T> cls) throws Exception {\r\n        T resultObject = null;\r\n        pstmt = connection.prepareStatement(sql);\r\n        if (params != null && !params.isEmpty()) {\r\n            for (int i = 0; i < params.size(); i++) {\r\n                pstmt.setObject(i+1, params.get(i));\r\n            }\r\n        }\r\n        resultSet = pstmt.executeQuery();\r\n        ResultSetMetaData metaData = resultSet.getMetaData();\r\n        int col = metaData.getColumnCount();\r\n        while (resultSet.next()) {\r\n            resultObject = cls.newInstance(); // 创建一个该类的一个新实例\r\n            for (int i = 0; i < col; i++) {\r\n                String colName = metaData.getColumnName(i+1);\r\n                Object colValue = resultSet.getObject(colName);\r\n                if (colValue == null) {\r\n                    colValue = \"\";\r\n                }\r\n                Field field = cls.getDeclaredField(colName);\r\n                field.setAccessible(true);\r\n                field.set(resultObject, colValue);\r\n            }\r\n        }\r\n        return resultObject;\r\n    }\r\n\r\n    /**\r\n     * 通过反射机制查询多条数据库数据，将对象封装好后填如list中，并返回\r\n     * @param sql 数据库查询语句\r\n     * @param params 数据库查询参数\r\n     * @param cls 要打包的对象的类型\r\n     * @throws Exception 返回一个异常\r\n     * @return 装有cls相应对象的列表\r\n     */\r\n    public <T> List<T> findMoreRefResult(String sql, List<Object> params, Class<T> cls) throws Exception {\r\n        List<T> list = new ArrayList<>();\r\n        pstmt = connection.prepareStatement(sql);\r\n        if (params != null && !params.isEmpty()) {\r\n            for (int i = 0; i < params.size(); i++) {\r\n                pstmt.setObject(i+1, params.get(i));\r\n            }\r\n        }\r\n        resultSet = pstmt.executeQuery();\r\n        ResultSetMetaData metaData = resultSet.getMetaData();\r\n        int col = metaData.getColumnCount();\r\n        while (resultSet.next()) {\r\n            T resultObject = cls.newInstance();\r\n            for (int i = 0; i < col; i++) {\r\n                String colName = metaData.getColumnName(i+1);\r\n                Object colValue = resultSet.getObject(colName);\r\n                if (colValue == null) {\r\n                    colValue = \"\";\r\n                }\r\n                Field field = cls.getDeclaredField(colName);\r\n                field.setAccessible(true);\r\n                field.set(resultObject, colValue);\r\n            }\r\n            list.add(resultObject);\r\n        }\r\n        return list;\r\n    }\r\n\r\n    /**\r\n     * 释放数据库连接\r\n     */\r\n    public void releaseConnection() {\r\n        if (resultSet != null) {\r\n            try {\r\n                resultSet.close();\r\n            } catch (SQLException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 测试函数\r\n     * @param args no args\r\n     * @throws SQLException 抛出数据库异常\r\n     */\r\n    public static void main(String[] args) throws SQLException {\r\n        JdbcUtils jdbcUtils = new JdbcUtils();\r\n        jdbcUtils.getConnection();\r\n\r\n        // 利用反射查询单条记录\r\n        String sql = \"select * from `admin` where username = ?\";\r\n        List<Object> params = new ArrayList<>();\r\n        params.add(\"qweokk\");\r\n        try {\r\n            Admin admin = jdbcUtils.findSimpleRefResult(sql, params, Admin.class);\r\n            System.out.println(jdbcUtils.findSimpleRefResult(sql, params, Admin.class));\r\n            System.out.println(admin.toString());\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/utils/JdbcUtils.java b/src/main/java/org/example/utils/JdbcUtils.java
--- a/src/main/java/org/example/utils/JdbcUtils.java	(revision cc0a39f6b07677981707a0dcc6b6c89b51a0ba64)
+++ b/src/main/java/org/example/utils/JdbcUtils.java	(date 1683635314479)
@@ -23,7 +23,7 @@
     public JdbcUtils() {
         try {
             Class.forName(DRIVER);
-            System.out.println("数据库连接成功");
+            System.out.println("Connect with the database successfully.");
         } catch (Exception e) {
             e.printStackTrace();
         }
@@ -38,9 +38,11 @@
         }
         return connection;
     }
-
+    /**
+     * Adding, deleting, and modifying database data
+     */
     public boolean updateByPreparedStatement(String sql, List<Object> params) throws SQLException {
-        int resultLineNumber = -1; // 如果行号小于零说明更新失败
+        int resultLineNumber = -1;
         pstmt = connection.prepareStatement(sql);
         if (params != null && !params.isEmpty()) {
             for (int i = 0; i < params.size(); i++) {
@@ -52,22 +54,18 @@
     }
 
     /**
-     * 查询单条数据库数据，并打包成字典的形式返回
-     * @param sql 待填充参数的数据库查询语句
-     * @param params 准备填充的参数列表
-     * @throws SQLException 数据库操作异常
-     * @return 单个数据库信息的字典
+     * Query a single database data and package it into a dictionary to return it
      */
     public Map<String, Object> findSimpleResult(String sql, List<Object> params) throws SQLException {
         Map<String, Object> map = new HashMap<>();
         pstmt = connection.prepareStatement(sql);
         if (params != null && !params.isEmpty()) {
             for (int i = 0; i < params.size(); i++) {
-                pstmt.setObject(i+1, params.get(i)); //这里要处理序号问题，所以第一个参数是i+1
+                pstmt.setObject(i+1, params.get(i));
             }
         }
         resultSet = pstmt.executeQuery();
-        ResultSetMetaData metaData = resultSet.getMetaData(); // 获取元数据,目的是获得行号
+        ResultSetMetaData metaData = resultSet.getMetaData();
         int col = metaData.getColumnCount();
         while (resultSet.next()) {
             for (int i = 0; i < col; i++) {
@@ -83,11 +81,7 @@
     }
 
     /**
-     * 查询多条数据库数据，打包成字典，并放入列表中返回
-     * @param sql 待填充参数的数据库查询语句
-     * @param params 准备填充的参数列表
-     * @throws SQLException 数据库操作异常
-     * @return 装有多组数据map的list
+     * Query multiple database data, package them into a dictionary, and place them in a list to return
      */
     public List<Map<String, Object>> findModeResult(String sql, List<Object> params) throws SQLException {
         List<Map<String, Object>> maps = new ArrayList<>();
@@ -116,12 +110,7 @@
     }
 
     /**
-     * 通过反射机制查询单条数据库数据，处理完绑定后打包，并直接返回包装好的对象
-     * @param sql 待填充参数的数据库查询语句
-     * @param params 带填充的参数列表
-     * @param cls 要打包的对象的类型
-     * @throws Exception 返回一个异常
-     * @return 直接返回包装好的数据
+     * Query a single database data through a reflection mechanism, package it after processing the binding, and directly return the packaged object
      */
     public <T> T findSimpleProResult(String sql, List<Object> params, Class<T> cls) throws Exception {
         T resultObject = null;
@@ -135,10 +124,7 @@
         ResultSetMetaData metaData = resultSet.getMetaData();
         int col = metaData.getColumnCount();
         while (resultSet.next()) {
-
-            resultObject = cls.newInstance(); // 创建一个该类的一个新实例
-
-            // 对每项数据依次处理
+            resultObject = cls.newInstance();
             for (int i = 0; i < col; i++) {
                 String colName = metaData.getColumnName(i+1);
                 Object colValue = resultSet.getObject(colName);
@@ -159,12 +145,7 @@
     }
 
     /**
-     * 通过反射机制查询多条数据库数据，处理双向绑定并将对象封装好后填如list中返回
-     * @param sql 数据库查询语句
-     * @param params 数据库查询参数
-     * @param cls 要打包的对象的类型
-     * @throws Exception 返回一个异常
-     * @return 装有cls相应对象的列表
+     * Query multiple database data through reflection mechanism, handle bidirectional binding, encapsulate objects, and fill them in the list to return
      */
     public <T> List<T> findMoreProResult(String sql, List<Object> params, Class<T> cls) throws Exception {
         List<T> list = new ArrayList<>();
@@ -177,22 +158,14 @@
 
         resultSet = pstmt.executeQuery();
         ResultSetMetaData metaData = resultSet.getMetaData();
-//        System.out.println(metaData);
+        //System.out.println(metaData);
         int col = metaData.getColumnCount();
         while (resultSet.next()) {
             T resultObject = cls.newInstance();
             for (int i = 0; i < col; i++) {
-                /*
-                 *==================================================
-                 *                 !!important!!
-                 *     这里用getColumnLabel才能显示修改后的姓名
-                 *     StackOverFlow大法好！！
-                 *     https://stackoverflow.com/questions/6732736/rs-getmetadata-getcolumnnamei-with-aliased-columns-on-mysql
-                 *==================================================
-                 */
                 String colName = metaData.getColumnLabel(i+1);
                 Object colValue = resultSet.getObject(colName);
-//                System.out.println(colName);
+                //System.out.println(colName);
                 Object newValue = null;
                 if (colValue == null) {
                     colValue = "";
@@ -211,12 +184,7 @@
     }
 
     /**
-     * 通过反射机制查询单条数据库数据，并直接返回包装好的对象
-     * @param sql 待填充参数的数据库查询语句
-     * @param params 带填充的参数列表
-     * @param cls 要打包的对象的类型
-     * @throws Exception 返回一个异常
-     * @return 直接返回包装好的数据
+     * Query single database data through reflection mechanism and directly return packaged objects
      */
     public <T> T findSimpleRefResult(String sql, List<Object> params, Class<T> cls) throws Exception {
         T resultObject = null;
@@ -230,7 +198,7 @@
         ResultSetMetaData metaData = resultSet.getMetaData();
         int col = metaData.getColumnCount();
         while (resultSet.next()) {
-            resultObject = cls.newInstance(); // 创建一个该类的一个新实例
+            resultObject = cls.newInstance();
             for (int i = 0; i < col; i++) {
                 String colName = metaData.getColumnName(i+1);
                 Object colValue = resultSet.getObject(colName);
@@ -245,44 +213,9 @@
         return resultObject;
     }
 
-    /**
-     * 通过反射机制查询多条数据库数据，将对象封装好后填如list中，并返回
-     * @param sql 数据库查询语句
-     * @param params 数据库查询参数
-     * @param cls 要打包的对象的类型
-     * @throws Exception 返回一个异常
-     * @return 装有cls相应对象的列表
-     */
-    public <T> List<T> findMoreRefResult(String sql, List<Object> params, Class<T> cls) throws Exception {
-        List<T> list = new ArrayList<>();
-        pstmt = connection.prepareStatement(sql);
-        if (params != null && !params.isEmpty()) {
-            for (int i = 0; i < params.size(); i++) {
-                pstmt.setObject(i+1, params.get(i));
-            }
-        }
-        resultSet = pstmt.executeQuery();
-        ResultSetMetaData metaData = resultSet.getMetaData();
-        int col = metaData.getColumnCount();
-        while (resultSet.next()) {
-            T resultObject = cls.newInstance();
-            for (int i = 0; i < col; i++) {
-                String colName = metaData.getColumnName(i+1);
-                Object colValue = resultSet.getObject(colName);
-                if (colValue == null) {
-                    colValue = "";
-                }
-                Field field = cls.getDeclaredField(colName);
-                field.setAccessible(true);
-                field.set(resultObject, colValue);
-            }
-            list.add(resultObject);
-        }
-        return list;
-    }
 
     /**
-     * 释放数据库连接
+     * Release database connection
      */
     public void releaseConnection() {
         if (resultSet != null) {
@@ -295,15 +228,11 @@
     }
 
     /**
-     * 测试函数
-     * @param args no args
-     * @throws SQLException 抛出数据库异常
+     * Test Function
      */
     public static void main(String[] args) throws SQLException {
         JdbcUtils jdbcUtils = new JdbcUtils();
         jdbcUtils.getConnection();
-
-        // 利用反射查询单条记录
         String sql = "select * from `admin` where username = ?";
         List<Object> params = new ArrayList<>();
         params.add("qweokk");
Index: src/main/java/org/example/utils/ImageUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.utils;\r\n\r\nimport javafx.stage.FileChooser;\r\nimport org.example.Main;\r\n\r\nimport java.io.*;\r\n\r\npublic class ImageUtils {\r\n    public static void save(File image) {\r\n        /*\r\n         *==================================================\r\n         *                 !!important!!\r\n         *        这里的路径一定要写成下面这个样子的路径\r\n         *==================================================\r\n         */\r\n        File imageFileCopy = new File(\"src/main/resources/org/example/scene/images/\", image.getName());\r\n\r\n        //创建复制流\r\n        InputStream in = null;\r\n        OutputStream out = null;\r\n\r\n        //复制文件\r\n        try {\r\n            if (!imageFileCopy.exists()) {\r\n                imageFileCopy.createNewFile();\r\n            }\r\n            in = new FileInputStream(image);\r\n            out = new FileOutputStream(imageFileCopy);\r\n            byte[] temp = new byte[1024];\r\n            int length = 0;\r\n            while ((length = in.read(temp)) != -1) {\r\n                out.write(temp, 0, length);\r\n            }\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        } finally {\r\n            try {\r\n                // 关闭文件输入输出流\r\n                in.close();\r\n                out.close();\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n\r\n    public static File choose(Main mainApp) {\r\n        FileChooser fileChooser = new FileChooser();\r\n        //设置过滤的文件类型\r\n        FileChooser.ExtensionFilter jpgFilter = new FileChooser.ExtensionFilter(\r\n                \"JPG files (*.jpg)\", \"*.jpg\");\r\n        FileChooser.ExtensionFilter jpegFilter = new FileChooser.ExtensionFilter(\r\n                \"JPEG files (*.jpeg)\", \"*.jpeg\");\r\n        FileChooser.ExtensionFilter pngFilter = new FileChooser.ExtensionFilter(\r\n                \"PNG files (*.png)\", \"*.png\");\r\n        fileChooser.getExtensionFilters().add(jpgFilter);\r\n        fileChooser.getExtensionFilters().add(jpegFilter);\r\n        fileChooser.getExtensionFilters().add(pngFilter);\r\n        File image = fileChooser.showOpenDialog(mainApp.getPrimaryStage());\r\n        return image;\r\n    }\r\n\r\n    public static void delete(String imageName) {\r\n        File waitToDeletaImage = new File(\"src/main/resources/org/example/scene/images/\", imageName);\r\n        waitToDeletaImage.delete();\r\n        System.out.println(\"封面\" + imageName + \"已被删除\");\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/utils/ImageUtils.java b/src/main/java/org/example/utils/ImageUtils.java
--- a/src/main/java/org/example/utils/ImageUtils.java	(revision cc0a39f6b07677981707a0dcc6b6c89b51a0ba64)
+++ b/src/main/java/org/example/utils/ImageUtils.java	(date 1683635323740)
@@ -4,22 +4,14 @@
 import org.example.Main;
 
 import java.io.*;
-
+//Adjust the image
 public class ImageUtils {
     public static void save(File image) {
-        /*
-         *==================================================
-         *                 !!important!!
-         *        这里的路径一定要写成下面这个样子的路径
-         *==================================================
-         */
         File imageFileCopy = new File("src/main/resources/org/example/scene/images/", image.getName());
 
-        //创建复制流
         InputStream in = null;
         OutputStream out = null;
 
-        //复制文件
         try {
             if (!imageFileCopy.exists()) {
                 imageFileCopy.createNewFile();
@@ -35,7 +27,7 @@
             e.printStackTrace();
         } finally {
             try {
-                // 关闭文件输入输出流
+                // close the in & out stream
                 in.close();
                 out.close();
             } catch (Exception e) {
@@ -46,7 +38,6 @@
 
     public static File choose(Main mainApp) {
         FileChooser fileChooser = new FileChooser();
-        //设置过滤的文件类型
         FileChooser.ExtensionFilter jpgFilter = new FileChooser.ExtensionFilter(
                 "JPG files (*.jpg)", "*.jpg");
         FileChooser.ExtensionFilter jpegFilter = new FileChooser.ExtensionFilter(
@@ -63,6 +54,6 @@
     public static void delete(String imageName) {
         File waitToDeletaImage = new File("src/main/resources/org/example/scene/images/", imageName);
         waitToDeletaImage.delete();
-        System.out.println("封面" + imageName + "已被删除");
+        System.out.println("Cover" + imageName + "has been deleted!");
     }
 }
Index: src/main/resources/org/example/scene/AdminView.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.text.*?>\r\n<?import javafx.scene.chart.*?>\r\n<?import javafx.scene.image.*?>\r\n<?import javafx.scene.shape.*?>\r\n<?import javafx.geometry.*?>\r\n<?import java.lang.*?>\r\n<?import java.util.*?>\r\n<?import javafx.scene.*?>\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.layout.*?>\r\n<BorderPane maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" prefHeight=\"736.0\" prefWidth=\"1152.0\" xmlns=\"http://javafx.com/javafx/8\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"org.example.scene.AdminViewController\">\r\n   <center>\r\n      <StackPane prefHeight=\"150.0\" prefWidth=\"200.0\" BorderPane.alignment=\"CENTER\">\r\n         <children>\r\n            <BorderPane fx:id=\"moviePane\" prefHeight=\"200.0\" prefWidth=\"200.0\">\r\n               <left>\r\n                  <TableView fx:id=\"movieTableView\" prefHeight=\"200.0\" prefWidth=\"200.0\" BorderPane.alignment=\"CENTER\">\r\n                    <columns>\r\n                      <TableColumn fx:id=\"movieIdColumn\" prefWidth=\"102.0\" text=\"No.\" />\r\n                      <TableColumn fx:id=\"movieNameColumn\" prefWidth=\"96.0\" text=\"Name\" />\r\n                    </columns>\r\n                     <columnResizePolicy>\r\n                        <TableView fx:constant=\"CONSTRAINED_RESIZE_POLICY\" />\r\n                     </columnResizePolicy>\r\n                  </TableView>\r\n               </left>\r\n               <center>\r\n                  <BorderPane prefHeight=\"200.0\" prefWidth=\"200.0\" BorderPane.alignment=\"CENTER\">\r\n                     <top>\r\n                        <HBox alignment=\"CENTER_RIGHT\" prefHeight=\"44.0\" prefWidth=\"615.0\" spacing=\"14.0\" styleClass=\"functionBar\" BorderPane.alignment=\"CENTER\">\r\n                           <children>\r\n                              <Button mnemonicParsing=\"false\" onAction=\"#handleNewMovie\" text=\"Add\" />\r\n                              <Button mnemonicParsing=\"false\" onAction=\"#handleDeleteMovie\" text=\"Delete\" />\r\n                              <Button mnemonicParsing=\"false\" onAction=\"#handleUpdateMovie\" text=\"Update\">\r\n                                 <HBox.margin>\r\n                                    <Insets right=\"14.0\" />\r\n                                 </HBox.margin>\r\n                              </Button>\r\n                           </children>\r\n                        </HBox>\r\n                     </top>\r\n                     <center>\r\n                        <HBox prefHeight=\"100.0\" prefWidth=\"200.0\" styleClass=\"mainHBox\" BorderPane.alignment=\"CENTER\">\r\n                           <children>\r\n                              <VBox alignment=\"TOP_RIGHT\" prefHeight=\"632.0\" prefWidth=\"449.0\">\r\n                                 <children>\r\n                                    <StackPane prefHeight=\"547.0\" prefWidth=\"504.0\" VBox.vgrow=\"ALWAYS\">\r\n                                       <children>\r\n                                          <Rectangle fx:id=\"imageBorder\" arcHeight=\"5.0\" arcWidth=\"5.0\" fill=\"WHITE\" height=\"536.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" width=\"413.0\" />\r\n                                          <ImageView fx:id=\"movieCover\" fitHeight=\"516.0\" fitWidth=\"376.0\" pickOnBounds=\"true\" />\r\n                                       </children>\r\n                                       <VBox.margin>\r\n                                          <Insets bottom=\"10.0\" top=\"30.0\" />\r\n                                       </VBox.margin>\r\n                                    </StackPane>\r\n                                    <Button fx:id=\"imageButton\" mnemonicParsing=\"false\" onAction=\"#handleSwitchImage\" text=\"Select\">\r\n                                       <VBox.margin>\r\n                                          <Insets bottom=\"30.0\" right=\"30.0\" />\r\n                                       </VBox.margin></Button>\r\n                                 </children>\r\n                              </VBox>\r\n                              <StackPane prefHeight=\"632.0\" prefWidth=\"392.0\">\r\n                                 <children>\r\n                                    <GridPane prefHeight=\"632.0\" prefWidth=\"254.0\">\r\n                                      <columnConstraints>\r\n                                        <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"192.0\" minWidth=\"10.0\" prefWidth=\"128.0\" />\r\n                                        <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"274.0\" minWidth=\"10.0\" prefWidth=\"264.0\" />\r\n                                      </columnConstraints>\r\n                                      <rowConstraints>\r\n                                        <RowConstraints maxHeight=\"87.0\" minHeight=\"6.0\" prefHeight=\"44.0\" valignment=\"TOP\" vgrow=\"SOMETIMES\" />\r\n                                        <RowConstraints maxHeight=\"147.0\" minHeight=\"2.0\" prefHeight=\"42.0\" valignment=\"TOP\" vgrow=\"SOMETIMES\" />\r\n                                        <RowConstraints maxHeight=\"354.0\" minHeight=\"6.0\" prefHeight=\"40.0\" valignment=\"TOP\" vgrow=\"SOMETIMES\" />\r\n                                          <RowConstraints maxHeight=\"382.0\" minHeight=\"10.0\" prefHeight=\"42.0\" valignment=\"TOP\" vgrow=\"SOMETIMES\" />\r\n                                          <RowConstraints maxHeight=\"431.0\" minHeight=\"10.0\" prefHeight=\"41.0\" valignment=\"TOP\" vgrow=\"SOMETIMES\" />\r\n                                          <RowConstraints maxHeight=\"441.0\" minHeight=\"10.0\" prefHeight=\"224.0\" valignment=\"TOP\" vgrow=\"SOMETIMES\" />\r\n                                      </rowConstraints>\r\n                                       <children>\r\n                                          <Label text=\"No.\" />\r\n                                          <Label text=\"Name\" GridPane.rowIndex=\"1\" />\r\n                                          <Label prefHeight=\"15.0\" prefWidth=\"118.0\" text=\"Director\" GridPane.rowIndex=\"2\" />\r\n                                          <Label prefHeight=\"24.0\" prefWidth=\"138.0\" text=\"Actor&amp;Actress\" GridPane.rowIndex=\"3\" />\r\n                                          <Label text=\"Contents\" GridPane.rowIndex=\"5\" />\r\n                                          <Label text=\"Type\" GridPane.rowIndex=\"4\" />\r\n                                          <TextField fx:id=\"movieIdField\" GridPane.columnIndex=\"1\" />\r\n                                          <TextField fx:id=\"movieNameField\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"1\" />\r\n                                          <TextField fx:id=\"movieDirectorField\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"2\" />\r\n                                          <TextField fx:id=\"movieActorField\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"3\" />\r\n                                          <TextArea fx:id=\"movieIntroArea\" prefHeight=\"200.0\" prefWidth=\"200.0\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"5\" />\r\n                                          <ChoiceBox fx:id=\"movieClassNameBox\" prefWidth=\"150.0\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"4\" />\r\n                                       </children>\r\n                                       <StackPane.margin>\r\n                                          <Insets top=\"60.0\" />\r\n                                       </StackPane.margin>\r\n                                    </GridPane>\r\n                                 </children>\r\n                                 <HBox.margin>\r\n                                    <Insets bottom=\"100.0\" />\r\n                                 </HBox.margin>\r\n                              </StackPane>\r\n                           </children>\r\n                        </HBox>\r\n                     </center>\r\n                  </BorderPane>\r\n               </center></BorderPane>\r\n            <BorderPane fx:id=\"commonUserPane\" prefHeight=\"200.0\" prefWidth=\"200.0\" visible=\"false\">\r\n               <left>\r\n                  <TableView fx:id=\"commonUserTableView\" prefHeight=\"677.0\" prefWidth=\"318.0\" BorderPane.alignment=\"CENTER\">\r\n                    <columns>\r\n                      <TableColumn fx:id=\"commonUserIdColumn\" prefWidth=\"75.0\" text=\"ID\" />\r\n                      <TableColumn fx:id=\"commonUserNameColumn\" prefWidth=\"75.0\" text=\"Username\" />\r\n                    </columns>\r\n                     <columnResizePolicy>\r\n                        <TableView fx:constant=\"CONSTRAINED_RESIZE_POLICY\" />\r\n                     </columnResizePolicy>\r\n                  </TableView>\r\n               </left>\r\n               <center>\r\n                  <VBox prefHeight=\"677.0\" prefWidth=\"476.0\" styleClass=\"mainHBox\" BorderPane.alignment=\"CENTER\">\r\n                     <children>\r\n                        <HBox alignment=\"CENTER_RIGHT\" prefHeight=\"44.0\" prefWidth=\"615.0\" spacing=\"14.0\" styleClass=\"functionBar\">\r\n                           <children>\r\n                              <Button mnemonicParsing=\"false\" onAction=\"#handleNewCommonUser\" text=\"Add\" />\r\n                              <Button mnemonicParsing=\"false\" onAction=\"#handleDeleteCommonUser\" text=\"Delete\" />\r\n                              <Button mnemonicParsing=\"false\" onAction=\"#handleUpdateCommonUser\" text=\"Update\">\r\n                                 <HBox.margin>\r\n                                    <Insets right=\"14.0\" />\r\n                                 </HBox.margin>\r\n                              </Button>\r\n                           </children>\r\n                        </HBox>\r\n                        <HBox alignment=\"CENTER\" prefHeight=\"325.0\" prefWidth=\"834.0\">\r\n                           <children>\r\n                              <GridPane hgap=\"10.0\" prefHeight=\"325.0\" prefWidth=\"413.0\" vgap=\"14.0\">\r\n                                <columnConstraints>\r\n                                  <ColumnConstraints halignment=\"RIGHT\" hgrow=\"SOMETIMES\" maxWidth=\"484.08526611328125\" minWidth=\"10.0\" prefWidth=\"92.6328125\" />\r\n                                  <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"759.0203552246094\" minWidth=\"10.0\" prefWidth=\"230.3671875\" />\r\n                                </columnConstraints>\r\n                                <rowConstraints>\r\n                                  <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" valignment=\"CENTER\" vgrow=\"SOMETIMES\" />\r\n                                  <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n                                  <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n                                    <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n                                    <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n                                    <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n                                </rowConstraints>\r\n                                 <children>\r\n                                    <Label prefHeight=\"24.0\" prefWidth=\"21.0\" text=\"ID\" />\r\n                                    <Label text=\"Username\" GridPane.rowIndex=\"1\" />\r\n                                    <Label text=\"Password\" GridPane.rowIndex=\"2\" />\r\n                                    <Label text=\"ID_number\" GridPane.rowIndex=\"5\" />\r\n                                    <Label text=\"Telephone\" GridPane.rowIndex=\"4\" />\r\n                                    <Label prefHeight=\"26.0\" prefWidth=\"36.0\" text=\"Age\" GridPane.rowIndex=\"3\" />\r\n                                    <TextField fx:id=\"commonUserIdField\" prefHeight=\"29.0\" prefWidth=\"458.0\" GridPane.columnIndex=\"1\" />\r\n                                    <TextField fx:id=\"commonUserNameField\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"1\" />\r\n                                    <TextField fx:id=\"commonUserpassField\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"2\" />\r\n                                    <TextField fx:id=\"commonUserAgeField\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"3\" />\r\n                                    <TextField fx:id=\"commonUserTelField\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"4\" />\r\n                                    <TextField fx:id=\"commonUserSidField\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"5\" />\r\n                                 </children>\r\n                              </GridPane>\r\n                           </children>\r\n                           <VBox.margin>\r\n                              <Insets top=\"40.0\" />\r\n                           </VBox.margin>\r\n                        </HBox>\r\n                     </children>\r\n                  </VBox>\r\n               </center></BorderPane>\r\n            <BorderPane fx:id=\"adminPane\" prefHeight=\"200.0\" prefWidth=\"200.0\" visible=\"false\">\r\n               <left>\r\n                  <TableView fx:id=\"adminTableView\" prefHeight=\"677.0\" prefWidth=\"357.0\" BorderPane.alignment=\"CENTER\">\r\n                    <columns>\r\n                      <TableColumn fx:id=\"adminIdColumn\" prefWidth=\"75.0\" text=\"ID\" />\r\n                      <TableColumn fx:id=\"adminNameColumn\" prefWidth=\"75.0\" text=\"Name\" />\r\n                        <TableColumn fx:id=\"adminPasswordColumn\" prefWidth=\"75.0\" text=\"Password\" />\r\n                    </columns>\r\n                     <columnResizePolicy>\r\n                        <TableView fx:constant=\"CONSTRAINED_RESIZE_POLICY\" />\r\n                     </columnResizePolicy>\r\n                  </TableView>\r\n               </left>\r\n               <center>\r\n                  <VBox alignment=\"TOP_RIGHT\" prefHeight=\"200.0\" prefWidth=\"100.0\" styleClass=\"mainHBox\" BorderPane.alignment=\"CENTER\">\r\n                     <children>\r\n                        <HBox alignment=\"CENTER_RIGHT\" prefHeight=\"44.0\" prefWidth=\"484.0\" spacing=\"14.0\" styleClass=\"functionBar\">\r\n                           <children>\r\n                              <Button mnemonicParsing=\"false\" onAction=\"#handleNewAdmin\" text=\"Add\" />\r\n                              <Button mnemonicParsing=\"false\" onAction=\"#handleDeleteAdmin\" text=\"Delete\" />\r\n                              <Button mnemonicParsing=\"false\" onAction=\"#handleSubmitAdmin\" text=\"Update\">\r\n                                 <HBox.margin>\r\n                                    <Insets right=\"14.0\" />\r\n                                 </HBox.margin>\r\n                              </Button>\r\n                           </children>\r\n                        </HBox>\r\n                        <HBox alignment=\"CENTER\" prefHeight=\"127.0\" prefWidth=\"795.0\">\r\n                           <children>\r\n                              <GridPane hgap=\"10.0\" vgap=\"14.0\">\r\n                                <columnConstraints>\r\n                                  <ColumnConstraints halignment=\"RIGHT\" hgrow=\"SOMETIMES\" maxWidth=\"234.56512451171875\" minWidth=\"10.0\" prefWidth=\"145.34609985351562\" />\r\n                                  <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"338.6539001464844\" minWidth=\"10.0\" prefWidth=\"338.6539001464844\" />\r\n                                </columnConstraints>\r\n                                <rowConstraints>\r\n                                  <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n                                  <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n                                  <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n                                </rowConstraints>\r\n                                 <children>\r\n                                    <Label fx:id=\"adminIdLabel\" text=\"ID\" />\r\n                                    <Label fx:id=\"adminNameLabel\" text=\"Name\" GridPane.rowIndex=\"1\" />\r\n                                    <Label fx:id=\"adminPasswordLabel\" text=\"Password\" GridPane.rowIndex=\"2\" />\r\n                                    <TextField fx:id=\"adminIdField\" GridPane.columnIndex=\"1\" />\r\n                                    <TextField fx:id=\"adminNameField\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"1\" />\r\n                                    <TextField fx:id=\"adminPasswordField\" GridPane.columnIndex=\"1\" GridPane.rowIndex=\"2\" />\r\n                                 </children>\r\n                              </GridPane>\r\n                           </children>\r\n                           <VBox.margin>\r\n                              <Insets top=\"40.0\" />\r\n                           </VBox.margin>\r\n                        </HBox>\r\n                     </children>\r\n                  </VBox>\r\n               </center></BorderPane>\r\n         </children>\r\n      </StackPane>\r\n   </center>\r\n   <top>\r\n      <AnchorPane prefHeight=\"34.0\" prefWidth=\"1149.0\" styleClass=\"topBar\" BorderPane.alignment=\"CENTER\">\r\n         <children>\r\n            <HBox alignment=\"CENTER_LEFT\" layoutY=\"13.0\" AnchorPane.leftAnchor=\"0.0\" />\r\n            <HBox alignment=\"CENTER_RIGHT\" layoutX=\"628.0\" layoutY=\"5.0\" prefHeight=\"32.0\" prefWidth=\"671.0\" spacing=\"14.0\" AnchorPane.rightAnchor=\"7.0\">\r\n               <children>\r\n                  <Label fx:id=\"userNameLabel\" text=\"Username\">\r\n                     <font>\r\n                        <Font size=\"24.0\" />\r\n                     </font></Label>\r\n                  <Label fx:id=\"toMovieButton\" onMouseClicked=\"#handleToMovie\" text=\"Movies\">\r\n                     <font>\r\n                        <Font size=\"24.0\" />\r\n                     </font></Label>\r\n                  <Label fx:id=\"toStatisticButton\" onMouseClicked=\"#handleToStatistic\" text=\"Statistics\">\r\n                     <font>\r\n                        <Font size=\"24.0\" />\r\n                     </font></Label>\r\n                  <Label fx:id=\"toCommonUserButton\" onMouseClicked=\"#handleToCommonUser\" text=\"Users\">\r\n                     <font>\r\n                        <Font size=\"24.0\" />\r\n                     </font></Label>\r\n                  <Label fx:id=\"toAdminButton\" onMouseClicked=\"#handleToAdmin\" text=\"Admins\">\r\n                     <font>\r\n                        <Font size=\"24.0\" />\r\n                     </font></Label>\r\n                  <Label fx:id=\"logOutButton\" onMouseClicked=\"#handleLogout\" text=\"Exit\">\r\n                     <HBox.margin>\r\n                        <Insets right=\"60.0\" />\r\n                     </HBox.margin>\r\n                     <font>\r\n                        <Font size=\"24.0\" />\r\n                     </font>\r\n                  </Label>\r\n               </children>\r\n            </HBox>\r\n            <Label layoutX=\"45.0\" layoutY=\"5.0\" prefHeight=\"32.0\" prefWidth=\"263.0\" text=\"Movie Management\">\r\n               <font>\r\n                  <Font size=\"24.0\" />\r\n               </font>\r\n            </Label>\r\n         </children>\r\n      </AnchorPane>\r\n   </top>\r\n</BorderPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/org/example/scene/AdminView.fxml b/src/main/resources/org/example/scene/AdminView.fxml
--- a/src/main/resources/org/example/scene/AdminView.fxml	(revision cc0a39f6b07677981707a0dcc6b6c89b51a0ba64)
+++ b/src/main/resources/org/example/scene/AdminView.fxml	(date 1683635323750)
@@ -1,19 +1,46 @@
 <?xml version="1.0" encoding="UTF-8"?>
 
-<?import javafx.scene.text.*?>
-<?import javafx.scene.chart.*?>
-<?import javafx.scene.image.*?>
-<?import javafx.scene.shape.*?>
-<?import javafx.geometry.*?>
-<?import java.lang.*?>
-<?import java.util.*?>
-<?import javafx.scene.*?>
-<?import javafx.scene.control.*?>
-<?import javafx.scene.layout.*?>
-<BorderPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="736.0" prefWidth="1152.0" xmlns="http://javafx.com/javafx/8" xmlns:fx="http://javafx.com/fxml/1" fx:controller="org.example.scene.AdminViewController">
+<?import javafx.geometry.Insets?>
+<?import javafx.scene.chart.BarChart?>
+<?import javafx.scene.chart.CategoryAxis?>
+<?import javafx.scene.chart.NumberAxis?>
+<?import javafx.scene.control.Button?>
+<?import javafx.scene.control.ChoiceBox?>
+<?import javafx.scene.control.Label?>
+<?import javafx.scene.control.TableColumn?>
+<?import javafx.scene.control.TableView?>
+<?import javafx.scene.control.TextArea?>
+<?import javafx.scene.control.TextField?>
+<?import javafx.scene.image.Image?>
+<?import javafx.scene.image.ImageView?>
+<?import javafx.scene.layout.AnchorPane?>
+<?import javafx.scene.layout.BorderPane?>
+<?import javafx.scene.layout.ColumnConstraints?>
+<?import javafx.scene.layout.GridPane?>
+<?import javafx.scene.layout.HBox?>
+<?import javafx.scene.layout.RowConstraints?>
+<?import javafx.scene.layout.StackPane?>
+<?import javafx.scene.layout.VBox?>
+<?import javafx.scene.shape.Rectangle?>
+<?import javafx.scene.text.Font?>
+
+<BorderPane maxHeight="-Infinity" maxWidth="-Infinity" minHeight="-Infinity" minWidth="-Infinity" prefHeight="736.0" prefWidth="1152.0" xmlns="http://javafx.com/javafx/8.0.171" xmlns:fx="http://javafx.com/fxml/1" fx:controller="org.example.scene.AdminViewController">
    <center>
       <StackPane prefHeight="150.0" prefWidth="200.0" BorderPane.alignment="CENTER">
          <children>
+            <BorderPane fx:id="moviePane1" prefHeight="200.0" prefWidth="200.0">
+               <top>
+                  <HBox maxHeight="Infinity" maxWidth="Infinity" BorderPane.alignment="CENTER">
+                     <children>
+                        <ImageView cache="true" cacheHint="QUALITY" fitHeight="703.0" fitWidth="1154.0" HBox.hgrow="ALWAYS">
+                           <image>
+                              <Image url="@images/systemUse/20230509102346.png" />
+                           </image>
+                        </ImageView>
+                     </children>
+                  </HBox>
+               </top>
+            </BorderPane>
             <BorderPane fx:id="moviePane" prefHeight="200.0" prefWidth="200.0">
                <left>
                   <TableView fx:id="movieTableView" prefHeight="200.0" prefWidth="200.0" BorderPane.alignment="CENTER">
@@ -224,6 +251,187 @@
                      </children>
                   </VBox>
                </center></BorderPane>
+            <BorderPane fx:id="commentPane" prefHeight="200.0" prefWidth="200.0" visible="false">
+               <left>
+                  <TableView fx:id="commentTableView" prefHeight="677.0" prefWidth="357.0" BorderPane.alignment="CENTER">
+                     <columns>
+                        <TableColumn fx:id="commentIdColumn" prefWidth="75.0" text="ID" />
+                        <TableColumn fx:id="commentNameColumn" prefWidth="75.0" text="Name" />
+                        <TableColumn fx:id="commentMovieColumn" prefWidth="75.0" text="Movie" />
+                     </columns>
+                     <columnResizePolicy>
+                        <TableView fx:constant="CONSTRAINED_RESIZE_POLICY" />
+                     </columnResizePolicy>
+                  </TableView>
+               </left>
+               <center>
+                  <VBox alignment="TOP_RIGHT" prefHeight="200.0" prefWidth="100.0" styleClass="mainHBox" BorderPane.alignment="CENTER">
+                     <children>
+                        <HBox alignment="CENTER" prefHeight="127.0" prefWidth="795.0">
+                           <VBox.margin>
+                              <Insets top="40.0" />
+                           </VBox.margin>
+                           <children>
+                              <Label alignment="TOP_LEFT" prefHeight="137.0" prefWidth="107.0" text="Comment">
+                                 <font>
+                                    <Font size="22.0" />
+                                 </font>
+                              </Label>
+                              <Label fx:id="commentField" alignment="TOP_LEFT" prefHeight="127.0" prefWidth="401.0" style="-fx-background-color: white;" wrapText="true" />
+                           </children>
+                        </HBox>
+                        <VBox alignment="TOP_RIGHT" minHeight="-Infinity" minWidth="-Infinity" prefHeight="375.0" prefWidth="797.0">
+                           <children>
+                              <StackPane minHeight="-Infinity" minWidth="-Infinity" prefHeight="409.0" prefWidth="797.0">
+                                 <children>
+                                    <Rectangle fx:id="commentBorder" arcHeight="5.0" arcWidth="5.0" fill="WHITE" height="298.0" stroke="BLACK" strokeType="INSIDE" width="492.0" />
+                                    <ImageView fx:id="commontCover" fitHeight="293.0" fitWidth="476.0" pickOnBounds="true" />
+                                 </children>
+                                 <VBox.margin>
+                                    <Insets bottom="10.0" top="30.0" />
+                                 </VBox.margin>
+                              </StackPane>
+                           </children>
+                        </VBox>
+                     </children>
+                  </VBox>
+               </center>
+            </BorderPane>
+            <BorderPane fx:id="statisticPane" prefHeight="200.0" prefWidth="200.0" visible="false">
+               <right>
+                  <VBox prefHeight="699.0" prefWidth="178.0" BorderPane.alignment="CENTER">
+                     <BorderPane.margin>
+                        <Insets right="50.0" />
+                     </BorderPane.margin>
+                     <children>
+                        <Button mnemonicParsing="false" onAction="#handleToRate" prefHeight="49.0" prefWidth="168.0" text="Ratings">
+                           <VBox.margin>
+                              <Insets bottom="10.0" />
+                           </VBox.margin>
+                           <font>
+                              <Font size="24.0" />
+                           </font>
+                        </Button>
+                        <Button mnemonicParsing="false" onAction="#handleToType" prefHeight="49.0" prefWidth="169.0" text="Movie Type">
+                           <VBox.margin>
+                              <Insets bottom="10.0" />
+                           </VBox.margin>
+                           <font>
+                              <Font size="24.0" />
+                           </font>
+                        </Button>
+                        <Button mnemonicParsing="false" onAction="#handleToAge" prefHeight="49.0" prefWidth="169.0" text="Users' Ages">
+                           <font>
+                              <Font size="24.0" />
+                           </font>
+                        </Button>
+                     </children>
+                  </VBox>
+               </right>
+               <center>
+                  <StackPane prefHeight="150.0" prefWidth="200.0" BorderPane.alignment="CENTER">
+                     <children>
+                        <BorderPane fx:id="ratingPane" prefHeight="200.0" prefWidth="200.0">
+                           <center>
+                              <VBox alignment="TOP_RIGHT" prefHeight="699.0" prefWidth="759.0" styleClass="mainHBox" BorderPane.alignment="CENTER">
+                                 <children>
+                                    <BarChart fx:id="movieBarChart" prefHeight="417.0" prefWidth="854.0">
+                                       <xAxis>
+                                          <CategoryAxis autoRanging="false" side="BOTTOM" tickLabelFill="#a63e3e" tickLabelRotation="-64.0" fx:id="xAxis">
+                                             <tickLabelFont>
+                                                <Font size="12.0" />
+                                             </tickLabelFont></CategoryAxis>
+                                       </xAxis>
+                                       <yAxis>
+                                          <NumberAxis fx:id="yAxis" side="LEFT" tickLabelFill="#a63e3e" tickLabelGap="1.0" tickUnit="1.0" upperBound="5.0">
+                                             <tickLabelFont>
+                                                <Font size="12.0" />
+                                             </tickLabelFont></NumberAxis>
+                                       </yAxis>
+                                       <VBox.margin>
+                                          <Insets top="150.0" />
+                                       </VBox.margin>
+                                    </BarChart>
+                                 </children>
+                                 <padding>
+                                    <Insets left="100.0" right="100.0" />
+                                 </padding>
+                              </VBox>
+                           </center>
+                           <left>
+                              <TableView fx:id="statisticTableView" prefHeight="699.0" prefWidth="225.0" BorderPane.alignment="CENTER">
+                                 <columns>
+                                    <TableColumn fx:id="statisticMovieColumn" prefWidth="75.0" text="Movie" />
+                                 </columns>
+                                 <columnResizePolicy>
+                                    <TableView fx:constant="CONSTRAINED_RESIZE_POLICY" />
+                                 </columnResizePolicy>
+                              </TableView>
+                           </left>
+                        </BorderPane>
+                        <BorderPane fx:id="movieTypePane" prefHeight="200.0" prefWidth="200.0" visible="false">
+                           <center>
+                              <VBox alignment="TOP_RIGHT" prefHeight="699.0" prefWidth="759.0" styleClass="mainHBox" BorderPane.alignment="CENTER">
+                                 <children>
+                                    <BarChart fx:id="typeBarChart" prefHeight="417.0" prefWidth="854.0">
+                                       <xAxis>
+                                          <CategoryAxis fx:id="typexAxis" autoRanging="false" side="BOTTOM" tickLabelFill="#a63e3e" tickLabelRotation="-64.0">
+                                             <tickLabelFont>
+                                                <Font size="12.0" />
+                                             </tickLabelFont></CategoryAxis>
+                                       </xAxis>
+                                       <yAxis>
+                                          <NumberAxis fx:id="typeyAxis" side="LEFT" tickLabelFill="#a63e3e" tickLabelGap="1.0" tickUnit="1.0" upperBound="5.0">
+                                             <tickLabelFont>
+                                                <Font size="12.0" />
+                                             </tickLabelFont></NumberAxis>
+                                       </yAxis>
+                                       <VBox.margin>
+                                          <Insets top="150.0" />
+                                       </VBox.margin>
+                                    </BarChart>
+                                 </children>
+                                 <padding>
+                                    <Insets left="100.0" right="100.0" />
+                                 </padding>
+                              </VBox>
+                           </center>
+                        </BorderPane>
+                        <BorderPane fx:id="userAgePane" prefHeight="200.0" prefWidth="200.0" visible="false">
+                           <center>
+                              <VBox alignment="TOP_RIGHT" prefHeight="699.0" prefWidth="759.0" styleClass="mainHBox" BorderPane.alignment="CENTER">
+                                 <children>
+                                    <BarChart fx:id="ageBarChart" prefHeight="417.0" prefWidth="854.0">
+                                       <xAxis>
+                                          <CategoryAxis fx:id="agexAxis" side="BOTTOM" tickLabelFill="#a63e3e" tickLabelRotation="-64.0">
+                                             <tickLabelFont>
+                                                <Font size="12.0" />
+                                             </tickLabelFont></CategoryAxis>
+                                       </xAxis>
+                                       <yAxis>
+                                          <NumberAxis fx:id="ageyAxis" side="LEFT" tickLabelFill="#a63e3e" tickLabelGap="1.0" tickUnit="1.0" upperBound="5.0">
+                                             <tickLabelFont>
+                                                <Font size="12.0" />
+                                             </tickLabelFont></NumberAxis>
+                                       </yAxis>
+                                    </BarChart>
+                                 </children>
+                                 <padding>
+                                    <Insets left="100.0" right="100.0" />
+                                 </padding>
+                                 <BorderPane.margin>
+                                    <Insets top="150.0" />
+                                 </BorderPane.margin>
+                              </VBox>
+                           </center>
+                           <StackPane.margin>
+                              <Insets />
+                           </StackPane.margin>
+                        </BorderPane>
+                     </children>
+                  </StackPane>
+               </center>
+            </BorderPane>
          </children>
       </StackPane>
    </center>
@@ -231,17 +439,22 @@
       <AnchorPane prefHeight="34.0" prefWidth="1149.0" styleClass="topBar" BorderPane.alignment="CENTER">
          <children>
             <HBox alignment="CENTER_LEFT" layoutY="13.0" AnchorPane.leftAnchor="0.0" />
-            <HBox alignment="CENTER_RIGHT" layoutX="628.0" layoutY="5.0" prefHeight="32.0" prefWidth="671.0" spacing="14.0" AnchorPane.rightAnchor="7.0">
+            <HBox alignment="CENTER_RIGHT" layoutX="628.0" layoutY="5.0" prefHeight="32.0" prefWidth="787.0" spacing="14.0" AnchorPane.rightAnchor="7.0">
                <children>
-                  <Label fx:id="userNameLabel" text="Username">
+                  <Label fx:id="userNameLabel" prefHeight="32.0" prefWidth="121.0" text="Username">
                      <font>
                         <Font size="24.0" />
                      </font></Label>
-                  <Label fx:id="toMovieButton" onMouseClicked="#handleToMovie" text="Movies">
+                  <Label fx:id="toMovieButton" onMouseClicked="#handleToMovie" prefHeight="32.0" prefWidth="88.0" text="Movies">
                      <font>
                         <Font size="24.0" />
                      </font></Label>
-                  <Label fx:id="toStatisticButton" onMouseClicked="#handleToStatistic" text="Statistics">
+                  <Label fx:id="toCommentButton" onMouseClicked="#handleToComment" prefHeight="32.0" prefWidth="128.0" text="Comments">
+                     <font>
+                        <Font size="24.0" />
+                     </font>
+                  </Label>
+                  <Label fx:id="toStatisticButton" onMouseClicked="#handleToStatistic" prefHeight="32.0" prefWidth="103.0" text="Statistics">
                      <font>
                         <Font size="24.0" />
                      </font></Label>
@@ -249,7 +462,7 @@
                      <font>
                         <Font size="24.0" />
                      </font></Label>
-                  <Label fx:id="toAdminButton" onMouseClicked="#handleToAdmin" text="Admins">
+                  <Label fx:id="toAdminButton" onMouseClicked="#handleToAdmin" prefHeight="32.0" prefWidth="91.0" text="Admins">
                      <font>
                         <Font size="24.0" />
                      </font></Label>
@@ -263,7 +476,7 @@
                   </Label>
                </children>
             </HBox>
-            <Label layoutX="45.0" layoutY="5.0" prefHeight="32.0" prefWidth="263.0" text="Movie Management">
+            <Label layoutX="13.0" layoutY="5.0" prefHeight="32.0" prefWidth="237.0" text="Movie Management">
                <font>
                   <Font size="24.0" />
                </font>
